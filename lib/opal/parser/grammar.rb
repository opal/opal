#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-90,-88,614,57,58,271,-527,602,61,271,59,60,62,23,24,66',
'67,-453,271,796,-64,578,22,28,27,91,90,92,93,-94,644,17,540,204,205',
'539,856,7,41,6,9,95,94,571,85,50,87,86,88,844,89,96,97,449,81,82,83',
'-75,38,39,-444,681,548,643,592,613,-88,-444,604,603,204,205,-527,102',
'-92,266,741,757,101,-83,36,571,571,30,266,-89,52,526,738,54,571,32,270',
'-527,-89,40,270,-95,-84,774,-90,-91,-95,18,266,270,-80,571,79,73,75',
'76,77,78,-90,-444,-90,74,80,-90,343,342,63,64,65,56,51,714,53,-92,57',
'58,37,84,-86,61,-94,59,60,62,257,258,66,67,343,342,-529,-83,-92,256',
'28,27,91,90,92,93,739,102,218,570,307,540,101,787,542,41,-84,547,95',
'94,591,85,50,87,86,88,260,89,96,97,-529,81,82,83,-83,38,39,786,-92,102',
'-92,266,-83,-92,101,102,102,570,570,-81,101,101,-87,-84,102,-82,570',
'209,608,101,213,-84,602,52,714,-91,54,-91,255,-82,-91,102,40,570,879',
'714,101,102,602,713,217,577,101,578,-84,79,73,75,76,77,78,204,205,540',
'74,80,542,612,-93,63,64,65,56,51,-91,53,597,57,58,37,84,644,61,598,59',
'60,62,257,258,66,67,204,205,604,603,605,256,289,293,91,90,92,93,602',
'226,218,226,-82,226,604,603,609,41,602,643,95,94,584,85,50,87,86,88',
'773,89,96,97,602,81,82,83,607,38,39,102,-530,713,204,205,101,540,-529',
'263,542,-82,102,517,713,588,264,101,102,-82,518,209,586,101,213,796',
'73,52,-447,583,54,604,603,615,74,-447,40,616,696,-90,-85,604,603,600',
'217,802,-83,803,307,79,73,75,76,77,78,604,603,554,74,80,793,204,205',
'63,64,65,56,51,516,53,587,57,58,37,84,557,61,582,59,60,62,257,258,66',
'67,340,339,343,342,806,256,289,293,91,90,92,93,-272,925,218,-272,201',
'807,620,-272,926,290,-272,202,95,94,557,85,50,87,86,88,640,89,96,97',
'526,81,82,83,644,810,644,226,230,235,236,237,232,234,242,243,238,239',
'-448,219,220,588,-449,240,241,-448,404,287,805,-449,284,-272,924,52',
'-272,200,54,643,223,643,229,-86,225,224,221,222,233,231,227,-94,228',
'521,522,523,580,79,73,75,76,77,78,581,204,205,74,80,244,-450,-228,63',
'64,65,56,51,-450,53,587,57,58,294,84,784,61,796,59,60,62,257,258,66',
'67,104,105,106,107,108,256,289,293,91,90,92,93,102,-452,218,-279,-325',
'101,579,620,-452,41,-279,-325,95,94,819,85,50,87,86,88,820,89,96,97',
'-451,81,82,83,619,38,39,-451,226,230,235,236,237,232,234,242,243,238',
'239,-444,219,220,-441,102,240,241,-444,209,101,-441,213,-446,-452,52',
'-279,-325,54,822,-446,223,622,229,40,225,224,221,222,233,231,227,217',
'228,343,342,-279,79,73,75,76,77,78,-279,741,102,74,80,486,244,101,63',
'64,65,56,51,738,53,-452,57,58,37,84,567,61,-452,59,60,62,257,258,66',
'67,299,300,301,-453,203,256,289,293,91,90,92,93,-279,530,218,343,342',
'412,-279,-279,531,41,414,413,95,94,566,85,50,87,86,88,688,89,96,97,624',
'81,82,83,-452,38,39,-278,-80,-87,557,-278,226,-278,-278,739,-88,-95',
'-278,-530,-278,445,-529,-530,102,-530,824,209,446,101,213,-279,447,52',
'102,555,54,-280,-280,101,484,-82,40,223,-280,-280,554,225,224,-90,217',
'399,400,401,625,79,73,75,76,77,78,696,-278,551,74,80,-278,660,-278,63',
'64,65,56,51,486,53,447,57,58,37,84,-258,61,832,59,60,62,257,258,66,67',
'623,-280,-280,763,-84,256,289,293,91,90,92,93,-92,834,218,815,796,340',
'339,343,342,41,226,837,95,94,838,85,50,87,86,88,840,89,96,97,842,81',
'82,83,226,38,39,559,-81,335,333,332,844,334,815,796,-89,223,544,846',
'894,225,224,221,222,741,689,209,543,690,213,-260,776,52,307,223,54,738',
'226,225,224,559,40,335,333,332,562,334,529,528,217,527,266,659,565,79',
'73,75,76,77,78,266,307,307,74,80,857,340,339,343,342,894,56,858,859',
'53,741,860,275,37,84,63,64,65,8,51,862,863,738,57,58,681,519,865,61',
'512,59,60,62,23,24,66,67,-258,869,739,511,668,22,28,27,91,90,92,93,493',
'874,17,340,339,343,342,226,7,41,510,9,95,94,876,85,50,87,86,88,-63,89',
'96,97,694,81,82,83,493,38,39,559,493,335,333,332,486,334,223,882,884',
'739,225,224,221,222,559,885,335,333,332,36,334,307,30,484,226,52,482',
'214,54,559,32,335,333,332,40,334,451,450,562,848,849,898,18,850,96,97',
'565,79,73,75,76,77,78,562,-261,670,74,80,448,-75,900,812,415,404,56',
'-259,402,53,-530,557,226,37,84,63,64,65,910,51,911,390,387,57,58,759',
'916,837,61,918,59,60,62,23,24,66,67,104,105,106,107,108,22,28,27,91',
'90,92,93,842,842,17,104,105,106,107,108,791,41,671,307,95,94,226,85',
'50,87,86,88,298,89,96,97,673,81,82,83,927,38,39,297,226,230,235,236',
'237,232,234,242,243,238,239,226,219,220,704,245,240,241,933,209,706',
'681,213,688,664,52,199,198,54,197,196,223,253,229,40,225,224,221,222',
'233,231,227,18,228,709,943,842,79,73,75,76,77,78,945,946,109,74,80,717',
'244,641,63,64,65,56,51,578,53,98,57,58,37,84,533,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88',
',89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243,238',
'239,,219,220,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82',
'83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240',
'241,,209,,,213,,,52,,,54,,255,223,,229,40,225,224,221,222,233,231,227',
'217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,226',
'230,235,236,237,232,234,242,243,238,239,,219,220,,,240,241,,209,,,213',
',,52,,,54,,649,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79',
'73,75,76,77,78,,,,74,80,,244,,-228,,,56,,,53,,,,37,84,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17',
',,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230',
'235,236,237,232,234,242,243,238,239,,219,220,,,240,241,,36,,,30,,,52',
',,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75',
'76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85',
'50,87,86,88,260,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234',
'242,243,238,239,,219,220,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40',
'225,224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240',
'241,,209,,,213,214,,52,,,54,,,223,,229,40,225,224,221,222,233,231,227',
'18,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,',
',,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235',
'236,237,232,234,242,243,238,239,,219,220,,,240,241,,209,,,213,,,52,',
',54,,,223,,229,40,225,224,221,222,233,231,227,217,228,,,,79,73,75,76',
'77,78,,,,74,80,,244,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232',
'234,242,243,238,239,,219,220,,,240,241,,36,,,30,,,52,,,54,,32,223,,229',
'40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80',
',244,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243',
'238,239,,219,220,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224',
'221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81',
'82,83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,',
',240,241,,209,,,213,,,52,,,54,,255,223,253,229,40,225,224,221,222,233',
'231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,',
'53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92',
'93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38',
'39,,226,230,235,236,237,232,234,242,243,238,239,,219,220,,,240,241,',
'209,,,213,,,52,,,54,,255,223,253,229,40,225,224,221,222,233,231,227',
'217,228,,,,79,73,75,76,77,78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,',
',,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,226,230',
'235,236,237,232,234,242,243,238,239,,219,220,,,240,241,,209,,,213,,',
'52,,,54,,255,223,253,229,40,225,224,221,222,233,231,227,217,228,,,,79',
'73,75,76,77,78,,,,74,80,,244,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7',
'41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235',
'236,237,232,234,242,243,238,239,,219,220,,,240,241,,36,,,30,,,52,,,54',
',32,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77',
'78,,,,74,80,,244,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242',
'243,238,239,,219,220,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225',
'224,221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,244,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96',
'97,,81,82,83,,38,39,,226,230,235,236,237,232,234,242,243,238,239,,-550',
'-550,,,240,241,,209,,,213,,,52,,,54,,,223,253,229,40,225,224,221,222',
'233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83',
',38,39,,226,230,235,236,237,232,234,242,243,238,239,,-550,-550,,,240',
'241,,209,,,213,,,52,,,54,,649,223,253,229,40,225,224,221,222,233,231',
'227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,226,-550,-550,-550,-550,232,234,,,-550,-550,,,,,,240,241,,36,,,279',
',,52,,,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62',
'257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,',
'85,50,87,86,88,,89,96,97,,81,82,83,326,,335,333,332,,334,,,,,,,,,,,',
',,,,,287,,,284,,,52,,,54,,283,,,,,337,326,,335,333,332,,334,340,339',
'343,342,79,73,75,76,77,78,,778,,74,80,,,,63,64,65,56,51,,53,,57,58,294',
'84,,61,337,59,60,62,257,258,66,67,340,339,343,342,,256,289,293,91,90',
'92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,326',
',335,333,332,,334,,,,,,,,,,,,,,,,,287,,,213,,,52,,,54,,,,,,,337,,550',
',,,,,340,339,343,342,79,73,75,76,77,78,,,,74,80,,,,296,,,56,,,53,,,',
'294,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81',
'82,83,,38,39,,226,230,235,236,237,232,234,242,,238,239,,,,,,240,241',
',36,,,30,,,52,,,54,,32,223,,229,40,225,224,221,222,233,231,227,18,228',
',,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,326,,335,333,332,,334,,',
',,,,,,,,,,,,,,700,,,213,226,,52,,,54,,,,,,,337,321,,,240,241,,,340,339',
'343,342,79,73,75,76,77,78,,223,,74,80,225,224,221,222,,,56,,,53,,,,294',
'84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,36,,,30,,,52,,,54,,32,223,,229',
'40,225,224,221,222,,,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,,,,,',
'56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,36,,,30,,,52,,,54',
',32,223,,229,40,225,224,221,222,,,227,18,228,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67',
',,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88',
',89,96,97,,81,82,83,,38,39,,226,230,235,236,237,232,234,,,238,239,,',
',,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221,222,233,231',
'227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,',
'218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
',,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,,,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
',,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223,,229,40,225,224,221',
'222,,,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
'-550,-550,-550,-550,232,234,,,-550,-550,,,,,,240,241,,209,,,213,,,52',
',,54,,649,223,253,229,40,225,224,221,222,233,231,227,217,228,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226,-550,-550,-550',
'-550,232,234,,,-550,-550,,,,,,240,241,,36,,,30,,,52,,,54,,32,223,,229',
'40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,226,-550,-550,-550,-550,232,234,,,-550',
'-550,,,,,,240,241,,36,,,30,,,52,,,54,,32,223,,229,40,225,224,221,222',
'233,231,227,18,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93',
',,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,226',
'-550,-550,-550,-550,232,234,,,-550,-550,,,,,,240,241,,209,,,213,,,52',
',,54,,,223,,229,40,225,224,221,222,233,231,227,18,228,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,260,89,96,97,,81,82,83,,38,39,,226,-550,-550,-550,-550,232,234',
',,-550,-550,,,,,,240,241,,209,,,213,,,52,,,54,,255,223,,229,40,225,224',
'221,222,233,231,227,217,228,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81',
'82,83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,,223',
',229,40,225,224,221,222,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28',
'27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,',
'81,82,83,,38,39,,226,,,,,,,,,,,,,,,,240,241,,209,,,213,,,52,,,54,,255',
'223,,229,40,225,224,221,222,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,102,,,,,101,56,,,53,,,,37,84,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,355,,',
'30,,,52,,,54,,32,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289',
'293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,360,,89,96,97,',
'81,82,83,,,,,,,,,,,,,,,,,,,,,366,,,361,,,213,,,52,,,54,,,,,,,,,,,,,',
',,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,294,84',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,',
'95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,',
'37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81',
'82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,',
'18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84',
',61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,',
',41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,',
',,,,,,,209,,,213,,,52,,,54,,649,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,',
'89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,762,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,905',
',,213,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,294,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,91,90,92,93,,,17,,,,,,7,41,6,9,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,404,56,,,53,,,,37,84',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,',
'22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92',
'93,,,17,,,,,,7,41,6,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85',
'50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213',
',,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,',
',,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,421,,,,40,,,,,,,',
'217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,',
',95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,',
',,209,,,213,,,52,,,54,,421,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,',
',74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,',
',218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39',
',,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,',
',213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,',
',,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,',
',,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,253,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,',
',41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,',
',,,,,,,209,,,213,,453,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94',
',85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,',
',213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41',
',,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,',
',,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,',
',,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,',
'40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93',
',,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,',
',,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258',
'66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52',
',,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,649,,253,,40,,,,',
',,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,',
',,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,',
',,,,,,,,,,,,,209,,,213,,,52,,,54,,,,253,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92',
'93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,253,,40,,,,,,,,217',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61',
',59,60,62,257,258,66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,',
'95,94,,85,50,87,86,88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,209,,,213,,,502,,,54,,255,,253,,40,,,,,,,,217,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258',
'66,67,,,,,,256,28,27,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,260,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,506',
'52,,,54,,255,,253,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89',
'96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,279,,,52,',
',54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92',
'93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39',
',,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91',
'90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83',
',,,,,,,,,,,,,,,,,,,,,,,287,,,213,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75',
'76,77,78,,,,74,80,,,,514,,,56,,,53,,,,294,84,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,279,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67',
',,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,88',
',89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,,,54,,,,,',
',,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,290,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,',
',,,,,,,,,287,,,284,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,294,84,,61,,59,60,62,257,258,66,67',
',,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50,87,86,360',
',89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,361,,,213,,,52,,,54,,,,,',
',,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218',
',,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,',
',,,,,,,,,,,,209,,,213,,,52,,,54,,421,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,255,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293',
'91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82',
'83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,255,,,,40,,,,,,,',
'217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,',
'95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,',
',209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,',
'256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96',
'97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40',
',,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,',
'218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,',
',,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257',
'258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,290,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,,,,,,,,,,,,,,,,,,,,,,,287,,,284,,,52,',
',54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,294,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,,41,,,95,94,,85,50',
'87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90',
'92,93,,,17,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41',
',9,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87',
'86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,37,84,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,91,90,92,93,,,17,,,,,,7,41,,9,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90,92,93,,,218,,',
',,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,',
',,,,,,,,,,209,,,213,533,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,,37,84,63,64,65,8,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,17,,,,,,7,41,,9,95',
'94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,36',
',,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256',
'289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97',
',81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,',
',,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,84,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,91,90,92,93,,,218,,,,',
',,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,',
',,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,84,,61,,59,60,62,257,258,66',
'67,,,,,,256,289,293,91,90,92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86',
'88,,89,96,97,,81,82,83,,38,39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54',
',,,,,40,,,,,,,,217,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,84,,61,,59,60,62,257,258,66,67,,,,,,256,289,293,91,90',
'92,93,,,218,,,,,,,41,,,95,94,,85,50,87,86,88,,89,96,97,,81,82,83,,38',
'39,,,,,,,,,,,,,,,,,,,,,209,,,213,,,52,,,54,,,,,,40,,,,,,,,217,,,,,79',
'73,75,76,77,78,,,,74,80,,,,-444,,,56,,,53,-444,-444,-444,37,84,-444',
'-444,-444,751,-444,335,333,332,741,334,,,-444,,-444,-444,-444,,,,738',
',,,-444,-444,,-444,-444,-444,-444,-444,,,,,,,,,,,337,,,,,,,,340,339',
'343,342,,,-444,-444,-444,-444,-444,-444,-444,-444,-444,-444,-444,-444',
'-444,-444,,,-444,-444,-444,,-444,-444,,,-444,,,-444,,-444,,-444,739',
'-444,,-444,-444,-444,-444,-444,-444,-444,,-444,,-444,,,,,,,,,,,,,-444',
'-444,-444,-444,,-444,-278,-444,-444,,,-444,,-278,-278,-278,,,,-278,-278',
'751,-278,335,333,332,741,334,,,,,,,,,,,738,,,,-278,-278,,-278,-278,-278',
'-278,-278,,,,,,,,,,,337,,,,,,,,340,339,343,342,,,-278,-278,-278,-278',
'-278,-278,-278,-278,-278,-278,-278,-278,-278,-278,,,-278,-278,-278,',
'633,,,,-278,,,,,,,-278,739,-278,,-278,-278,-278,-278,-278,-278,-278',
',-278,,-278,,,,,,,,,,,,,-278,-278,,-85,,-278,-278,,-278,,,-93,,-278',
'-278,-278,,,-278,-278,-278,751,-278,335,333,332,741,334,,,,,-278,-278',
',,,,738,,,,-278,-278,,-278,-278,-278,-278,-278,,,,,,,,,,,337,736,,,',
',,,340,339,343,342,,,-278,-278,-278,-278,-278,-278,-278,-278,-278,-278',
'-278,-278,-278,-278,,,-278,-278,-278,,633,-278,,,-278,,,-278,,-278,',
'-278,739,-278,,-278,-278,-278,-278,-278,-278,-278,,-278,,-278,,,,,,',
',,,,,,-278,-278,-278,-278,,-278,-533,,-278,,,-93,,-533,-533,-533,,,-533',
'-533,-533,751,-533,335,333,332,741,334,,,,-533,-533,-533,,,,,738,,,',
'-533,-533,,-533,-533,-533,-533,-533,,,,,,,,,,,337,736,,,,,,,340,339',
'343,342,,,-533,-533,-533,-533,-533,-533,-533,-533,-533,-533,-533,-533',
'-533,-533,,,-533,-533,-533,,775,-533,,,-533,,,-533,,-533,,-533,739,-533',
',-533,-533,-533,-533,-533,-533,-533,,-533,-533,-533,,,,,,,,,,,,,-533',
'-533,-533,-533,,-533,-533,,-533,,,-91,,-533,-533,-533,,,,-533,-533,',
'-533,,,,,,,,,-533,,,,,,,,,,,-533,-533,,-533,-533,-533,-533,-533,,,,',
',,,,,,,,,,,,,,,,,,,,-533,-533,-533,-533,-533,-533,-533,-533,-533,-533',
'-533,-533,-533,-533,,,-533,-533,-533,,630,,,,-533,,,,,,,-533,,-533,',
'-533,-533,-533,-533,-533,-533,-533,,-533,-533,-533,,,,,,,,,,,,,-533',
'-533,,-83,,-533,-441,,-533,,,-91,,-441,-441,-441,,,-441,-441,-441,,-441',
',,,,,,,-441,,-441,-441,-441,,,,,,,,-441,-441,,-441,-441,-441,-441,-441',
',,,,,,,,,,,,,,,,,,,,,,,,-441,-441,-441,-441,-441,-441,-441,-441,-441',
'-441,-441,-441,-441,-441,,,-441,-441,-441,,-441,-441,,,-441,,,-441,',
'-441,,-441,,-441,,-441,-441,-441,-441,-441,-441,-441,,-441,,-441,,,',
',,,,,,,,,-441,-441,-441,-441,,-441,-535,-441,-441,,,-441,,-535,-535',
'-535,,,-535,-535,-535,,-535,,,,,,,,,-535,-535,-535,-535,,,,,,,,-535',
'-535,,-535,-535,-535,-535,-535,,,,,,,,,,,,,,,,,,,,,,,,,-535,-535,-535',
'-535,-535,-535,-535,-535,-535,-535,-535,-535,-535,-535,,,-535,-535,-535',
',,-535,,,-535,,,-535,,-535,,-535,,-535,,-535,-535,-535,-535,-535,-535',
'-535,,-535,-535,-535,,,,,,,,,,,,,-535,-535,-535,-535,-534,-535,,-535',
'-535,,,-534,-534,-534,,,-534,-534,-534,,-534,,,,,,,,,-534,-534,-534',
'-534,,,,,,,,-534,-534,,-534,-534,-534,-534,-534,,,,,,,,,,,,,,,,,,,,',
',,,,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534,-534',
'-534,,,-534,-534,-534,,,-534,,,-534,,,-534,,-534,,-534,,-534,,-534,-534',
'-534,-534,-534,-534,-534,,-534,-534,-534,,,,,,,,,,,,,-534,-534,-534',
'-534,-273,-534,,-534,-534,,,-273,-273,-273,,,-273,-273,-273,,-273,,',
',,,,,,,-273,-273,-273,,,,,,,,-273,-273,,-273,-273,-273,-273,-273,,,',
',,,,,,,,,,,,,,,,,,,,,-273,-273,-273,-273,-273,-273,-273,-273,-273,-273',
'-273,-273,-273,-273,,,-273,-273,-273,,,-273,,,-273,,,-273,,-273,,-273',
',-273,,-273,-273,-273,-273,-273,-273,-273,,-273,,-273,,,,,,,,,,,,,-273',
'-273,-273,-273,-286,-273,,-273,-273,,,-286,-286,-286,,,-286,-286,-286',
',-286,,,,,,,,,,-286,-286,,,,,,,,,-286,-286,,-286,-286,-286,-286,-286',
',,,,,,,,,,,,,,,,,,,,,,,,-286,-286,-286,-286,-286,-286,-286,-286,-286',
'-286,-286,-286,-286,-286,,,-286,-286,-286,,,-286,,275,-286,,,-286,,-286',
',-286,,-286,,-286,-286,-286,-286,-286,-286,-286,,-286,,-286,,,,,,,,',
',,,,-286,-286,-286,-286,-549,-286,,,-286,,,-549,-549,-549,,,-549,-549',
'-549,,-549,,,,,,,,,-549,-549,-549,,,,,,,,,-549,-549,,-549,-549,-549',
'-549,-549,,,,,,,,,,,,,,,,,,,,,,,,,-549,-549,-549,-549,-549,-549,-549',
'-549,-549,-549,-549,-549,-549,-549,,,-549,-549,-549,,,-549,,266,-549',
',,-549,,-549,,-549,,-549,,-549,-549,-549,-549,-549,-549,-549,,-549,-549',
'-549,,,,,,,,,,,,,-549,-549,-549,-549,-374,-549,,,-549,,,-374,-374,-374',
',,-374,-374,-374,,-374,,,,,,,,,-374,-374,-374,,,,,,,,,-374,-374,,-374',
'-374,-374,-374,-374,,,,,,,,,,,,,,,,,,,,,,,,,-374,-374,-374,-374,-374',
'-374,-374,-374,-374,-374,-374,-374,-374,-374,,,-374,-374,-374,,,-374',
',266,-374,,,-374,,-374,,-374,,-374,,-374,-374,-374,-374,-374,-374,-374',
',-374,-374,-374,,,,,,,,,,,,,-374,-374,-374,-374,-549,-374,,,-374,,,-549',
'-549,-549,,,-549,-549,-549,,-549,,,,,,,,,,-549,,,,,,,,,,-549,-549,,-549',
'-549,-549,-549,-549,,,,,,,,,,,,,,-549,,,,,,,-549,-549,-549,,,-549,-549',
'-549,,-549,,,,,,-549,,,,-549,,,-549,,,,,266,-549,-549,-549,,-549,-549',
'-549,-549,-549,,,,,,,,,,,,,-549,,,,,,,,,,,,,-549,,-549,,,-549,,,,,-549',
',,,,,,-549,,,,,266,-549,,,,,,,,,,,,,,,,,,,,,-549,,,,,,,,,,,,,-549,,-549',
',,-549,157,168,158,181,154,174,164,163,189,192,179,162,161,156,182,190',
'191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172',
'171,184,185,186,187,188,152,159,150,151,148,149,,112,114,,,113,,,,,',
',,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133',
',,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147',
'193,,,,,,,,,,80,157,168,158,181,154,174,164,163,189,192,179,162,161',
'156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180',
'165,153,172,171,184,185,186,187,188,152,159,150,151,148,149,,112,114',
',,113,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145',
'146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,,,147,193,,,,,,,,,,80,157,168,158,181,154,174,164,163,189,192',
'179,162,161,156,182,190,191,166,155,169,173,175,167,160,,,,176,183,178',
'177,170,180,165,153,172,171,184,185,186,187,188,152,159,150,151,148',
'149,,112,114,,,113,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125',
'126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,,,147,193,,,,,,,,,,80,157,168,158,181,154,174,164',
'163,189,192,179,162,161,156,182,190,191,166,155,169,173,175,167,160',
',,,176,183,178,177,170,180,165,153,172,171,184,185,186,187,188,152,159',
'150,151,148,149,,112,114,111,,113,,,,,,,,,,143,144,,140,122,123,124',
'131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,,,147,193,,,,,,,,,,80,157,168,158',
'181,154,174,164,163,189,192,179,162,161,156,182,190,191,166,155,169',
'173,175,167,160,,,,176,183,178,177,170,180,165,153,172,171,184,185,186',
'187,188,152,159,150,151,148,149,,112,114,397,396,113,,398,,,,,,,,143',
'144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,',
',,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147,157',
'168,158,181,154,174,164,163,189,192,179,162,161,156,182,190,191,166',
'155,169,173,175,167,160,,,,176,183,178,375,374,376,373,153,172,171,184',
'185,186,187,188,152,159,150,151,371,372,,369,114,87,86,370,,89,,,,,',
',,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133',
',,,,,380,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
',,147,157,168,158,181,154,174,164,163,189,192,179,162,161,156,182,190',
'191,166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172',
'171,184,185,186,187,188,152,159,150,151,148,149,,112,114,,,113,,,,,',
',,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133',
',,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,,,147',
'157,168,158,181,154,174,164,163,189,192,179,162,161,156,182,190,191',
'166,155,169,173,175,167,160,,,,176,183,178,177,170,180,165,153,172,171',
'184,185,186,187,188,152,159,150,151,148,149,,112,114,397,396,113,,398',
',,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132',
'133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'490,433,147,,491,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125',
'126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,728,439,147,,726,,,,,,,,,,143,144,,140,122,123,124',
'131,128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142',
'139,138,134,135,129,127,119,141,120,634,433,147,,635,,,,,,,,,,143,144',
',140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,',
',,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,636,439,147',
',637,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145',
'146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119',
'141,120,490,433,147,,491,,,,,,,,,,143,144,,140,122,123,124,131,128,130',
',,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134',
'135,129,127,119,141,120,490,433,147,,491,,,,,,,,,,143,144,,140,122,123',
'124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137,136',
',121,142,139,138,134,135,129,127,119,141,120,435,439,147,,437,,,,,,',
',,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133',
',,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,429',
'433,147,,430,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126',
',,,145,146,132,133,,,,,,266,,,,,,,137,136,,121,142,139,138,134,135,129',
'127,119,141,120,728,439,147,,871,,,,,,,,,,143,144,,140,122,123,124,131',
'128,130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139',
'138,134,135,129,127,119,141,120,938,433,147,,939,,,,,,,,,,143,144,,140',
'122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,',
'137,136,,121,142,139,138,134,135,129,127,119,141,120,940,439,147,,941',
',,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132',
'133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120',
'636,439,147,,637,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125',
'126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138,134,135',
'129,127,119,141,120,634,433,147,,635,,,,,,,,,,143,144,,140,122,123,124',
'131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137,136,,121',
'142,139,138,134,135,129,127,119,141,120,723,439,147,,724,,,,,,,,,,143',
'144,,140,122,123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,',
',,,,,,137,136,,121,142,139,138,134,135,129,127,119,141,120,675,433,147',
',676,,,,,,,,,,143,144,,140,122,123,124,131,128,130,,,125,126,,,,145',
'146,132,133,,,,,,266,,,,,,,137,136,,121,142,139,138,134,135,129,127',
'119,141,120,678,439,147,,679,,,,,,,,,,143,144,,140,122,123,124,131,128',
'130,,,125,126,,,,145,146,132,133,,,,,,,,,,,,,137,136,,121,142,139,138',
'134,135,129,127,119,141,120,721,433,147,,722,,,,,,,,,,143,144,,140,122',
'123,124,131,128,130,,,125,126,,,,145,146,132,133,,,,,,266,,,,,,,137',
'136,,121,142,139,138,134,135,129,127,119,141,120,,,147' ]
        racc_action_table = arr = ::Array.new(24117, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,938,353,391,0,0,55,360,610,0,291,0,0,0,0,0,0,0,208,26,913',
'670,913,0,0,0,0,0,0,0,582,503,0,312,15,15,312,776,0,0,0,0,0,0,875,0',
'0,0,0,0,894,0,0,0,210,0,0,0,670,0,0,360,672,320,503,365,391,208,360',
'610,610,599,599,360,276,939,291,834,610,276,678,0,346,868,0,26,776,0',
'448,834,0,347,0,55,360,822,0,291,356,676,635,721,940,210,0,677,26,353',
'821,0,0,0,0,0,0,938,360,938,0,0,938,834,834,516,516,516,0,516,574,0',
'722,516,516,0,0,582,516,448,516,516,516,516,516,516,516,837,837,678',
'678,635,516,516,516,516,516,516,516,834,875,516,875,599,313,875,665',
'313,516,676,320,516,516,365,516,516,516,516,516,516,516,516,516,940',
'516,516,516,678,516,516,662,939,365,939,680,678,939,365,346,868,346',
'868,822,346,868,356,676,347,721,347,516,387,347,516,676,384,516,573',
'940,516,940,516,675,940,821,516,821,821,823,821,574,388,574,516,351',
'574,351,722,516,516,516,516,516,516,733,733,316,516,516,316,390,724',
'526,526,526,516,526,723,516,378,526,526,516,516,480,526,378,526,526',
'526,526,526,526,526,309,309,384,384,384,526,526,526,526,526,526,526',
'393,683,526,684,675,685,388,388,388,526,382,480,526,526,361,526,526',
'526,526,526,634,526,526,526,386,526,526,526,386,526,526,573,724,573',
'686,686,573,691,723,25,691,675,823,286,823,363,25,823,733,675,286,526',
'363,733,526,687,71,526,375,357,526,393,393,393,71,375,526,410,551,634',
'724,382,382,382,526,692,723,693,309,526,526,526,526,526,526,386,386',
'696,526,526,686,452,452,514,514,514,526,514,286,526,363,514,514,526',
'526,698,514,355,514,514,514,514,514,514,514,551,551,551,551,700,514',
'514,514,514,514,514,514,906,904,514,288,13,701,419,906,904,514,288,13',
'514,514,702,514,514,514,514,514,452,514,514,514,298,514,514,514,504',
'705,493,419,419,419,419,419,419,419,419,419,419,419,376,419,419,699',
'373,419,419,376,352,514,699,373,514,906,904,514,288,13,514,504,419,493',
'419,298,419,419,419,419,419,419,419,298,419,294,294,294,354,514,514',
'514,514,514,514,354,345,345,514,514,419,372,419,527,527,527,514,527',
'372,514,699,527,527,514,514,658,527,710,527,527,527,527,527,527,527',
'277,277,277,277,277,527,527,527,527,527,527,527,592,903,527,519,42,592',
'354,639,903,527,519,42,527,527,716,527,527,527,527,527,718,527,527,527',
'371,527,527,527,416,527,527,371,639,639,639,639,639,639,639,639,639',
'639,639,370,639,639,369,350,639,639,370,527,350,369,527,374,903,527',
'519,42,527,720,374,639,422,639,527,639,639,639,639,639,639,639,527,639',
'557,557,927,527,527,527,527,527,527,927,842,3,527,527,648,639,3,528',
'528,528,527,528,842,527,285,528,528,527,527,344,528,285,528,528,528',
'528,528,528,528,37,37,37,35,14,528,528,528,528,528,528,528,584,302,528',
'842,842,111,927,584,302,528,111,111,528,528,341,528,528,528,528,528',
'534,528,528,528,429,528,528,528,285,528,528,679,35,14,329,726,457,941',
'679,842,35,14,726,679,941,207,728,726,731,941,729,528,207,731,528,584',
'302,528,737,328,528,791,946,737,646,429,528,457,791,946,326,457,457',
'429,528,84,84,84,430,528,528,528,528,528,528,807,679,325,528,528,726',
'499,941,529,529,529,528,529,317,528,207,529,529,528,528,424,529,740',
'529,529,529,529,529,529,529,428,791,946,623,430,529,529,529,529,529',
'529,529,430,744,529,708,708,807,807,807,807,529,475,745,529,529,747',
'529,529,529,529,529,748,529,529,529,749,529,529,529,456,529,529,337',
'623,337,337,337,751,337,928,928,623,475,315,754,918,475,475,475,475',
'918,535,529,314,536,529,761,638,529,311,456,529,918,304,456,456,812',
'529,812,812,812,337,812,301,300,529,299,436,498,337,529,529,529,529',
'529,529,293,495,290,529,529,779,918,918,918,918,840,529,780,783,529',
'840,785,289,529,529,508,508,508,508,508,788,789,840,508,508,790,287',
'794,508,282,508,508,508,508,508,508,508,797,798,918,281,505,508,508',
'508,508,508,508,508,631,813,508,840,840,840,840,476,508,508,280,508',
'508,508,816,508,508,508,508,508,278,508,508,508,549,508,508,508,626',
'508,508,562,265,562,562,562,254,562,476,825,828,840,476,476,476,476',
'706,829,706,706,706,508,706,830,508,251,458,508,250,218,508,565,508',
'565,565,565,508,565,212,211,562,755,755,852,508,755,755,755,562,508',
'508,508,508,508,508,706,853,509,508,508,209,510,861,706,194,508,508',
'621,98,508,871,872,459,508,508,502,502,502,877,502,878,78,77,502,502',
'614,886,888,502,891,502,502,502,502,502,502,502,5,5,5,5,5,502,502,502',
'502,502,502,502,892,893,502,669,669,669,669,669,674,502,513,41,502,502',
'460,502,502,502,502,502,36,502,502,502,515,502,502,502,905,502,502,34',
'479,479,479,479,479,479,479,479,479,479,479,461,479,479,560,20,479,479',
'915,502,564,524,502,923,502,502,12,11,502,10,9,479,502,479,502,479,479',
'479,479,479,479,479,502,479,569,932,934,502,502,502,502,502,502,935',
'937,6,502,502,576,479,479,533,533,533,502,533,575,502,1,533,533,502',
'502,520,533,,533,533,533,533,533,533,533,,,,,,533,533,533,533,533,533',
'533,,,533,,,,,,,533,,,533,533,,533,533,533,533,533,,533,533,533,,533',
'533,533,,533,533,,760,760,760,760,760,760,760,760,760,760,760,,760,760',
',,760,760,,533,,,533,,,533,,,533,,,760,,760,533,760,760,760,760,760',
'760,760,533,760,,,,533,533,533,533,533,533,,,,533,533,,760,,924,924',
'924,533,924,,533,,924,924,533,533,,924,,924,924,924,924,924,924,924',
',,,,,924,924,924,924,924,924,924,,,924,,,,,,,924,,,924,924,,924,924',
'924,924,924,924,924,924,924,,924,924,924,,924,924,,767,767,767,767,767',
'767,767,767,767,767,767,,767,767,,,767,767,,924,,,924,,,924,,,924,,924',
'767,,767,924,767,767,767,767,767,767,767,924,767,,,,924,924,924,924',
'924,924,,,,924,924,,767,,539,539,539,924,539,,924,,539,539,924,924,',
'539,,539,539,539,539,539,539,539,,,,,,539,539,539,539,539,539,539,,',
'539,,,,,,,539,,,539,539,,539,539,539,539,539,539,539,539,539,,539,539',
'539,,539,539,,661,661,661,661,661,661,661,661,661,661,661,,661,661,',
',661,661,,539,,,539,,,539,,,539,,539,661,,661,539,661,661,661,661,661',
'661,661,539,661,,,,539,539,539,539,539,539,,,,539,539,,661,,661,,,539',
',,539,,,,539,539,922,922,922,922,922,,,,922,922,,,,922,,922,922,922',
'922,922,922,922,,,,,,922,922,922,922,922,922,922,,,922,,,,,,922,922',
',922,922,922,,922,922,922,922,922,,922,922,922,,922,922,922,,922,922',
',682,682,682,682,682,682,682,682,682,682,682,,682,682,,,682,682,,922',
',,922,,,922,,,922,,922,682,,682,922,682,682,682,682,682,682,682,922',
'682,,,,922,922,922,922,922,922,,,,922,922,,682,,542,542,542,922,542',
',922,,542,542,922,922,,542,,542,542,542,542,542,542,542,,,,,,542,542',
'542,542,542,542,542,,,542,,,,,,,542,,,542,542,,542,542,542,542,542,542',
'542,542,542,,542,542,542,,542,542,,427,427,427,427,427,427,427,427,427',
'427,427,,427,427,,,427,427,,542,,,542,,,542,,,542,,,427,,427,542,427',
'427,427,427,427,427,427,542,427,,,,542,542,542,542,542,542,,,,542,542',
',427,,17,17,17,542,17,,542,,17,17,542,542,,17,,17,17,17,17,17,17,17',
',,,,,17,17,17,17,17,17,17,,,17,,,,,,,17,,,17,17,,17,17,17,17,17,,17',
'17,17,,17,17,17,,17,17,,248,248,248,248,248,248,248,248,248,248,248',
',248,248,,,248,248,,17,,,17,17,,17,,,17,,,248,,248,17,248,248,248,248',
'248,248,248,17,248,,,,17,17,17,17,17,17,,,,17,17,,248,,18,18,18,17,18',
',17,,18,18,17,17,,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18',
',,18,,,,,,,18,,,18,18,,18,18,18,18,18,,18,18,18,,18,18,18,,18,18,,855',
'855,855,855,855,855,855,855,855,855,855,,855,855,,,855,855,,18,,,18',
',,18,,,18,,,855,,855,18,855,855,855,855,855,855,855,18,855,,,,18,18',
'18,18,18,18,,,,18,18,,855,,,,,18,,,18,,,,18,18,547,547,547,547,547,',
',,547,547,,,,547,,547,547,547,547,547,547,547,,,,,,547,547,547,547,547',
'547,547,,,547,,,,,,547,547,,547,547,547,,547,547,547,547,547,,547,547',
'547,,547,547,547,,547,547,,442,442,442,442,442,442,442,442,442,442,442',
',442,442,,,442,442,,547,,,547,,,547,,,547,,547,442,,442,547,442,442',
'442,442,442,442,442,547,442,,,,547,547,547,547,547,547,,,,547,547,,442',
',,,,547,,,547,,,,547,547,914,914,914,914,914,,,,914,914,,,,914,,914',
'914,914,914,914,914,914,,,,,,914,914,914,914,914,914,914,,,914,,,,,',
'914,914,,914,914,914,,914,914,914,914,914,,914,914,914,,914,914,914',
',914,914,,770,770,770,770,770,770,770,770,770,770,770,,770,770,,,770',
'770,,914,,,914,,,914,,,914,,914,770,,770,914,770,770,770,770,770,770',
'770,914,770,,,,914,914,914,914,914,914,,,,914,914,,770,,22,22,22,914',
'22,,914,,22,22,914,914,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22',
'22,22,,,22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,22,,22',
'22,,765,765,765,765,765,765,765,765,765,765,765,,765,765,,,765,765,',
'22,,,22,,,22,,,22,,22,765,22,765,22,765,765,765,765,765,765,765,22,765',
',,,22,22,22,22,22,22,,,,22,22,,765,,23,23,23,22,23,,22,,23,23,22,22',
',23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,',
'23,23,,23,23,23,23,23,23,23,23,23,,23,23,23,,23,23,,777,777,777,777',
'777,777,777,777,777,777,777,,777,777,,,777,777,,23,,,23,,,23,,,23,,23',
'777,23,777,23,777,777,777,777,777,777,777,23,777,,,,23,23,23,23,23,23',
',,,23,23,,777,,24,24,24,23,24,,23,,24,24,23,23,,24,,24,24,24,24,24,24',
'24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24',
'24,24,24,,24,24,24,,24,24,,532,532,532,532,532,532,532,532,532,532,532',
',532,532,,,532,532,,24,,,24,,,24,,,24,,24,532,24,532,24,532,532,532',
'532,532,532,532,24,532,,,,24,24,24,24,24,24,,,,24,24,,532,,,,,24,,,24',
',,,24,24,909,909,909,909,909,,,,909,909,,,,909,,909,909,909,909,909',
'909,909,,,,,,909,909,909,909,909,909,909,,,909,,,,,,909,909,,909,909',
'909,,909,909,909,909,909,,909,909,909,,909,909,909,,909,909,,19,19,19',
'19,19,19,19,19,19,19,19,,19,19,,,19,19,,909,,,909,,,909,,,909,,909,19',
',19,909,19,19,19,19,19,19,19,909,19,,,,909,909,909,909,909,909,,,,909',
'909,,19,,486,486,486,909,486,,909,,486,486,909,909,,486,,486,486,486',
'486,486,486,486,,,,,,486,486,486,486,486,486,486,,,486,,,,,,,486,,,486',
'486,,486,486,486,486,486,,486,486,486,,486,486,486,,486,486,,772,772',
'772,772,772,772,772,772,772,772,772,,772,772,,,772,772,,486,,,486,,',
'486,,,486,,,772,,772,486,772,772,772,772,772,772,772,486,772,,,,486',
'486,486,486,486,486,,,,486,486,,772,,484,484,484,486,484,,486,,484,484',
'486,486,,484,,484,484,484,484,484,484,484,,,,,,484,484,484,484,484,484',
'484,,,484,,,,,,,484,,,484,484,,484,484,484,484,484,484,484,484,484,',
'484,484,484,,484,484,,454,454,454,454,454,454,454,454,454,454,454,,454',
'454,,,454,454,,484,,,484,,,484,,,484,,,454,484,454,484,454,454,454,454',
'454,454,454,484,454,,,,484,484,484,484,484,484,,,,484,484,,,,482,482',
'482,484,482,,484,,482,482,484,484,,482,,482,482,482,482,482,482,482',
',,,,,482,482,482,482,482,482,482,,,482,,,,,,,482,,,482,482,,482,482',
'482,482,482,482,482,482,482,,482,482,482,,482,482,,455,455,455,455,455',
'455,455,455,455,455,455,,455,455,,,455,455,,482,,,482,,,482,,,482,,482',
'455,482,455,482,455,455,455,455,455,455,455,482,455,,,,482,482,482,482',
'482,482,,,,482,482,,,,,,,482,,,482,,,,482,482,30,30,30,30,30,,,,30,30',
',,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30',
',30,30,30,,30,30,30,30,30,,30,30,30,,30,30,30,,30,30,,465,465,465,465',
'465,465,465,,,465,465,,,,,,465,465,,30,,,30,,,30,,,30,,30,465,,465,30',
'465,465,465,465,465,465,465,30,465,,,,30,30,30,30,30,30,,,,30,30,,,',
'31,31,31,30,31,,30,,31,31,30,30,,31,,31,31,31,31,31,31,31,,,,,,31,31',
'31,31,31,31,31,,,31,,,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31',
'31,643,,643,643,643,,643,,,,,,,,,,,,,,,,,31,,,31,,,31,,,31,,31,,,,,643',
'555,,555,555,555,,555,643,643,643,643,31,31,31,31,31,31,,643,,31,31',
',,,32,32,32,31,32,,31,,32,32,31,31,,32,555,32,32,32,32,32,32,32,555',
'555,555,555,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,,32,32,32,32',
'32,,32,32,32,,32,32,32,321,,321,321,321,,321,,,,,,,,,,,,,,,,,32,,,32',
',,32,,,32,,,,,,,321,,321,,,,,,321,321,321,321,32,32,32,32,32,32,,,,32',
'32,,,,32,,,32,,,32,,,,32,32,548,548,548,548,548,,,,548,548,,,,548,,548',
'548,548,548,548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,',
'548,548,,548,548,548,,548,548,548,548,548,,548,548,548,,548,548,548',
',548,548,,478,478,478,478,478,478,478,478,,478,478,,,,,,478,478,,548',
',,548,,,548,,,548,,548,478,,478,548,478,478,478,478,478,478,478,548',
'478,,,,548,548,548,548,548,548,,,,548,548,,,,554,554,554,548,554,,548',
',554,554,548,548,,554,,554,554,554,554,554,554,554,,,,,,554,554,554',
'554,554,554,554,,,554,,,,,,,554,,,554,554,,554,554,554,554,554,,554',
'554,554,,554,554,554,56,,56,56,56,,56,,,,,,,,,,,,,,,,,554,,,554,464',
',554,,,554,,,,,,,56,56,,,464,464,,,56,56,56,56,554,554,554,554,554,554',
',464,,554,554,464,464,464,464,,,554,,,554,,,,554,554,568,568,568,568',
'568,,,,568,568,,,,568,,568,568,568,568,568,568,568,,,,,,568,568,568',
'568,568,568,568,,,568,,,,,,568,568,,568,568,568,,568,568,568,568,568',
',568,568,568,,568,568,568,,568,568,,466,,,,,,,,,,,,,,,,466,466,,568',
',,568,,,568,,,568,,568,466,,466,568,466,466,466,466,,,466,568,466,,',
',568,568,568,568,568,568,,,,568,568,,,,,,,568,,,568,,,,568,568,902,902',
'902,902,902,,,,902,902,,,,902,,902,902,902,902,902,902,902,,,,,,902',
'902,902,902,902,902,902,,,902,,,,,,902,902,,902,902,902,,902,902,902',
'902,902,,902,902,902,,902,902,902,,902,902,,467,,,,,,,,,,,,,,,,467,467',
',902,,,902,,,902,,,902,,902,467,,467,902,467,467,467,467,,,467,902,467',
',,,902,902,902,902,902,902,,,,902,902,,,,38,38,38,902,38,,902,,38,38',
'902,902,,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,',
',,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,38,,38,38,,477,477,477',
'477,477,477,477,,,477,477,,,,,,477,477,,38,,,38,,,38,,,38,,,477,,477',
'38,477,477,477,477,477,477,477,38,477,,,,38,38,38,38,38,38,,,,38,38',
',,,39,39,39,38,39,,38,,39,39,38,38,,39,,39,39,39,39,39,39,39,,,,,,39',
'39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39',
'39,39,,39,39,,468,,,,,,,,,,,,,,,,468,468,,39,,,39,,,39,,,39,,,468,,468',
'39,468,468,468,468,,,468,39,468,,,,39,39,39,39,39,39,,,,39,39,,,,40',
'40,40,39,40,,39,,40,40,39,39,,40,,40,40,40,40,40,40,40,,,,,,40,40,40',
'40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40,40',
',40,40,,469,,,,,,,,,,,,,,,,469,469,,40,,,40,,,40,,,40,,,469,,469,40',
'469,469,469,469,,,469,40,469,,,,40,40,40,40,40,40,,,,40,40,,,,900,900',
'900,40,900,,40,,900,900,40,40,,900,,900,900,900,900,900,900,900,,,,',
',900,900,900,900,900,900,900,,,900,,,,,,,900,,,900,900,,900,900,900',
'900,900,,900,900,900,,900,900,900,,900,900,,470,470,470,470,470,470',
'470,,,470,470,,,,,,470,470,,900,,,900,,,900,,,900,,900,470,900,470,900',
'470,470,470,470,470,470,470,900,470,,,,900,900,900,900,900,900,,,,900',
'900,,,,,,,900,,,900,,,,900,900,572,572,572,572,572,,,,572,572,,,,572',
',572,572,572,572,572,572,572,,,,,,572,572,572,572,572,572,572,,,572',
',,,,,572,572,,572,572,572,,572,572,572,572,572,,572,572,572,,572,572',
'572,,572,572,,473,473,473,473,473,473,473,,,473,473,,,,,,473,473,,572',
',,572,,,572,,,572,,572,473,,473,572,473,473,473,473,473,473,473,572',
'473,,,,572,572,572,572,572,572,,,,572,572,,,,,,,572,,,572,,,,572,572',
'577,577,577,577,577,,,,577,577,,,,577,,577,577,577,577,577,577,577,',
',,,,577,577,577,577,577,577,577,,,577,,,,,,577,577,,577,577,577,,577',
'577,577,577,577,,577,577,577,,577,577,577,,577,577,,471,471,471,471',
'471,471,471,,,471,471,,,,,,471,471,,577,,,577,,,577,,,577,,577,471,',
'471,577,471,471,471,471,471,471,471,577,471,,,,577,577,577,577,577,577',
',,,577,577,,,,52,52,52,577,52,,577,,52,52,577,577,,52,,52,52,52,52,52',
'52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52',
',52,52,52,,52,52,52,,52,52,,472,472,472,472,472,472,472,,,472,472,,',
',,,472,472,,52,,,52,,,52,,,52,,,472,,472,52,472,472,472,472,472,472',
'472,52,472,,,,52,52,52,52,52,52,,,,52,52,,,,53,53,53,52,53,,52,,53,53',
'52,52,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,',
',53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,53,,53,53,,474,474,474',
'474,474,474,474,,,474,474,,,,,,474,474,,53,,,53,,,53,,,53,,53,474,,474',
'53,474,474,474,474,474,474,474,53,474,,,,53,53,53,53,53,53,,,,53,53',
',,,54,54,54,53,54,,53,,54,54,53,53,,54,,54,54,54,54,54,54,54,,,,,,54',
'54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54',
',54,54,54,,54,54,,463,,,,,,,,,,,,,,,,463,463,,54,,,54,,,54,,,54,,,463',
',463,54,463,463,463,463,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,579',
'579,579,54,579,,54,,579,579,54,54,,579,,579,579,579,579,579,579,579',
',,,,,579,579,579,579,579,579,579,,,579,,,,,,,579,,,579,579,,579,579',
'579,579,579,579,579,579,579,,579,579,579,,579,579,,462,,,,,,,,,,,,,',
',,462,462,,579,,,579,,,579,,,579,,579,462,,462,579,462,462,462,462,',
',,579,,,,,579,579,579,579,579,579,,,,579,579,,,,587,587,587,579,587',
',579,,587,587,579,579,,587,,587,587,587,587,587,587,587,,,,,,587,587',
'587,587,587,587,587,,,587,,,,,,,587,,,587,587,,587,587,587,587,587,587',
'587,587,587,,587,587,587,,587,587,,,,,,,,,,,,,,,,,,,,,587,,,587,,,587',
',,587,,587,,,,587,,,,,,,,587,,,,,587,587,587,587,587,587,,,,587,587',
',,,57,57,57,587,57,,587,,57,57,587,587,,57,,57,57,57,57,57,57,57,,,',
',,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57',
'57,,57,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,',
',,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,58,58,58,57,58,,57,,58,58',
'57,57,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,',
',58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58,58,,58,58,,,,,,,,,,,,,',
',,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,',
'58,58,,,,61,61,61,58,61,,58,,61,61,58,58,,61,,61,61,61,61,61,61,61,',
',,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61',
'61,,61,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,',
',,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61,61,,,61,,,,61,61,62',
'62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62,62,,62,62,62,,,,,,,',
',,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62,,,,,,,,,,,,,,,,,62,62,62,62,62',
'62,,,,62,62,,,,63,63,63,62,63,,62,,63,63,62,62,,63,,63,63,63,63,63,63',
'63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,',
'63,63,63,,63,63,63,,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,,,63,,,63,,,,,,',
',,,,,,,,,,,,63,63,63,63,63,63,,,,63,63,,,,591,591,591,63,591,,63,,591',
'591,63,63,,591,,591,591,591,591,591,591,591,,,,,,591,591,591,591,591',
'591,591,,,591,,,,,,,591,,,591,591,,591,591,591,591,591,,591,591,591',
',591,591,591,,591,591,,,,,,,,,,,,,,,,,,,,,591,,,591,,,591,,,591,,,,',
',591,,,,,,,,591,,,,,591,591,591,591,591,591,,,,591,591,,,,,,,591,,,591',
',,,591,591,883,883,883,883,883,,,,883,883,,,,883,,883,883,883,883,883',
'883,883,,,,,,883,883,883,883,883,883,883,,,883,,,,,,883,883,,883,883',
'883,,883,883,883,883,883,,883,883,883,,883,883,883,,883,883,,,,,,,,',
',,,,,,,,,,,,883,,,883,,,883,,,883,,883,,,,883,,,,,,,,883,,,,,883,883',
'883,883,883,883,,,,883,883,,,,,,,883,,,883,,,,883,883,880,880,880,880',
'880,,,,880,880,,,,880,,880,880,880,880,880,880,880,,,,,,880,880,880',
'880,880,880,880,,,880,,,,,,880,880,,880,880,880,,880,880,880,880,880',
',880,880,880,,880,880,880,,880,880,,,,,,,,,,,,,,,,,,,,,880,,,880,,,880',
',,880,,880,,,,880,,,,,,,,880,,,,,880,880,880,880,880,880,,,,880,880',
',,,879,879,879,880,879,,880,,879,879,880,880,,879,,879,879,879,879,879',
'879,879,,,,,,879,879,879,879,879,879,879,,,879,,,,,,,879,,,879,879,',
'879,879,879,879,879,,879,879,879,,879,879,879,,879,879,,,,,,,,,,,,,',
',,,,,,,879,,,879,,,879,,,879,,879,,,,879,,,,,,,,879,,,,,879,879,879',
'879,879,879,,,,879,879,,,,593,593,593,879,593,,879,,593,593,879,879',
',593,,593,593,593,593,593,593,593,,,,,,593,593,593,593,593,593,593,',
',593,,,,,,,593,,,593,593,,593,593,593,593,593,,593,593,593,,593,593',
'593,,593,593,,,,,,,,,,,,,,,,,,,,,593,,,593,,,593,,,593,,,,,,593,,,,',
',,,593,,,,,593,593,593,593,593,593,,,,593,593,,,,620,620,620,593,620',
',593,,620,620,593,593,,620,,620,620,620,620,620,620,620,,,,,,620,620',
'620,620,620,620,620,,,620,,,,,,,620,,,620,620,,620,620,620,620,620,',
'620,620,620,,620,620,620,,620,620,,,,,,,,,,,,,,,,,,,,,620,,,620,,,620',
',,620,,,,,,620,,,,,,,,620,,,,,620,620,620,620,620,620,,,,620,620,,,',
'622,622,622,620,622,,620,,622,622,620,620,,622,,622,622,622,622,622',
'622,622,,,,,,622,622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,',
'622,622,622,622,622,,622,622,622,,622,622,622,,622,622,,,,,,,,,,,,,',
',,,,,,,622,,,622,,,622,,,622,,622,,,,622,,,,,,,,622,,,,,622,622,622',
'622,622,622,,,,622,622,,,,624,624,624,622,624,,622,,624,624,622,622',
',624,,624,624,624,624,624,624,624,,,,,,624,624,624,624,624,624,624,',
',624,,,,,,,624,,,624,624,,624,624,624,624,624,,624,624,624,,624,624',
'624,,624,624,,,,,,,,,,,,,,,,,,,,,624,,,624,,,624,,,624,,,,,,624,,,,',
',,,624,,,,,624,624,624,624,624,624,,,,624,624,,,,869,869,869,624,869',
',624,,869,869,624,624,,869,,869,869,869,869,869,869,869,,,,,,869,869',
'869,869,869,869,869,,,869,,,,,,,869,,,869,869,,869,869,869,869,869,',
'869,869,869,,869,869,869,,,,,,,,,,,,,,,,,,,,,,,,869,,,869,,,869,,,869',
',,,,,,,,,,,,,,,,,,869,869,869,869,869,869,,,,869,869,,,,,,,869,,,869',
',,,869,869,100,100,100,100,100,,,,100,100,,,,100,,100,100,100,100,100',
'100,100,,,,,,100,100,100,100,100,100,100,,,100,,,,,,100,100,100,100',
'100,100,,100,100,100,100,100,,100,100,100,,100,100,100,,100,100,,,,',
',,,,,,,,,,,,,,,,100,,,100,,,100,,,100,,100,,,,100,,,,,,,,100,,,,,100',
'100,100,100,100,100,,,,100,100,,,,,,100,100,,,100,,,,100,100,104,104',
'104,,104,,,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104',
'104,104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,',
'104,104,104,,104,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104',
',,104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,',
'105,105,105,104,105,,104,,105,105,104,104,,105,,105,105,105,105,105',
'105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,',
'105,105,105,105,105,,105,105,105,,105,105,105,,105,105,,,,,,,,,,,,,',
',,,,,,,105,,,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105',
'105,105,,,,105,105,,,,106,106,106,105,106,,105,,106,106,105,105,,106',
',106,106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106',
',,,,,,106,,,106,106,,106,106,106,106,106,,106,106,106,,106,106,106,',
'106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106',
',,,,106,106,106,106,106,106,,,,106,106,,,,107,107,107,106,107,,106,',
'107,107,106,106,,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107',
'107,107,107,,,107,,,,,,,107,,,107,107,,107,107,107,107,107,,107,107',
'107,,107,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107',
',,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107',
',,107,,,,107,107,108,108,108,108,108,,,,108,108,,,,108,,108,108,108',
'108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,,108,108',
',108,108,108,,108,108,108,108,108,,108,108,108,,108,108,108,,108,108',
',,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,,108,,,,,,,,108,,,',
',108,108,108,108,108,108,,,,108,108,,,,,,,108,,,108,,,,108,108,109,109',
'109,109,109,,,,109,109,,,,109,,109,109,109,109,109,109,109,,,,,,109',
'109,109,109,109,109,109,,,109,,,,,,109,109,109,109,109,109,,109,109',
'109,109,109,,109,109,109,,109,109,109,,109,109,,,,,,,,,,,,,,,,,,,,,109',
',,109,,,109,,,109,,109,,,,109,,,,,,,,109,,,,,109,109,109,109,109,109',
',,,109,109,,,,625,625,625,109,625,,109,,625,625,109,109,,625,,625,625',
'625,625,625,625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625',
',,625,625,,625,625,625,625,625,,625,625,625,,625,625,625,,625,625,,',
',,,,,,,,,,,,,,,,,,625,,,625,,,625,,,625,,,,,,625,,,,,,,,625,,,,,625',
'625,625,625,625,625,,,,625,625,,,,630,630,630,625,630,,625,,630,630',
'625,625,,630,,630,630,630,630,630,630,630,,,,,,630,630,630,630,630,630',
'630,,,630,,,,,,,630,,,630,630,,630,630,630,630,630,,630,630,630,,630',
'630,630,,630,630,,,,,,,,,,,,,,,,,,,,,630,,,630,,,630,,,630,,,,,,630',
',,,,,,,630,,,,,630,630,630,630,630,630,,,,630,630,,,,,,,630,,,630,,',
',630,630,865,865,865,865,865,,,,865,865,,,,865,,865,865,865,865,865',
'865,865,,,,,,865,865,865,865,865,865,865,,,865,,,,,,865,865,,865,865',
'865,,865,865,865,865,865,,865,865,865,,865,865,865,,865,865,,,,,,,,',
',,,,,,,,,,,,865,,,865,,,865,,,865,,865,,,,865,,,,,,,,865,,,,,865,865',
'865,865,865,865,,,,865,865,,,,,,,865,,,865,,,,865,865,196,196,196,196',
'196,,,,196,196,,,,196,,196,196,196,196,196,196,196,,,,,,196,196,196',
'196,196,196,196,,,196,,,,,,196,196,,196,196,196,,196,196,196,196,196',
',196,196,196,,196,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196',
',,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196,,,,196,196',
',,,197,197,197,196,197,,196,,197,197,196,196,,197,,197,197,197,197,197',
'197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,,197,,,197,197,',
'197,197,197,197,197,,197,197,197,,197,197,197,,197,197,,,,,,,,,,,,,',
',,,,,,,197,,,197,,,197,,,197,,197,,,,197,,,,,,,,197,,,,,197,197,197',
'197,197,197,,,,197,197,,,,198,198,198,197,198,,197,,198,198,197,197',
',198,,198,198,198,198,198,198,198,,,,,,198,198,198,198,198,198,198,',
',198,,,,,,,198,,,198,198,,198,198,198,198,198,,198,198,198,,198,198',
'198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,,198,,198,,,,198,',
',,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,199,199,199,198',
'199,,198,,199,199,198,198,,199,,199,199,199,199,199,199,199,,,,,,199',
'199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,,199,199,199,199,199',
',199,199,199,,199,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,,199,,,199',
',,199,,,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199,,,,199,199,,,',
'200,200,200,199,200,,199,,200,200,199,199,,200,,200,200,200,200,200',
'200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200,',
'200,200,200,200,200,200,200,200,200,,200,200,200,,200,200,,,,,,,,,,',
',,,,,,,,,,200,,,200,,,200,,,200,,200,,,,200,,,,,,,,200,,,,,200,200,200',
'200,200,200,,,,200,200,,,,633,633,633,200,633,,200,,633,633,200,200',
',633,,633,633,633,633,633,633,633,,,,,,633,633,633,633,633,633,633,',
',633,,,,,,,633,,,633,633,,633,633,633,633,633,,633,633,633,,633,633',
'633,,633,633,,,,,,,,,,,,,,,,,,,,,633,,,633,,,633,,,633,,,,,,633,,,,',
',,,633,,,,,633,633,633,633,633,633,,,,633,633,,,,451,451,451,633,451',
',633,,451,451,633,633,,451,,451,451,451,451,451,451,451,,,,,,451,451',
'451,451,451,451,451,,,451,,,,,,,451,,,451,451,,451,451,451,451,451,',
'451,451,451,,451,451,451,,451,451,,,,,,,,,,,,,,,,,,,,,451,,,451,,,451',
',,451,,,,,,451,,,,,,,,451,,,,,451,451,451,451,451,451,,,,451,451,,,',
'203,203,203,451,203,,451,,203,203,451,451,,203,,203,203,203,203,203',
'203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203,203,',
'203,203,203,203,203,,203,203,203,,203,203,203,,203,203,,,,,,,,,,,,,',
',,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,,,,,203,,,,,203,203,203,203',
'203,203,,,,203,203,,,,204,204,204,203,204,,203,,204,204,203,203,,204',
',204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204',
',,,,,,204,,,204,204,,204,204,204,204,204,,204,204,204,,204,204,204,',
'204,204,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,,204,,,,,,204,,,,,,,,204',
',,,,204,204,204,204,204,204,,,,204,204,,,,205,205,205,204,205,,204,',
'205,205,204,204,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205',
'205,205,205,,,205,,,,,,,205,,,205,205,,205,205,205,205,205,,205,205',
'205,,205,205,205,,205,205,,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,,,205',
',,,,,205,,,,,,,,205,,,,,205,205,205,205,205,205,,,,205,205,,,,450,450',
'450,205,450,,205,,450,450,205,205,,450,,450,450,450,450,450,450,450',
',,,,,450,450,450,450,450,450,450,,,450,,,,,,,450,,,450,450,,450,450',
'450,450,450,,450,450,450,,450,450,450,,450,450,,,,,,,,,,,,,,,,,,,,,450',
',,450,,,450,,,450,,,,,,450,,,,,,,,450,,,,,450,450,450,450,450,450,,',
',450,450,,,,860,860,860,450,860,,450,,860,860,450,450,,860,,860,860',
'860,860,860,860,860,,,,,,860,860,860,860,860,860,860,,,860,,,,,,,860',
',,860,860,,860,860,860,860,860,860,860,860,860,,860,860,860,,860,860',
',,,,,,,,,,,,,,,,,,,,860,,,860,,,860,,,860,,,,860,,860,,,,,,,,860,,,',
',860,860,860,860,860,860,,,,860,860,,,,856,856,856,860,856,,860,,856',
'856,860,860,,856,,856,856,856,856,856,856,856,,,,,,856,856,856,856,856',
'856,856,,,856,,,,,,,856,,,856,856,,856,856,856,856,856,,856,856,856',
',856,856,856,,856,856,,,,,,,,,,,,,,,,,,,,,856,,,856,,,856,,,856,,,,',
',856,,,,,,,,856,,,,,856,856,856,856,856,856,,,,856,856,,,,449,449,449',
'856,449,,856,,449,449,856,856,,449,,449,449,449,449,449,449,449,,,,',
',449,449,449,449,449,449,449,,,449,,,,,,,449,,,449,449,,449,449,449',
'449,449,,449,449,449,,449,449,449,,449,449,,,,,,,,,,,,,,,,,,,,,449,',
',449,,,449,,,449,,,,,,449,,,,,,,,449,,,,,449,449,449,449,449,449,,,',
'449,449,,,,844,844,844,449,844,,449,,844,844,449,449,,844,,844,844,844',
'844,844,844,844,,,,,,844,844,844,844,844,844,844,,,844,,,,,,,844,,,844',
'844,,844,844,844,844,844,,844,844,844,,844,844,844,,844,844,,,,,,,,',
',,,,,,,,,,,,844,,,844,,,844,,,844,,,,,,844,,,,,,,,844,,,,,844,844,844',
'844,844,844,,,,844,844,,,,447,447,447,844,447,,844,,447,447,844,844',
',447,,447,447,447,447,447,447,447,,,,,,447,447,447,447,447,447,447,',
',447,,,,,,,447,,,447,447,,447,447,447,447,447,447,447,447,447,,447,447',
'447,,447,447,,,,,,,,,,,,,,,,,,,,,447,,,447,,,447,,,447,,447,,,,447,',
',,,,,,447,,,,,447,447,447,447,447,447,,,,447,447,,,,,,,447,,,447,,,',
'447,447,213,213,213,213,213,,,,213,213,,,,213,,213,213,213,213,213,213',
'213,,,,,,213,213,213,213,213,213,213,,,213,,,,,,213,213,,213,213,213',
',213,213,213,213,213,,213,213,213,,213,213,213,,213,213,,,,,,,,,,,,',
',,,,,,,,213,,,213,,,213,,,213,,213,,,,213,,,,,,,,213,,,,,213,213,213',
'213,213,213,,,,213,213,,,,214,214,214,213,214,,213,,214,214,213,213',
',214,,214,214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214,',
',214,,,,,,,214,,,214,214,,214,214,214,214,214,,214,214,214,,214,214',
'214,,214,214,,,,,,,,,,,,,,,,,,,,,214,,,214,,214,214,,,214,,,,,,214,',
',,,,,,214,,,,,214,214,214,214,214,214,,,,214,214,,,,217,217,217,214',
'217,,214,,217,217,214,214,,217,,217,217,217,217,217,217,217,,,,,,217',
'217,217,217,217,217,217,,,217,,,,,,,217,,,217,217,,217,217,217,217,217',
',217,217,217,,217,217,217,,217,217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217',
',,217,,,,,,217,,,,,,,,217,,,,,217,217,217,217,217,217,,,,217,217,,,',
'641,641,641,217,641,,217,,641,641,217,217,,641,,641,641,641,641,641',
'641,641,,,,,,641,641,641,641,641,641,641,,,641,,,,,,,641,,,641,641,',
'641,641,641,641,641,,641,641,641,,641,641,641,,641,641,,,,,,,,,,,,,',
',,,,,,,641,,,641,,,641,,,641,,,,,,641,,,,,,,,641,,,,,641,641,641,641',
'641,641,,,,641,641,,,,219,219,219,641,219,,641,,219,219,641,641,,219',
',219,219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219',
',,,,,,219,,,219,219,,219,219,219,219,219,,219,219,219,,219,219,219,',
'219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219',
',,,,219,219,219,219,219,219,,,,219,219,,,,220,220,220,219,220,,219,',
'220,220,219,219,,220,,220,220,220,220,220,220,220,,,,,,220,220,220,220',
'220,220,220,,,220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220',
'220,,220,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220',
',,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,,,220,220,,,,221,221',
'221,220,221,,220,,221,221,220,220,,221,,221,221,221,221,221,221,221',
',,,,,221,221,221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221',
'221,221,221,,221,221,221,,221,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221',
',,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,',
',221,221,,,,222,222,222,221,222,,221,,222,222,221,221,,222,,222,222',
'222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222',
',,222,222,,222,222,222,222,222,,222,222,222,,222,222,222,,222,222,,',
',,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222',
'222,222,222,222,222,,,,222,222,,,,223,223,223,222,223,,222,,223,223',
'222,222,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223',
'223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223',
',,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224,224,224,223',
'224,,223,,224,224,223,223,,224,,224,224,224,224,224,224,224,,,,,,224',
'224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224',
',224,224,224,,224,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224',
',,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,',
'225,225,225,224,225,,224,,225,225,224,224,,225,,225,225,225,225,225',
'225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,',
'225,225,225,225,225,,225,225,225,,225,225,225,,225,225,,,,,,,,,,,,,',
',,,,,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225',
'225,225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,225,225,,226',
',226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226',
',,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226,226,',
'226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226,',
'227,227,226,226,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227',
'227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227',
'227,,227,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227',
',,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228',
'228,227,228,,227,,228,228,227,227,,228,,228,228,228,228,228,228,228',
',,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228',
'228,228,228,,228,228,228,,228,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228',
',,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,',
',228,228,,,,229,229,229,228,229,,228,,229,229,228,228,,229,,229,229',
'229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229',
',,229,229,,229,229,229,229,229,,229,229,229,,229,229,229,,229,229,,',
',,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229',
'229,229,229,229,229,,,,229,229,,,,230,230,230,229,230,,229,,230,230',
'229,229,,230,,230,230,230,230,230,230,230,,,,,,230,230,230,230,230,230',
'230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,,230,230,230,,230',
'230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230',
',,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,231,231,231,230',
'231,,230,,231,231,230,230,,231,,231,231,231,231,231,231,231,,,,,,231',
'231,231,231,231,231,231,,,231,,,,,,,231,,,231,231,,231,231,231,231,231',
',231,231,231,,231,231,231,,231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231',
',,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231,231,,,,231,231,,,',
'232,232,232,231,232,,231,,232,232,231,231,,232,,232,232,232,232,232',
'232,232,,,,,,232,232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,',
'232,232,232,232,232,,232,232,232,,232,232,232,,232,232,,,,,,,,,,,,,',
',,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,,232,,,,,232,232,232,232',
'232,232,,,,232,232,,,,233,233,233,232,233,,232,,233,233,232,232,,233',
',233,233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233',
',,,,,,233,,,233,233,,233,233,233,233,233,,233,233,233,,233,233,233,',
'233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233',
',,,,233,233,233,233,233,233,,,,233,233,,,,234,234,234,233,234,,233,',
'234,234,233,233,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234',
'234,234,234,,,234,,,,,,,234,,,234,234,,234,234,234,234,234,,234,234',
'234,,234,234,234,,234,234,,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,,,234',
',,,,,234,,,,,,,,234,,,,,234,234,234,234,234,234,,,,234,234,,,,235,235',
'235,234,235,,234,,235,235,234,234,,235,,235,235,235,235,235,235,235',
',,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,,235,235',
'235,235,235,,235,235,235,,235,235,235,,235,235,,,,,,,,,,,,,,,,,,,,,235',
',,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235,235,235,235,235,,',
',235,235,,,,236,236,236,235,236,,235,,236,236,235,235,,236,,236,236',
'236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236',
',,236,236,,236,236,236,236,236,,236,236,236,,236,236,236,,236,236,,',
',,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,,,,,236,,,,,236',
'236,236,236,236,236,,,,236,236,,,,,,,236,,,236,,,,236,236,756,756,756',
'756,756,,,,756,756,,,,756,,756,756,756,756,756,756,756,,,,,,756,756',
'756,756,756,756,756,,,756,,,,,,756,756,,756,756,756,,756,756,756,756',
'756,,756,756,756,,756,756,756,,756,756,,,,,,,,,,,,,,,,,,,,,756,,,756',
',,756,,,756,,756,,,,756,,,,,,,,756,,,,,756,756,756,756,756,756,,,,756',
'756,,,,238,238,238,756,238,,756,,238,238,756,756,,238,,238,238,238,238',
'238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238',
',238,238,238,238,238,,238,238,238,,238,238,238,,238,238,,,,,,,,,,,,',
',,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238',
'238,238,,,,238,238,,,,239,239,239,238,239,,238,,239,239,238,238,,239',
',239,239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239',
',,,,,,239,,,239,239,,239,239,239,239,239,,239,239,239,,239,239,239,',
'239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,,239',
',,,,239,239,239,239,239,239,,,,239,239,,,,240,240,240,239,240,,239,',
'240,240,239,239,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240',
'240,240,240,,,240,,,,,,,240,,,240,240,,240,240,240,240,240,,240,240',
'240,,240,240,240,,240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240',
',,,,,240,,,,,,,,240,,,,,240,240,240,240,240,240,,,,240,240,,,,241,241',
'241,240,241,,240,,241,241,240,240,,241,,241,241,241,241,241,241,241',
',,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,,241,241',
'241,241,241,,241,241,241,,241,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241',
',,241,,,241,,,241,,,,,,241,,,,,,,,241,,,,,241,241,241,241,241,241,,',
',241,241,,,,242,242,242,241,242,,241,,242,242,241,241,,242,,242,242',
'242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,,,242',
',,242,242,,242,242,242,242,242,,242,242,242,,242,242,242,,242,242,,',
',,,,,,,,,,,,,,,,,,242,,,242,,,242,,,242,,,,,,242,,,,,,,,242,,,,,242',
'242,242,242,242,242,,,,242,242,,,,243,243,243,242,243,,242,,243,243',
'242,242,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243,243,243',
'243,,,243,,,,,,,243,,,243,243,,243,243,243,243,243,,243,243,243,,243',
'243,243,,243,243,,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,,,243,,,,,,243',
',,,,,,,243,,,,,243,243,243,243,243,243,,,,243,243,,,,244,244,244,243',
'244,,243,,244,244,243,243,,244,,244,244,244,244,244,244,244,,,,,,244',
'244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,,244,244,244,244,244',
',244,244,244,,244,244,244,,244,244,,,,,,,,,,,,,,,,,,,,,244,,,244,,,244',
',,244,,,,,,244,,,,,,,,244,,,,,244,244,244,244,244,244,,,,244,244,,,',
',,,244,,,244,,,,244,244,645,645,645,645,645,,,,645,645,,,,645,,645,645',
'645,645,645,645,645,,,,,,645,645,645,645,645,645,645,,,645,,,,,,645',
'645,,645,645,645,,645,645,645,645,645,,645,645,645,,645,645,645,,645',
'645,,,,,,,,,,,,,,,,,,,,,645,,,645,,,645,,,645,,645,,,,645,,,,,,,,645',
',,,,645,645,645,645,645,645,,,,645,645,,,,649,649,649,645,649,,645,',
'649,649,645,645,,649,,649,649,649,649,649,649,649,,,,,,649,649,649,649',
'649,649,649,,,649,,,,,,,649,,,649,649,,649,649,649,649,649,,649,649',
'649,,649,649,649,,649,649,,,,,,,,,,,,,,,,,,,,,649,,,649,,,649,,,649',
',,,,,649,,,,,,,,649,,,,,649,649,649,649,649,649,,,,649,649,,,,421,421',
'421,649,421,,649,,421,421,649,649,,421,,421,421,421,421,421,421,421',
',,,,,421,421,421,421,421,421,421,,,421,,,,,,,421,,,421,421,,421,421',
'421,421,421,,421,421,421,,421,421,421,,421,421,,,,,,,,,,,,,,,,,,,,,421',
',,421,,,421,,,421,,,,,,421,,,,,,,,421,,,,,421,421,421,421,421,421,,',
',421,421,,,,253,253,253,421,253,,421,,253,253,421,421,,253,,253,253',
'253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253',
',,253,253,,253,253,253,253,253,,253,253,253,,253,253,253,,253,253,,',
',,,,,,,,,,,,,,,,,,253,,,253,,,253,,,253,,,,,,253,,,,,,,,253,,,,,253',
'253,253,253,253,253,,,,253,253,,,,,,,253,,,253,,,,253,253,656,656,656',
'656,656,,,,656,656,,,,656,,656,656,656,656,656,656,656,,,,,,656,656',
'656,656,656,656,656,,,656,,,,,,656,656,,656,656,656,,656,656,656,656',
'656,,656,656,656,,656,656,656,,656,656,,,,,,,,,,,,,,,,,,,,,656,,,656',
',,656,,,656,,656,,,,656,,,,,,,,656,,,,,656,656,656,656,656,656,,,,656',
'656,,,,255,255,255,656,255,,656,,255,255,656,656,,255,,255,255,255,255',
'255,255,255,,,,,,255,255,255,255,255,255,255,,,255,,,,,,,255,,,255,255',
',255,255,255,255,255,,255,255,255,,255,255,255,,255,255,,,,,,,,,,,,',
',,,,,,,,255,,,255,,,255,,,255,,,,,,255,,,,,,,,255,,,,,255,255,255,255',
'255,255,,,,255,255,,,,260,260,260,255,260,,255,,260,260,255,255,,260',
',260,260,260,260,260,260,260,,,,,,260,260,260,260,260,260,260,,,260',
',,,,,,260,,,260,260,,260,260,260,260,260,,260,260,260,,260,260,260,',
'260,260,,,,,,,,,,,,,,,,,,,,,260,,,260,,,260,,,260,,,,,,260,,,,,,,,260',
',,,,260,260,260,260,260,260,,,,260,260,,,,659,659,659,260,659,,260,',
'659,659,260,260,,659,,659,659,659,659,659,659,659,,,,,,659,659,659,659',
'659,659,659,,,659,,,,,,,659,,,659,659,,659,659,659,659,659,659,659,659',
'659,,659,659,659,,659,659,,,,,,,,,,,,,,,,,,,,,659,,,659,,,659,,,659',
',659,,659,,659,,,,,,,,659,,,,,659,659,659,659,659,659,,,,659,659,,,',
'660,660,660,659,660,,659,,660,660,659,659,,660,,660,660,660,660,660',
'660,660,,,,,,660,660,660,660,660,660,660,,,660,,,,,,,660,,,660,660,',
'660,660,660,660,660,660,660,660,660,,660,660,660,,660,660,,,,,,,,,,',
',,,,,,,,,,660,,,660,,,660,,,660,,,,660,,660,,,,,,,,660,,,,,660,660,660',
'660,660,660,,,,660,660,,,,380,380,380,660,380,,660,,380,380,660,660',
',380,,380,380,380,380,380,380,380,,,,,,380,380,380,380,380,380,380,',
',380,,,,,,,380,,,380,380,,380,380,380,380,380,,380,380,380,,380,380',
'380,,380,380,,,,,,,,,,,,,,,,,,,,,380,,,380,,,380,,,380,,,,,,380,,,,',
',,,380,,,,,380,380,380,380,380,380,,,,380,380,,,,266,266,266,380,266',
',380,,266,266,380,380,,266,,266,266,266,266,266,266,266,,,,,,266,266',
'266,266,266,266,266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266,266',
'266,266,266,,266,266,266,,266,266,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266',
',,266,,266,,266,,266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266',
',,,267,267,267,266,267,,266,,267,267,266,266,,267,,267,267,267,267,267',
'267,267,,,,,,267,267,267,267,267,267,267,,,267,,,,,,,267,,,267,267,',
'267,267,267,267,267,267,267,267,267,,267,267,267,,267,267,,,,,,,,,,',
',,,,,,,,,,267,,,267,,,267,,,267,,267,,267,,267,,,,,,,,267,,,,,267,267',
'267,267,267,267,,,,267,267,,,,275,275,275,267,275,,267,,275,275,267',
'267,,275,,275,275,275,275,275,275,275,,,,,,275,275,275,275,275,275,275',
',,275,,,,,,,275,,,275,275,,275,275,275,275,275,275,275,275,275,,275',
'275,275,,275,275,,,,,,,,,,,,,,,,,,,,,275,,,275,,275,275,,,275,,275,',
'275,,275,,,,,,,,275,,,,,275,275,275,275,275,275,,,,275,275,,,,,,,275',
',,275,,,,275,275,666,666,666,666,666,,,,666,666,,,,666,,666,666,666',
'666,666,666,666,,,,,,666,666,666,666,666,666,666,,,666,,,,,,666,666',
',666,666,666,,666,666,666,666,666,,666,666,666,,666,666,666,,666,666',
',,,,,,,,,,,,,,,,,,,,666,,,666,,,666,,,666,,666,,,,666,,,,,,,,666,,,',
',666,666,666,666,666,666,,,,666,666,,,,,,,666,,,666,,,,666,666,818,818',
'818,818,818,,,,818,818,,,,818,,818,818,818,818,818,818,818,,,,,,818',
'818,818,818,818,818,818,,,818,,,,,,818,818,,818,818,818,,818,818,818',
'818,818,,818,818,818,,818,818,818,,818,818,,,,,,,,,,,,,,,,,,,,,818,',
',818,,,818,,,818,,818,,,,818,,,,,,,,818,,,,,818,818,818,818,818,818',
',,,818,818,,,,,,,818,,,818,,,,818,818,817,817,817,817,817,,,,817,817',
',,,817,,817,817,817,817,817,817,817,,,,,,817,817,817,817,817,817,817',
',,817,,,,,,817,817,,817,817,817,,817,817,817,817,817,,817,817,817,,817',
'817,817,,817,817,,,,,,,,,,,,,,,,,,,,,817,,,817,,,817,,,817,,817,,,,817',
',,,,,,,817,,,,,817,817,817,817,817,817,,,,817,817,,,,,,,817,,,817,,',
',817,817,279,279,279,279,279,,,,279,279,,,,279,,279,279,279,279,279',
'279,279,,,,,,279,279,279,279,279,279,279,,,279,,,,,,279,279,,279,279',
'279,,279,279,279,279,279,,279,279,279,,279,279,279,,279,279,,,,,,,,',
',,,,,,,,,,,,279,,,279,,,279,,,279,,279,,,,279,,,,,,,,279,,,,,279,279',
'279,279,279,279,,,,279,279,,,,815,815,815,279,815,,279,,815,815,279',
'279,,815,,815,815,815,815,815,815,815,,,,,,815,815,815,815,815,815,815',
',,815,,,,,,,815,,,815,815,,815,815,815,815,815,,815,815,815,,815,815',
'815,,815,815,,,,,,,,,,,,,,,,,,,,,815,,,815,,,815,,,815,,,,,,815,,,,',
',,,815,,,,,815,815,815,815,815,815,,,,815,815,,,,,,,815,,,815,,,,815',
'815,667,667,667,667,667,,,,667,667,,,,667,,667,667,667,667,667,667,667',
',,,,,667,667,667,667,667,667,667,,,667,,,,,,667,667,,667,667,667,,667',
'667,667,667,667,,667,667,667,,667,667,667,,667,667,,,,,,,,,,,,,,,,,',
',,,667,,,667,,,667,,,667,,667,,,,667,,,,,,,,667,,,,,667,667,667,667',
'667,667,,,,667,667,,,,,,,667,,,667,,,,667,667,796,796,796,796,796,,',
',796,796,,,,796,,796,796,796,796,796,796,796,,,,,,796,796,796,796,796',
'796,796,,,796,,,,,,796,796,,796,796,796,,796,796,796,796,796,,796,796',
'796,,796,796,796,,796,796,,,,,,,,,,,,,,,,,,,,,796,,,796,,,796,,,796',
',796,,,,796,,,,,,,,796,,,,,796,796,796,796,796,796,,,,796,796,,,,283',
'283,283,796,283,,796,,283,283,796,796,,283,,283,283,283,283,283,283',
'283,,,,,,283,283,283,283,283,283,283,,,283,,,,,,,283,,,283,283,,283',
'283,283,283,283,,283,283,283,,283,283,283,,,,,,,,,,,,,,,,,,,,,,,,283',
',,283,,,283,,,283,,,,,,,,,,,,,,,,,,,283,283,283,283,283,283,,,,283,283',
',,,283,,,283,,,283,,,,283,283,284,284,284,284,284,,,,284,284,,,,284',
',284,284,284,284,284,284,284,,,,,,284,284,284,284,284,284,284,,,284',
',,,,,284,284,,284,284,284,,284,284,284,284,284,,284,284,284,,284,284',
'284,,284,284,,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,,,284,,284,,,,284,',
',,,,,,284,,,,,284,284,284,284,284,284,,,,284,284,,,,671,671,671,284',
'671,,284,,671,671,284,284,,671,,671,671,671,671,671,671,671,,,,,,671',
'671,671,671,671,671,671,,,671,,,,,,,671,,,671,671,,671,671,671,671,671',
',671,671,671,,671,671,671,,,,,,,,,,,,,,,,,,,,,,,,671,,,671,,,671,,,671',
',,,,,,,,,,,,,,,,,,671,671,671,671,671,671,,,,671,671,,,,681,681,681',
'671,681,,671,,681,681,671,671,,681,,681,681,681,681,681,681,681,,,,',
',681,681,681,681,681,681,681,,,681,,,,,,,681,,,681,681,,681,681,681',
'681,681,,681,681,681,,681,681,681,,,,,,,,,,,,,,,,,,,,,,,,681,,,681,',
',681,,,681,,,,,,,,,,,,,,,,,,,681,681,681,681,681,681,,,,681,681,,,,368',
'368,368,681,368,,681,,368,368,681,681,,368,,368,368,368,368,368,368',
'368,,,,,,368,368,368,368,368,368,368,,,368,,,,,,,368,,,368,368,,368',
'368,368,368,368,,368,368,368,,368,368,368,,,,,,,,,,,,,,,,,,,,,,,,368',
',,368,,,368,,,368,,,,,,,,,,,,,,,,,,,368,368,368,368,368,368,,,,368,368',
',,,688,688,688,368,688,,368,,688,688,368,368,,688,,688,688,688,688,688',
'688,688,,,,,,688,688,688,688,688,688,688,,,688,,,,,,,688,,,688,688,',
'688,688,688,688,688,,688,688,688,,688,688,688,,688,688,,,,,,,,,,,,,',
',,,,,,,688,,,688,,,688,,,688,,688,,,,688,,,,,,,,688,,,,,688,688,688',
'688,688,688,,,,688,688,,,,786,786,786,688,786,,688,,786,786,688,688',
',786,,786,786,786,786,786,786,786,,,,,,786,786,786,786,786,786,786,',
',786,,,,,,,786,,,786,786,,786,786,786,786,786,,786,786,786,,786,786',
'786,,786,786,,,,,,,,,,,,,,,,,,,,,786,,,786,,,786,,,786,,786,,,,786,',
',,,,,,786,,,,,786,786,786,786,786,786,,,,786,786,,,,719,719,719,786',
'719,,786,,719,719,786,786,,719,,719,719,719,719,719,719,719,,,,,,719',
'719,719,719,719,719,719,,,719,,,,,,,719,,,719,719,,719,719,719,719,719',
',719,719,719,,719,719,719,,719,719,,,,,,,,,,,,,,,,,,,,,719,,,719,,,719',
',,719,,719,,,,719,,,,,,,,719,,,,,719,719,719,719,719,719,,,,719,719',
',,,349,349,349,719,349,,719,,349,349,719,719,,349,,349,349,349,349,349',
'349,349,,,,,,349,349,349,349,349,349,349,,,349,,,,,,,349,,,349,349,',
'349,349,349,349,349,,349,349,349,,349,349,349,,349,349,,,,,,,,,,,,,',
',,,,,,,349,,,349,,,349,,,349,,,,,,349,,,,,,,,349,,,,,349,349,349,349',
'349,349,,,,349,349,,,,775,775,775,349,775,,349,,775,775,349,349,,775',
',775,775,775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775',
',,,,,,775,,,775,775,,775,775,775,775,775,,775,775,775,,775,775,775,',
'775,775,,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,,,775,,,,,,775,,,,,,,,775',
',,,,775,775,775,775,775,775,,,,775,775,,,,774,774,774,775,774,,775,',
'774,774,775,775,,774,,774,774,774,774,774,774,774,,,,,,774,774,774,774',
'774,774,774,,,774,,,,,,,774,,,774,774,,774,774,774,774,774,,774,774',
'774,,774,774,774,,774,774,,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,,,774',
',,,,,774,,,,,,,,774,,,,,774,774,774,774,774,774,,,,774,774,,,,296,296',
'296,774,296,,774,,296,296,774,774,,296,,296,296,296,296,296,296,296',
',,,,,296,296,296,296,296,296,296,,,296,,,,,,,296,,,296,296,,296,296',
'296,296,296,,296,296,296,,296,296,296,,,,,,,,,,,,,,,,,,,,,,,,296,,,296',
',,296,,,296,,,,,,,,,,,,,,,,,,,296,296,296,296,296,296,,,,296,296,,,',
'773,773,773,296,773,,296,,773,773,296,296,,773,,773,773,773,773,773',
'773,773,,,,,,773,773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,',
'773,773,773,773,773,,773,773,773,,773,773,773,,773,773,,,,,,,,,,,,,',
',,,,,,,773,,,773,,,773,,,773,,,,,,773,,,,,,,,773,,,,,773,773,773,773',
'773,773,,,,773,773,,,,348,348,348,773,348,,773,,348,348,773,773,,348',
',348,348,348,348,348,348,348,,,,,,348,348,348,348,348,348,348,,,348',
',,,,,,348,,,348,348,,348,348,348,348,348,,348,348,348,,348,348,348,',
'348,348,,,,,,,,,,,,,,,,,,,,,348,,,348,,,348,,,348,,,,,,348,,,,,,,,348',
',,,,348,348,348,348,348,348,,,,348,348,,,,725,725,725,348,725,,348,',
'725,725,348,348,,725,,725,725,725,725,725,725,725,,,,,,725,725,725,725',
'725,725,725,,,725,,,,,,,725,,,725,725,,725,725,725,725,725,,725,725',
'725,,725,725,725,,725,725,,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,,,725',
',,,,,725,,,,,,,,725,,,,,725,725,725,725,725,725,,,,725,725,,,,,,,725',
',,725,,,,725,725,730,730,730,730,730,,,,730,730,,,,730,,730,730,730',
'730,730,730,730,,,,,,730,730,730,730,730,730,730,,,730,,,,,,730,730',
',730,730,730,,730,730,730,730,730,,730,730,730,,730,730,730,,730,730',
',,,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,730,,730,,,,730,,,,,,,,730,,,',
',730,730,730,730,730,730,,,,730,730,,,,,,,730,,,730,,,,730,730,734,734',
'734,734,734,,,,734,734,,,,734,,734,734,734,734,734,734,734,,,,,,734',
'734,734,734,734,734,734,,,734,,,,,,734,734,,734,734,734,,734,734,734',
'734,734,,734,734,734,,734,734,734,,734,734,,,,,,,,,,,,,,,,,,,,,734,',
',734,,,734,,,734,,734,,,,734,,,,,,,,734,,,,,734,734,734,734,734,734',
',,,734,734,,,,,,,734,,,734,,,,734,734,735,735,735,735,735,,,,735,735',
',,,735,,735,735,735,735,735,735,735,,,,,,735,735,735,735,735,735,735',
',,735,,,,,,735,735,,735,735,735,,735,735,735,735,735,,735,735,735,,735',
'735,735,,735,735,,,,,,,,,,,,,,,,,,,,,735,,,735,,,735,,,735,,735,,,,735',
',,,,,,,735,,,,,735,735,735,735,735,735,,,,735,735,,,,306,306,306,735',
'306,,735,,306,306,735,735,,306,,306,306,306,306,306,306,306,,,,,,306',
'306,306,306,306,306,306,,,306,,,,,,,306,,,306,306,,306,306,306,306,306',
',306,306,306,,306,306,306,,306,306,,,,,,,,,,,,,,,,,,,,,306,,,306,306',
',306,,,306,,,,,,306,,,,,,,,306,,,,,306,306,306,306,306,306,,,,306,306',
',,,,,,306,,,306,,,,306,306,308,308,308,308,308,,,,308,308,,,,308,,308',
'308,308,308,308,308,308,,,,,,308,308,308,308,308,308,308,,,308,,,,,',
'308,308,,308,308,308,,308,308,308,308,308,,308,308,308,,308,308,308',
',308,308,,,,,,,,,,,,,,,,,,,,,308,,,308,,,308,,,308,,308,,,,308,,,,,',
',,308,,,,,308,308,308,308,308,308,,,,308,308,,,,742,742,742,308,742',
',308,,742,742,308,308,,742,,742,742,742,742,742,742,742,,,,,,742,742',
'742,742,742,742,742,,,742,,,,,,,742,,,742,742,,742,742,742,742,742,',
'742,742,742,,742,742,742,,742,742,,,,,,,,,,,,,,,,,,,,,742,,,742,,,742',
',,742,,,,,,742,,,,,,,,742,,,,,742,742,742,742,742,742,,,,742,742,,,',
'763,763,763,742,763,,742,,763,763,742,742,,763,,763,763,763,763,763',
'763,763,,,,,,763,763,763,763,763,763,763,,,763,,,,,,,763,,,763,763,',
'763,763,763,763,763,,763,763,763,,763,763,763,,763,763,,,,,,,,,,,,,',
',,,,,,,763,,,763,,,763,,,763,,,,,,763,,,,,,,,763,,,,,763,763,763,763',
'763,763,,,,763,763,,,,762,762,762,763,762,,763,,762,762,763,763,,762',
',762,762,762,762,762,762,762,,,,,,762,762,762,762,762,762,762,,,762',
',,,,,,762,,,762,762,,762,762,762,762,762,,762,762,762,,762,762,762,',
'762,762,,,,,,,,,,,,,,,,,,,,,762,,,762,,,762,,,762,,,,,,762,,,,,,,,762',
',,,,762,762,762,762,762,762,,,,762,762,,,,237,237,237,762,237,,762,',
'237,237,762,762,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237',
'237,237,237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,,237,237',
'237,,237,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,,237',
',,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,88,,,237',
',,237,88,88,88,237,237,88,88,88,736,88,736,736,736,736,736,,,88,,88',
'88,88,,,,736,,,,88,88,,88,88,88,88,88,,,,,,,,,,,736,,,,,,,,736,736,736',
'736,,,88,88,88,88,88,88,88,88,88,88,88,88,88,88,,,88,88,88,,88,88,,',
'88,,,88,,88,,88,736,88,,88,88,88,88,88,88,88,,88,,88,,,,,,,,,,,,,88',
'88,88,88,,88,437,88,88,,,88,,437,437,437,,,,437,437,838,437,838,838',
'838,838,838,,,,,,,,,,,838,,,,437,437,,437,437,437,437,437,,,,,,,,,,',
'838,,,,,,,,838,838,838,838,,,437,437,437,437,437,437,437,437,437,437',
'437,437,437,437,,,437,437,437,,437,,,,437,,,,,,,437,838,437,,437,437',
'437,437,437,437,437,,437,,437,,,,,,,,,,,,,437,437,,437,,437,637,,437',
',,437,,637,637,637,,,637,637,637,897,637,897,897,897,897,897,,,,,637',
'637,,,,,897,,,,637,637,,637,637,637,637,637,,,,,,,,,,,897,897,,,,,,',
'897,897,897,897,,,637,637,637,637,637,637,637,637,637,637,637,637,637',
'637,,,637,637,637,,637,637,,,637,,,637,,637,,637,897,637,,637,637,637',
'637,637,637,637,,637,,637,,,,,,,,,,,,,637,637,637,637,,637,636,,637',
',,637,,636,636,636,,,636,636,636,595,636,595,595,595,595,595,,,,636',
'636,636,,,,,595,,,,636,636,,636,636,636,636,636,,,,,,,,,,,595,595,,',
',,,,595,595,595,595,,,636,636,636,636,636,636,636,636,636,636,636,636',
'636,636,,,636,636,636,,636,636,,,636,,,636,,636,,636,595,636,,636,636',
'636,636,636,636,636,,636,636,636,,,,,,,,,,,,,636,636,636,636,,636,435',
',636,,,636,,435,435,435,,,,435,435,,435,,,,,,,,,435,,,,,,,,,,,435,435',
',435,435,435,435,435,,,,,,,,,,,,,,,,,,,,,,,,,435,435,435,435,435,435',
'435,435,435,435,435,435,435,435,,,435,435,435,,435,,,,435,,,,,,,435',
',435,,435,435,435,435,435,435,435,,435,435,435,,,,,,,,,,,,,435,435,',
'435,,435,85,,435,,,435,,85,85,85,,,85,85,85,,85,,,,,,,,85,,85,85,85',
',,,,,,,85,85,,85,85,85,85,85,,,,,,,,,,,,,,,,,,,,,,,,,85,85,85,85,85',
'85,85,85,85,85,85,85,85,85,,,85,85,85,,85,85,,,85,,,85,,85,,85,,85,',
'85,85,85,85,85,85,85,,85,,85,,,,,,,,,,,,,85,85,85,85,,85,440,85,85,',
',85,,440,440,440,,,440,440,440,,440,,,,,,,,,440,440,440,440,,,,,,,,440',
'440,,440,440,440,440,440,,,,,,,,,,,,,,,,,,,,,,,,,440,440,440,440,440',
'440,440,440,440,440,440,440,440,440,,,440,440,440,,,440,,,440,,,440',
',440,,440,,440,,440,440,440,440,440,440,440,,440,440,440,,,,,,,,,,,',
',440,440,440,440,439,440,,440,440,,,439,439,439,,,439,439,439,,439,',
',,,,,,,439,439,439,439,,,,,,,,439,439,,439,439,439,439,439,,,,,,,,,',
',,,,,,,,,,,,,,,439,439,439,439,439,439,439,439,439,439,439,439,439,439',
',,439,439,439,,,439,,,439,,,439,,439,,439,,439,,439,439,439,439,439',
'439,439,,439,439,439,,,,,,,,,,,,,439,439,439,439,50,439,,439,439,,,50',
'50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50,50,,50,50,50,50,50',
',,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50,50,50,50,50,50,,',
'50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50,50,50,,50,,50,,',
',,,,,,,,,,50,50,50,50,28,50,,50,50,,,28,28,28,,,28,28,28,,28,,,,,,,',
',,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,,28',
',28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28,28,431,28',
',,28,,,431,431,431,,,431,431,431,,431,,,,,,,,,431,431,431,,,,,,,,,431',
'431,,431,431,431,431,431,,,,,,,,,,,,,,,,,,,,,,,,,431,431,431,431,431',
'431,431,431,431,431,431,431,431,431,,,431,431,431,,,431,,431,431,,,431',
',431,,431,,431,,431,431,431,431,431,431,431,,431,431,431,,,,,,,,,,,',
',431,431,431,431,27,431,,,431,,,27,27,27,,,27,27,27,,27,,,,,,,,,27,27',
'27,,,,,,,,,27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27',
'27,27,27,27,27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27',
',27,27,27,27,27,27,27,,27,27,27,,,,,,,,,,,,,27,27,27,27,489,27,,,27',
',,489,489,489,,,489,489,489,,489,,,,,,,,,,489,,,,,,,,,,489,489,,489',
'489,489,489,489,,,,,,,,,,,,,,492,,,,,,,492,492,492,,,492,492,492,,492',
',,,,,489,,,,492,,,489,,,,,489,489,492,492,,492,492,492,492,492,,,,,',
',,,,,,,489,,,,,,,,,,,,,489,,489,,,489,,,,,492,,,,,,,492,,,,,492,492',
',,,,,,,,,,,,,,,,,,,,492,,,,,,,,,,,,,492,,492,,,492,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,,8,8,,,8,,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,',
',,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,415,415,415,415,415',
'415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,,,,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,415,,415,415,,,415,,,,,,,,,,415,415,,415,415,415',
'415,415,415,415,,,415,415,,,,415,415,415,415,,,,,,,,,,,,,415,415,,415',
'415,415,415,415,415,415,415,415,415,415,,,415,415,,,,,,,,,,415,411,411',
'411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,,,,411,411,411,411,411,411,411,411,411,411,411,411',
'411,411,411,411,411,411,411,411,411,,411,411,,,411,,,,,,,,,,411,411',
',411,411,411,411,411,411,411,,,411,411,,,,411,411,411,411,,,,,,,,,,',
',,411,411,,411,411,411,411,411,411,411,411,411,411,411,,,411,411,,,',
',,,,,,411,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,,7,7,,7,7,7,7,7',
'7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,',
',,,,,,,7,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,,,,193,193,193,193,193,193,193,193',
'193,193,193,193,193,193,193,193,193,193,193,193,193,,193,193,193,193',
'193,,193,,,,,,,,193,193,,193,193,193,193,193,193,193,,,193,193,,,,193',
'193,193,193,,,,,,,,,,,,,193,193,,193,193,193,193,193,193,193,193,193',
'193,193,,,193,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,,65,65,,65,65,65,65,65,65,65',
',,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65',
'65,65,65,,,65,753,753,753,753,753,753,753,753,753,753,753,753,753,753',
'753,753,753,753,753,753,753,753,753,753,,,,753,753,753,753,753,753,753',
'753,753,753,753,753,753,753,753,753,753,753,753,753,753,,753,753,,,753',
',,,,,,,,,753,753,,753,753,753,753,753,753,753,,,753,753,,,,753,753,753',
'753,,,,,,,,,,,,,753,753,,753,753,753,753,753,753,753,753,753,753,753',
',,753,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,,79,79,79,79,79,,79,,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79',
',,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,264',
'264,79,,264,,,,,,,,,,264,264,,264,264,264,264,264,264,264,,,264,264',
',,,264,264,264,264,,,,,,,,,,,,,264,264,,264,264,264,264,264,264,264',
'264,264,264,264,586,586,264,,586,,,,,,,,,,586,586,,586,586,586,586,586',
'586,586,,,586,586,,,,586,586,586,586,,,,,,,,,,,,,586,586,,586,586,586',
'586,586,586,586,586,586,586,586,445,445,586,,445,,,,,,,,,,445,445,,445',
'445,445,445,445,445,445,,,445,445,,,,445,445,445,445,,,,,,445,,,,,,',
'445,445,,445,445,445,445,445,445,445,445,445,445,445,446,446,445,,446',
',,,,,,,,,446,446,,446,446,446,446,446,446,446,,,446,446,,,,446,446,446',
'446,,,,,,,,,,,,,446,446,,446,446,446,446,446,446,446,446,446,446,446',
'263,263,446,,263,,,,,,,,,,263,263,,263,263,263,263,263,263,263,,,263',
'263,,,,263,263,263,263,,,,,,,,,,,,,263,263,,263,263,263,263,263,263',
'263,263,263,263,263,588,588,263,,588,,,,,,,,,,588,588,,588,588,588,588',
'588,588,588,,,588,588,,,,588,588,588,588,,,,,,588,,,,,,,588,588,,588',
'588,588,588,588,588,588,588,588,588,588,202,202,588,,202,,,,,,,,,,202',
'202,,202,202,202,202,202,202,202,,,202,202,,,,202,202,202,202,,,,,,',
',,,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,201,201,202',
',201,,,,,,,,,,201,201,,201,201,201,201,201,201,201,,,201,201,,,,201',
'201,201,201,,,,,,201,,,,,,,201,201,,201,201,201,201,201,201,201,201',
'201,201,201,805,805,201,,805,,,,,,,,,,805,805,,805,805,805,805,805,805',
'805,,,805,805,,,,805,805,805,805,,,,,,,,,,,,,805,805,,805,805,805,805',
'805,805,805,805,805,805,805,925,925,805,,925,,,,,,,,,,925,925,,925,925',
'925,925,925,925,925,,,925,925,,,,925,925,925,925,,,,,,925,,,,,,,925',
'925,,925,925,925,925,925,925,925,925,925,925,925,926,926,925,,926,,',
',,,,,,,926,926,,926,926,926,926,926,926,926,,,926,926,,,,926,926,926',
'926,,,,,,,,,,,,,926,926,,926,926,926,926,926,926,926,926,926,926,926',
'531,531,926,,531,,,,,,,,,,531,531,,531,531,531,531,531,531,531,,,531',
'531,,,,531,531,531,531,,,,,,,,,,,,,531,531,,531,531,531,531,531,531',
'531,531,531,531,531,530,530,531,,530,,,,,,,,,,530,530,,530,530,530,530',
'530,530,530,,,530,530,,,,530,530,530,530,,,,,,530,,,,,,,530,530,,530',
'530,530,530,530,530,530,530,530,530,530,581,581,530,,581,,,,,,,,,,581',
'581,,581,581,581,581,581,581,581,,,581,581,,,,581,581,581,581,,,,,,',
',,,,,,581,581,,581,581,581,581,581,581,581,581,581,581,581,517,517,581',
',517,,,,,,,,,,517,517,,517,517,517,517,517,517,517,,,517,517,,,,517',
'517,517,517,,,,,,517,,,,,,,517,517,,517,517,517,517,517,517,517,517',
'517,517,517,518,518,517,,518,,,,,,,,,,518,518,,518,518,518,518,518,518',
'518,,,518,518,,,,518,518,518,518,,,,,,,,,,,,,518,518,,518,518,518,518',
'518,518,518,518,518,518,518,580,580,518,,580,,,,,,,,,,580,580,,580,580',
'580,580,580,580,580,,,580,580,,,,580,580,580,580,,,,,,580,,,,,,,580',
'580,,580,580,580,580,580,580,580,580,580,580,580,,,580' ]
        racc_action_check = arr = ::Array.new(24117, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1174,   nil,   503,   nil,  1023,  1049, 22502, 22130,  1024,
   998,   996,  1044,   340,   573,     2,   nil,  1812,  1939,  2737,
  1094,   nil,  2344,  2471,  2598,   248,    -2, 21813, 21553,   nil,
  3257,  3384,  3511,   nil,   976,   572,  1039,   596,  4182,  4309,
  4436,   959,   467,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21423,   nil,  4968,  5095,  5222,   -15,  3790,  5603,  5730,   nil,
   nil,  5857,  5996,  6123,   nil, 22739,   nil,   nil,   nil,   nil,
   nil,   228,   nil,   nil,   nil,   nil,   nil,   917,   916, 22965,
   nil,   nil,   nil,   nil,   683, 21031,   nil,   nil, 20371,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,  1033,   nil,
  7429,   nil,   nil,   nil,  7568,  7695,  7822,  7949,  8088,  8227,
   nil,   621,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 22626,   900,   nil,  8759,  8886,  9013,  9140,
  9267, 23453, 23392,  9648,  9775,  9902,   nil,   635,   -66,   970,
   -30,   867,   915, 10803, 10930,   nil,   nil, 11057,   903, 11311,
 11438, 11565, 11692, 11819, 11946, 12073, 12200, 12327, 12454, 12581,
 12708, 12835, 12962, 13089, 13216, 13343, 13470, 20242, 13736, 13863,
 13990, 14117, 14244, 14371, 14498,   nil,   nil,   nil,  1812,   nil,
   864,   861,   nil, 15018,   882, 15284,   nil,   nil,   nil,   nil,
 15411,   nil,   nil, 23270, 23026,   870, 15919, 16046,   nil,   nil,
   nil,   nil,   nil,   nil,   nil, 16173,   -48,   491,   863, 16729,
   853,   834,   786, 17261, 17400,   563,   252,   857,   339,   807,
   757,   -11,   nil,   790,   429,   nil, 18670,   nil,   351,   803,
   801,   800,   591,   nil,   790,   nil, 19595,   nil, 19734,   240,
   nil,   728,   -89,    40,   753,   725,   122,   678,   nil,   nil,
    39,  3524,   nil,   nil,   nil,   627,   602,   nil,   599,   574,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   776,   nil,   nil,
   nil,   632,   nil,   nil,   596,   465,    74,    83, 18924, 18289,
   463,   222,   334,   -18,   414,   340,    78,   323,   nil,   nil,
   -14,   247,   nil,   254,   nil,    68,   nil,   nil, 17781,   509,
   506,   487,   427,   382,   518,   267,   378,   nil,   182,   nil,
 15792,   nil,   238,   nil,   157,   nil,   252,    90,   173,   nil,
   129,   -53,   nil,   228,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   242, 22378,   nil,   nil,   nil, 22254,   457,   nil,   nil,   378,
   nil, 14891,   477,   nil,   645,   nil,   nil,  1685,   689,   605,
   659, 21683,   nil,   nil,   nil, 20899,   781, 20503,   nil, 21293,
 21163,   nil,  2078,   nil,   nil, 23148, 23209, 10664,     4, 10410,
 10029,  9521,   343,   nil,  2991,  3118,   756,   637,   923,   969,
  1020,  1049,  5349,  5222,  3800,  3257,  3916,  4055,  4309,  4436,
  4563,  4841,  4968,  4702,  5095,   738,   874,  4182,  3650,  1038,
   190,   nil,  3118,   nil,  2991,   nil,  2864,   nil,   nil, 21943,
   nil,   nil, 22000,   369,   nil,   756,   nil,   nil,   744,   631,
   nil,   nil,  1038,   -41,   367,   835,   nil,   nil,   899,   930,
   897,   nil,   nil,   955,   379,  1006,   125, 23880, 23941,   466,
  1088,   nil,   nil,   nil,   998,   nil,   252,   506,   633,   760,
 23758, 23697,  2598,  1165,   682,   837,   757,   nil,   nil,  1419,
   nil,   nil,  1685,   nil,   nil,   nil,   nil,  2078,  3650,   867,
   nil,   305,   nil,   nil,  3777,  3437,   nil,   518,   nil,   nil,
  1028,   nil,   915,   nil,   997,   945,   nil,   nil,  3916,  1138,
   nil,   nil,  4702,   193,   106,  1156,  1155,  4841,   nil,  5349,
 24002, 23819,    10,   nil,   590,   nil, 23087,  5476, 23331,   nil,
   nil,  6250,   416,  6782,   nil, 20731,   nil,   nil,   nil,    39,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -48,   nil,   nil,   nil,   920,   nil,   nil,   nil,   nil,   nil,
  6909,   903,  7036,   699,  7163,  8354,   866,   nil,   nil,   nil,
  8481,   838,   nil,  9394,   220,    16, 20767, 20635,   757,   506,
   nil, 11184,   nil,  3397,   nil, 14637,   604,   nil,   543, 14764,
   nil,   nil,   nil,   nil,   nil,   nil, 15157,   nil,   428, 15538,
 15665,  1419,    63,   nil,   nil,    76, 16312, 16995,   nil,  1038,
   -67, 17527,   -63,   nil,   987,   200,    79,    18,    60,   621,
   105, 17654,  1558,   221,   223,   225,   286,   329, 17908,   nil,
   nil,   199,   250,   356,   nil,   nil,   238,   nil,   264,   381,
   352,   291,   300,   nil,   nil,   352,   930,   nil,   786,   nil,
   508,   nil,   nil,   nil,   nil,   nil,   547,   nil,   553, 18162,
   508,    81,   110,   235,   229, 19051,   625,   nil,   624,   624,
 19190,   591,   nil,   210, 19329, 19468, 20335,   601,   nil,   nil,
   725,   nil, 19861,   nil,   668,   678,   nil,   681,   687,   691,
   nil,   695,   nil, 22852,   747,   953, 13609,   nil,   nil,   nil,
  1165,   722, 20115, 19988,   nil,  2344,   nil,  1292,   nil,   nil,
  2217,   nil,  2864, 18797, 18543, 18416,   -47,  2471,   nil,   777,
   884,   nil,   nil,   781,   nil,   768, 18035,   nil,   793,   898,
   782,   651,   nil,   nil,   905,   nil, 17134,   794,   835,   nil,
   nil,   nil,   nil,   nil,   nil, 23514,   nil,   703,   nil,   nil,
   nil,   nil,   810,   927,   nil, 16856,   940, 16590, 16451,   nil,
   nil,   100,    75,   204,   nil,   965,   nil,   nil,   966,   973,
   862,   nil,   nil,   nil,    25,   nil,   nil,    49, 20467,   nil,
   840,   nil,   572,   nil, 10537,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   895,   892,   nil,  1939, 10283,   nil,   nil,   nil,
 10156,   898,   nil,   nil,   nil,  8620,   nil,   nil,    75,  7290,
   nil,   944,   907,   nil,   nil,    36,   nil,  1034,  1036,  6655,
  6528,   nil,   nil,  6389,   nil,   nil,   959,   nil,   923,   nil,
   nil,   925,   945,   946,   -83,   nil,   nil, 20599,   nil,   nil,
  4563,   nil,  4055,   464,   337,  1047,   336,   nil,   nil,  2737,
   nil,   nil,   nil,    10,  2217,  1115,   nil,   nil,   789,   nil,
   nil,   nil,  1558,  1122,  1292, 23575, 23636,   541,   821,   nil,
   nil,   nil,  1142,   nil,  1023,  1150,   nil,  1065,    -7,    67,
    94,   627,   nil,   nil,   nil,   nil,   652 ]

racc_action_default = [
    -3,  -550,    -1,  -538,    -4,    -6,  -550,  -550,  -550,  -550,
  -550,  -550,  -550,  -550,  -272,   -36,   -37,  -550,  -550,   -42,
   -44,   -45,  -283,  -321,  -322,   -49,  -250,  -250,  -250,   -61,
   -10,   -65,   -72,   -74,  -550,  -452,  -550,  -550,  -550,  -550,
  -550,  -540,  -227,  -265,  -266,  -267,  -268,  -269,  -270,  -271,
  -528,  -274,  -550,  -549,  -520,  -291,  -549,  -550,  -550,  -296,
  -299,  -538,  -550,  -550,  -313,  -550,  -323,  -324,  -392,  -393,
  -394,  -395,  -396,  -549,  -399,  -549,  -549,  -549,  -549,  -549,
  -426,  -432,  -433,  -434,  -550,  -526,  -442,  -443,  -527,  -445,
  -446,  -447,  -448,  -449,  -450,  -451,  -454,  -455,  -550,    -2,
  -539,  -545,  -546,  -547,  -550,  -550,  -550,  -550,  -550,    -3,
   -13,  -550,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,
  -110,  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,
  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -550,   -18,  -107,   -10,  -550,  -550,  -550,
  -549,  -550,  -550,  -550,  -550,  -550,   -40,  -550,  -452,  -550,
  -272,  -550,  -550,   -10,  -550,   -41,  -219,  -550,  -550,  -550,
  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,
  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,  -550,
  -550,  -550,  -550,  -550,  -550,  -363,  -365,   -46,  -228,  -243,
  -257,  -257,  -247,  -550,  -258,  -550,  -283,  -321,  -322,  -522,
  -550,   -47,   -48,  -550,  -550,   -53,  -549,  -550,  -290,  -368,
  -375,  -377,   -59,  -373,   -60,  -550,  -538,   -11,   -61,   -10,
  -550,  -550,   -66,   -69,   -10,   -80,  -550,  -550,   -87,  -286,
  -540,  -550,  -325,  -374,  -550,   -71,  -550,   -76,  -279,  -435,
  -436,  -437,  -550,  -204,  -205,  -220,  -550,  -541,   -10,  -540,
  -229,  -540,  -542,  -542,  -550,  -550,  -542,  -550,  -292,  -293,
  -550,  -550,  -336,  -337,  -344,  -549,  -486,  -351,  -549,  -549,
  -362,  -485,  -487,  -488,  -489,  -490,  -491,  -550,  -504,  -509,
  -510,  -512,  -513,  -514,  -550,   -43,  -550,  -550,  -550,  -550,
  -538,  -550,  -539,  -452,  -550,  -550,  -272,  -550,  -493,  -494,
   -96,  -550,   -98,  -550,  -272,  -550,  -310,  -452,  -550,  -100,
  -101,  -138,  -139,  -155,  -160,  -167,  -170,  -316,  -550,  -518,
  -550,  -397,  -550,  -412,  -550,  -414,  -550,  -550,  -550,  -404,
  -550,  -550,  -410,  -550,  -425,  -427,  -428,  -429,  -430,  -438,
  -439,  -440,   947,    -5,  -548,   -19,   -20,   -21,   -22,   -23,
  -550,  -550,   -15,   -16,   -17,  -550,  -550,   -25,   -33,  -183,
  -258,  -550,  -550,   -26,   -34,   -35,   -27,  -185,  -550,  -529,
  -530,  -250,  -370,  -531,  -532,  -529,  -250,  -530,  -372,  -531,
  -532,   -32,  -192,   -38,   -39,  -550,  -550,  -549,  -279,  -550,
  -550,  -550,  -550,  -289,  -193,  -194,  -195,  -196,  -197,  -198,
  -199,  -200,  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,
  -214,  -215,  -216,  -217,  -218,  -221,  -222,  -223,  -224,  -550,
  -549,  -244,  -550,  -245,  -550,  -255,  -550,  -259,  -525,  -250,
  -529,  -530,  -250,  -549,   -54,  -540,  -238,  -239,  -257,  -257,
  -251,  -252,  -550,  -549,  -549,  -550,  -285,    -9,  -539,  -550,
   -62,  -277,   -77,   -67,  -550,  -550,  -549,  -550,  -550,   -86,
  -550,  -435,  -436,  -437,   -73,   -78,  -550,  -550,  -550,  -550,
  -550,  -550,  -225,  -550,  -384,  -550,  -550,  -230,  -231,  -544,
  -543,  -233,  -544,  -281,  -282,  -521,  -333,   -10,   -10,  -550,
  -335,  -550,  -353,  -360,  -550,  -357,  -358,  -550,  -361,  -486,
  -550,  -495,  -550,  -497,  -499,  -503,  -511,  -515,   -10,  -326,
  -327,  -328,   -10,  -550,  -550,  -550,  -550,   -10,  -379,  -549,
  -550,  -550,  -279,  -305,   -96,   -97,  -550,  -549,  -550,  -308,
  -456,  -550,  -550,  -550,  -314,  -484,  -318,  -536,  -537,  -540,
  -398,  -413,  -416,  -417,  -419,  -400,  -415,  -401,  -402,  -403,
  -550,  -406,  -408,  -409,  -550,  -431,    -7,   -14,  -108,   -24,
  -550,  -264,  -550,  -280,  -550,  -550,   -55,  -236,  -237,  -369,
  -550,   -57,  -371,  -550,  -529,  -530,  -529,  -530,  -550,  -183,
  -288,  -550,  -347,  -550,  -349,   -10,  -257,  -256,  -260,  -550,
  -523,  -524,   -50,  -366,   -51,  -367,   -10,  -234,  -550,  -240,
  -242,   -42,  -550,  -249,  -253,  -550,   -10,   -10,  -284,   -12,
   -62,  -550,   -70,   -75,  -550,  -529,  -530,  -549,  -533,   -85,
  -550,  -550,  -191,  -201,  -202,  -203,  -550,  -549,  -549,  -275,
  -276,  -542,  -550,  -550,  -334,  -345,  -550,  -352,  -549,  -346,
  -550,  -549,  -549,  -505,  -492,  -550,  -550,  -502,  -549,  -329,
  -549,  -297,  -330,  -331,  -332,  -300,  -550,  -303,  -550,  -550,
  -550,  -529,  -530,  -533,  -278,  -550,   -96,   -99,  -533,  -550,
   -10,  -550,  -458,  -550,   -10,   -10,  -484,  -550,  -461,  -462,
  -464,  -465,  -467,  -468,  -517,  -517,  -473,  -475,  -475,  -475,
  -483,  -486,  -507,  -550,  -550,  -550,   -10,  -405,  -407,  -411,
  -184,  -262,  -550,  -550,   -29,  -187,   -30,  -188,   -56,   -31,
  -189,   -58,  -190,  -550,  -550,  -550,  -280,  -226,  -348,  -550,
  -550,  -246,  -261,  -550,  -235,  -257,  -550,  -254,  -550,  -550,
   -68,   -81,   -79,  -287,  -549,  -342,   -10,  -385,  -549,  -386,
  -387,  -232,  -338,  -339,  -359,  -550,  -279,  -550,  -355,  -356,
  -496,  -498,  -501,  -550,  -340,  -550,  -550,   -10,   -10,  -302,
  -304,  -550,  -280,  -550,  -280,  -550,  -457,  -311,  -550,  -550,
  -540,  -460,  -463,  -466,  -550,  -471,  -472,  -550,  -550,  -479,
  -550,  -481,  -550,  -482,  -550,  -319,  -519,  -418,  -421,  -422,
  -423,  -424,  -550,  -263,   -28,  -186,  -550,  -350,  -364,   -52,
  -241,  -257,  -376,  -378,    -8,   -10,  -391,  -343,  -550,  -550,
  -389,  -278,  -549,  -500,  -294,  -550,  -295,  -550,  -550,  -550,
   -10,  -306,  -309,   -10,  -315,  -317,  -550,  -469,  -517,  -516,
  -474,  -475,  -475,  -475,  -550,  -508,  -506,  -484,  -420,  -248,
  -550,  -390,   -10,   -88,  -550,  -550,   -95,  -388,  -354,   -10,
  -298,  -301,  -260,  -549,   -10,  -550,  -459,  -470,  -550,  -477,
  -478,  -480,   -10,  -384,  -549,  -550,  -550,   -94,  -549,  -380,
  -381,  -382,  -550,  -312,  -475,  -550,  -383,  -550,  -529,  -530,
  -533,   -93,  -341,  -307,  -476,  -320,   -89 ]

clist = [
'26,306,377,314,249,249,249,292,292,330,103,576,282,687,5,535,395,26',
'26,99,269,273,26,26,26,524,561,215,483,322,26,115,115,418,425,311,365',
'494,292,292,538,541,568,572,545,750,250,250,250,100,735,553,26,26,556',
'558,703,26,26,110,195,26,695,346,347,431,436,350,103,265,272,274,118',
'118,2,295,280,351,647,794,647,711,715,251,251,251,747,601,560,115,746',
'278,585,611,813,835,836,650,663,895,26,206,816,115,26,26,26,26,26,26',
'405,406,407,408,5,316,247,261,262,839,841,843,409,5,645,384,386,489',
'492,393,395,653,897,308,655,348,309,656,12,817,349,345,345,818,725,345',
'914,666,667,730,428,593,883,368,734,650,595,753,596,320,546,378,701',
'864,589,357,403,194,12,359,246,480,503,504,929,719,798,895,868,381,382',
'319,311,410,388,610,750,318,345,345,345,345,391,847,755,756,26,26,26',
'26,26,830,888,26,26,26,417,423,426,887,315,379,441,26,26,500,891,115',
'665,411,657,422,422,811,495,1,440,747,,,,746,,,,716,698,,12,917,702',
',,672,,,12,12,249,249,520,561,,,707,647,647,249,,292,,,,919,920,921',
'26,26,,536,,537,292,650,330,26,483,525,,26,749,,,103,26,269,,273,443',
'444,498,250,507,,549,,,,452,250,,,,,,930,944,,26,431,436,,,705,942,758',
',727,695,,,,508,,,509,513,499,251,889,515,881,889,746,12,746,251,746',
',703,278,594,,,292,278,,750,26,26,,12,922,13,573,574,,103,,,497,501',
',,,,575,,,505,207,207,590,,,207,207,207,,,26,677,,13,286,286,,,747,',
',,746,,677,561,,638,768,,790,,936,771,,207,207,,,,207,207,,746,207,354',
'363,12,,801,,749,12,781,804,628,,808,809,311,632,,345,345,,115,,825',
',115,,828,829,281,677,,12,26,,,,,677,13,,658,647,207,207,207,207,13',
'13,617,599,,674,618,,,440,,,650,626,,118,,,631,118,,,628,,,628,,,,292',
',872,,,525,647,,311,,,873,26,,,,,,26,,,,,,,,26,880,,,,,669,892,799,893',
',,,720,292,,652,26,,654,,729,,,,,440,646,,,,26,26,13,207,207,207,207',
',440,207,207,207,754,,311,781,,902,,13,207,26,311,,909,26,931,,,,26',
',26,712,712,749,,,,309,26,,,915,26,,26,,,330,731,908,732,691,,,934,',
'440,,,,416,440,,,,,,779,686,,207,207,,,,26,26,281,,207,935,26,,13,764',
'766,,286,13,899,769,,,,,,26,12,292,,286,,,525,,,,26,292,,,,13,792,,',
',26,26,,,,628,,,632,345,,733,,,,,,,,12,12,,,,845,,281,,,,,281,,,,207',
'207,,,,12,,,,12,,422,,,12,,,,,785,363,,,,26,,,,,26,823,,207,26,26,,',
'826,,827,,,821,831,,,,,14,,,,,,,26,,,,,,,26,,,,,,,,,854,,,,,115,,14',
'288,288,,12,10,,,,,677,886,,,,12,,26,,,,207,,,,12,12,,,,345,861,356',
'364,,10,26,,26,26,,,875,,,,,,,,440,712,,,,,,,,,,,,,,,292,358,,,14,,',
',,,207,,14,14,,,13,,,,26,,286,12,207,,,12,12,937,,,,,,26,,,26,10,,207',
',,,,,10,10,12,,,,,345,13,13,26,,,35,311,699,,26,,,,,26,,,,,,,13,26,',
'26,13,,,,,13,,207,,12,35,285,285,,,207,,,,207,14,207,,,,440,,,,,12,12',
',,,692,693,14,,,,,353,367,,367,,,,,,,207,207,,10,708,,207,,710,,,,,718',
',,,,,,10,13,,,,,12,,35,,,,13,,,,35,35,,,,12,13,13,12,,,286,,,,14,,,',
'288,14,286,,,,,,12,,,,,288,,12,,,,,12,,,,,14,780,,12,,,10,,,,,10,783',
',,,,,,,,207,788,789,,,13,,,,13,13,,,,10,,,,,,,,,35,,,,,,,,13,,,,,,,207',
'364,35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13,,,,,,,,,,323,,,,,,,,,207,852',
'13,13,,,,,383,,385,385,389,392,385,,35,,,,285,35,,,,,,,,,,,,285,,,,',
',,,867,,,,35,,,,,13,,,,904,,,,,,,,877,878,,13,,,13,,,,,,,,,,,,,,,,,',
',13,,14,,,,,13,288,,,,13,,,,,,367,,13,,207,901,,,,,,,,,,,,,,10,913,',
',14,14,,,,,,364,,,,,,,,,,,,923,,14,,,,14,928,,,,14,932,,,,10,10,,,,',
',,,,,,,,317,,,,,,,10,,,,10,,,,,10,,,,,,,,496,,,,,,,,,,,,,,,,,,,,,,,',
',14,,,,,,,,,,,14,,,,,,,,35,,14,14,,,285,288,,,,,,,,552,10,288,552,552',
',,,,,,,10,,,,,,,,,,10,10,35,35,,,,,,367,,,,,,,,,,,,,,35,,,,35,,14,,',
'35,14,14,,,,420,424,,,,,,,,,,,,,,,851,14,,,,,,,,,10,,,,10,10,,,,,,,',
',,,,,,,627,,,,,,10,,,,485,14,487,,,,35,488,,,,,,,,,,35,,,,,14,14,,,',
'35,35,,,,285,,,,10,,,642,,,285,,,,,,627,,,627,642,,,,,10,10,,,,642,642',
',,,,,,14,,,,906,,,,,,,,,,,14,,,14,,,35,,,,35,35,,,,,,,,,10,,14,,907',
',,,,14,,,35,,14,10,,,10,216,,,14,248,248,248,,,,,,,,,,,,10,,303,304',
'305,,,10,,,,,10,,,35,,248,248,,10,,,,,,621,,,,,,,,,,35,35,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,35,,,648,903,317,,651,,,627,,,,',
'35,,,35,,795,800,,662,,,,,,,,552,,,552,552,,35,,,,795,,795,35,,,,,35',
',,,,,,,35,,,648,,,317,,,,,,,,,,,,,,419,248,427,248,,,442,,,,,,,,,,,',
',,216,,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469',
'470,471,472,473,474,475,476,477,478,479,,,866,,,,870,,248,,248,,,,,248',
',,761,,,248,248,,,,,,,,248,,,,,,,,,,,,,,,782,,,,,,,,,,648,317,,,,,532',
',,,,,,,,,,,,,,,,,,552,,,,797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,420,,,,,',
'795,,,,,,,,,,,,,,,795,,833,,,,,,,,,,,,,,,,,,,,853,,,,,,,,,,,,,,,,,,248',
',,,,,420,,,,,,,,,,,,,,,,,,,,248,,442,639,427,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,248,,248,896,248,,,,,,,,,,,,,,,317,661,,,,,,,,,,,,,,248,,,,912',
',,,,,682,683,684,685,,,,,,,,,,248,,912,248,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,248,,,,,,,,248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,760,,248,',
'765,767,,,,,770,,,772,,,,,,,,777,,,,,,,,248,,,,,,,,,,248,248,,,,,,,',
',,,,,,,,,,,,,,,,,,,,248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,248,,,,,,,,,,',
',,,,,,,,,,,,248,,,,,,,,,,,,,,,,,,,,248,855,,,,,,,,,,765,767,770,,,,',
',,,,,,248,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,248',
',,,,,,,,,,,855,,,,248,,,,,,,,,,,,,,,,,,,248,,,,,,,,,,,,,,,,,,,,,248',
',,,,,,,,,,,,,,,,,,,,,,,248' ]
        racc_goto_table = arr = ::Array.new(2575, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'37,51,47,22,29,29,29,52,52,107,83,80,41,10,7,8,47,37,37,4,57,57,37,37',
'37,43,145,18,61,104,37,48,48,24,24,29,46,35,52,52,55,55,77,77,55,141',
'54,54,54,6,84,109,37,37,109,109,147,37,37,14,14,37,106,16,16,33,33,16',
'83,34,34,34,50,50,2,42,39,4,62,11,62,79,79,56,56,56,110,129,148,48,108',
'38,45,129,78,142,142,154,62,151,37,26,11,48,37,37,37,37,37,37,16,16',
'16,16,7,56,31,31,31,143,143,143,7,7,36,126,126,33,33,126,47,60,101,87',
'60,88,26,36,20,89,90,26,26,91,92,26,93,36,36,94,22,95,96,97,98,154,99',
'100,86,102,103,85,105,12,82,81,5,15,20,19,112,113,115,116,117,118,119',
'151,120,124,125,76,29,2,127,128,141,74,26,26,26,26,130,131,132,133,37',
'37,37,37,37,135,137,37,37,37,18,18,18,139,73,72,18,37,37,64,144,48,63',
'27,59,54,54,149,58,1,48,110,,,,108,,,,80,111,,20,142,111,,,43,,,20,20',
'29,29,51,145,,,145,62,62,29,,52,,,,143,143,143,37,37,,51,,51,52,154',
'107,37,61,41,,37,111,,,83,37,57,,57,26,26,54,54,4,,104,,,,26,54,,,,',
',11,143,,37,33,33,,,148,78,129,,45,106,,,,6,,,39,42,56,56,108,39,79',
'108,108,20,108,56,108,,147,38,46,,,52,38,,141,37,37,,20,84,21,16,16',
',83,,,31,31,,,,,4,,,31,21,21,83,,,21,21,21,,,37,33,,21,21,21,,,110,',
',,108,,33,145,,22,35,,43,,10,35,,21,21,,,,21,21,,108,21,21,21,20,,55',
',111,20,61,109,57,,109,109,29,57,,26,26,,48,,8,,48,,8,8,9,33,,20,37',
',,,,33,21,,51,62,21,21,21,21,21,21,14,26,,22,14,,,48,,,154,34,,50,,',
'34,50,,,57,,,57,,,,52,,111,,,41,62,,29,,,145,37,,,,,,37,,,,,,,,37,77',
',,,,7,111,24,111,,,,22,52,,34,37,,34,,22,,,,,48,56,,,,37,37,21,21,21',
'21,21,,48,21,21,21,51,,29,61,,77,,21,21,37,29,,77,37,80,,,,37,,37,83',
'83,111,,,,26,37,,,8,37,,37,,,107,16,109,83,56,,,111,,48,,,,9,48,,,,',
',104,26,,21,21,,,,37,37,9,,21,8,37,,21,18,18,,21,21,61,18,,,,,,37,20',
'52,,21,,,41,,,,37,52,,,,21,41,,,,37,37,,,,57,,,57,26,,26,,,,,,,,20,20',
',,,47,,9,,,,,9,,,,21,21,,,,20,,,,20,,54,,,20,,,,,56,21,,,,37,,,,,37',
'16,,21,37,37,,,83,,83,,,54,83,,,,,23,,,,,,,37,,,,,,,37,,,,,,,,,18,,',
',,48,,23,23,23,,20,17,,,,,33,51,,,,20,,37,,,,21,,,,20,20,,,,26,54,23',
'23,,17,37,,37,37,,,16,,,,,,,,48,83,,,,,,,,,,,,,,,52,17,,,23,,,,,,21',
',23,23,,,21,,,,37,,21,20,21,,,20,20,22,,,,,,37,,,37,17,,21,,,,,,17,17',
'20,,,,,26,21,21,37,,,44,29,21,,37,,,,,37,,,,,,,21,37,,37,21,,,,,21,',
'21,,20,44,44,44,,,21,,,,21,23,21,,,,48,,,,,20,20,,,,9,9,23,,,,,44,44',
',44,,,,,,,21,21,,17,9,,21,,9,,,,,9,,,,,,,17,21,,,,,20,,44,,,,21,,,,44',
'44,,,,20,21,21,20,,,21,,,,23,,,,23,23,21,,,,,,20,,,,,23,,20,,,,,20,',
',,,23,9,,20,,,17,,,,,17,9,,,,,,,,,21,9,9,,,21,,,,21,21,,,,17,,,,,,,',
',44,,,,,,,,21,,,,,,,21,23,44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,21,,,,,,',
',,,53,,,,,,,,,21,9,21,21,,,,,53,,53,53,53,53,53,,44,,,,44,44,,,,,,,',
',,,,44,,,,,,,,9,,,,44,,,,,21,,,,21,,,,,,,,9,9,,21,,,21,,,,,,,,,,,,,',
',,,,,21,,23,,,,,21,23,,,,21,,,,,,44,,21,,21,9,,,,,,,,,,,,,,17,9,,,23',
'23,,,,,,23,,,,,,,,,,,,9,,23,,,,23,9,,,,23,9,,,,17,17,,,,,,,,,,,,,25',
',,,,,,17,,,,17,,,,,17,,,,,,,,53,,,,,,,,,,,,,,,,,,,,,,,,,23,,,,,,,,,',
',23,,,,,,,,44,,23,23,,,44,23,,,,,,,,53,17,23,53,53,,,,,,,,17,,,,,,,',
',,17,17,44,44,,,,,,44,,,,,,,,,,,,,,44,,,,44,,23,,,44,23,23,,,,25,25',
',,,,,,,,,,,,,,23,23,,,,,,,,,17,,,,17,17,,,,,,,,,,,,,,,53,,,,,,17,,,',
'25,23,25,,,,44,25,,,,,,,,,,44,,,,,23,23,,,,44,44,,,,44,,,,17,,,53,,',
'44,,,,,,53,,,53,53,,,,,17,17,,,,53,53,,,,,,,23,,,,23,,,,,,,,,,,23,,',
'23,,,44,,,,44,44,,,,,,,,,17,,23,,17,,,,,23,,,44,,23,17,,,17,28,,,23',
'28,28,28,,,,,,,,,,,,17,,28,28,28,,,17,,,,,17,,,44,,28,28,,17,,,,,,25',
',,,,,,,,,44,44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,44,,,25',
'44,25,,25,,,53,,,,,44,,,44,,53,53,,25,,,,,,,,53,,,53,53,,44,,,,53,,53',
'44,,,,,44,,,,,,,,44,,,25,,,25,,,,,,,,,,,,,,28,28,28,28,,,28,,,,,,,,',
',,,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,,,53,,,,53,,28,,28,,,,,28,,,25,,,28,28,,,,,,,,28,',
',,,,,,,,,,,,,25,,,,,,,,,,25,25,,,,,28,,,,,,,,,,,,,,,,,,,53,,,,25,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,53,,,,,,,,,,,,,,,53,,25,,,,,,,,,',
',,,,,,,,,,25,,,,,,,,,,,,,,,,,,28,,,,,,25,,,,,,,,,,,,,,,,,,,,28,,28,28',
'28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,25,28,,,,,,,,,,,,,,,25,28,,',
',,,,,,,,,,,28,,,,25,,,,,,28,28,28,28,,,,,,,,,,28,,25,28,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',28,,28,,28,28,,,,,28,,,28,,,,,,,,28,,,,,,,,28,,,,,,,,,,28,28,,,,,,',
',,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,',
',,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,28,28,,,,,,,,,,28,28,28,,,,,,,,,,,28',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,',
',,,28,,,,28,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,',
',,,,,,,,,,,28' ]
        racc_goto_check = arr = ::Array.new(2575, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   225,    74,   nil,    16,    66,    46,    14,  -293,   413,
  -521,  -608,  -631,   nil,    52,   159,     6,   784,     9,   107,
   138,   353,   -50,   749,  -164,  1291,    84,   109,  1650,   -18,
   nil,    94,   nil,  -136,    43,  -228,  -356,     0,    61,    46,
   nil,   -19,    43,  -271,   905,  -269,   -27,   -63,    24,   nil,
    65,   -40,   -24,  1103,    24,  -272,    61,    -6,   -42,  -275,
  -358,  -223,  -404,  -284,   -52,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   146,   156,   132,   nil,   125,  -304,  -614,  -492,
  -340,   103,  -201,     7,  -545,    96,  -220,    82,    76,  -572,
    80,  -572,  -439,  -735,  -440,  -215,  -675,    89,  -440,  -221,
  -439,  -713,   103,  -160,   -27,  -393,  -489,   -47,  -505,  -274,
  -509,  -315,   150,   -74,   nil,   -98,   -98,  -739,  -403,  -512,
  -620,   nil,   nil,   nil,   108,   107,    50,   107,  -203,  -295,
   114,  -562,  -409,  -409,   nil,  -535,   nil,  -632,   nil,  -625,
   nil,  -550,  -649,  -628,  -622,  -311,   nil,  -499,  -249,  -483,
   nil,  -741,   nil,   nil,  -387 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   352,   277,   nil,   534,
   nil,   814,   nil,   276,   nil,   nil,   nil,   211,    16,    11,
   212,   302,   nil,   210,   nil,   254,    15,   nil,    19,    20,
    21,   nil,    25,   680,   nil,   nil,   nil,   291,    29,   nil,
    31,    34,    33,   nil,   208,   362,   nil,   117,   434,   116,
    69,   nil,    42,   310,   312,   nil,   313,   432,   nil,   nil,
   629,   481,   252,   nil,   nil,   267,    43,    44,    45,    46,
    47,    48,    49,   nil,   268,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   569,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   325,   324,   697,   327,   nil,
   328,   329,   nil,   nil,   438,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   606,
   nil,   nil,   nil,   nil,   394,   737,   740,   745,   742,   743,
   744,   890,   nil,   nil,   748,   336,   331,   338,   nil,   563,
   564,   752,   341,   344,   259 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 142, :_reduce_none,
  2, 143, :_reduce_2,
  0, 144, :_reduce_3,
  1, 144, :_reduce_4,
  3, 144, :_reduce_5,
  1, 146, :_reduce_none,
  4, 146, :_reduce_7,
  4, 149, :_reduce_8,
  2, 150, :_reduce_9,
  0, 154, :_reduce_10,
  1, 154, :_reduce_11,
  3, 154, :_reduce_12,
  0, 168, :_reduce_13,
  4, 148, :_reduce_14,
  3, 148, :_reduce_15,
  3, 148, :_reduce_none,
  3, 148, :_reduce_17,
  2, 148, :_reduce_18,
  3, 148, :_reduce_19,
  3, 148, :_reduce_20,
  3, 148, :_reduce_21,
  3, 148, :_reduce_22,
  3, 148, :_reduce_23,
  4, 148, :_reduce_none,
  3, 148, :_reduce_25,
  3, 148, :_reduce_26,
  3, 148, :_reduce_27,
  6, 148, :_reduce_none,
  5, 148, :_reduce_29,
  5, 148, :_reduce_none,
  5, 148, :_reduce_none,
  3, 148, :_reduce_none,
  3, 148, :_reduce_33,
  3, 148, :_reduce_34,
  3, 148, :_reduce_35,
  1, 148, :_reduce_none,
  1, 167, :_reduce_none,
  3, 167, :_reduce_38,
  3, 167, :_reduce_39,
  2, 167, :_reduce_40,
  2, 167, :_reduce_41,
  1, 167, :_reduce_none,
  1, 157, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  2, 159, :_reduce_46,
  2, 159, :_reduce_47,
  2, 159, :_reduce_48,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 176, :_reduce_none,
  2, 170, :_reduce_53,
  3, 170, :_reduce_none,
  4, 170, :_reduce_55,
  5, 170, :_reduce_none,
  4, 170, :_reduce_57,
  5, 170, :_reduce_none,
  2, 170, :_reduce_59,
  2, 170, :_reduce_60,
  1, 160, :_reduce_61,
  3, 160, :_reduce_62,
  1, 180, :_reduce_63,
  3, 180, :_reduce_64,
  1, 179, :_reduce_65,
  2, 179, :_reduce_66,
  3, 179, :_reduce_67,
  5, 179, :_reduce_none,
  2, 179, :_reduce_69,
  4, 179, :_reduce_none,
  2, 179, :_reduce_71,
  1, 179, :_reduce_72,
  3, 179, :_reduce_none,
  1, 182, :_reduce_74,
  3, 182, :_reduce_75,
  2, 181, :_reduce_76,
  3, 181, :_reduce_77,
  1, 184, :_reduce_none,
  3, 184, :_reduce_none,
  1, 183, :_reduce_80,
  4, 183, :_reduce_81,
  3, 183, :_reduce_82,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 158, :_reduce_88,
  4, 158, :_reduce_89,
  3, 158, :_reduce_90,
  3, 158, :_reduce_91,
  3, 158, :_reduce_92,
  3, 158, :_reduce_93,
  2, 158, :_reduce_94,
  1, 158, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_97,
  1, 187, :_reduce_98,
  3, 187, :_reduce_99,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_103,
  1, 188, :_reduce_104,
  1, 155, :_reduce_105,
  1, 155, :_reduce_none,
  1, 156, :_reduce_107,
  3, 156, :_reduce_108,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_183,
  5, 169, :_reduce_184,
  3, 169, :_reduce_185,
  6, 169, :_reduce_186,
  5, 169, :_reduce_187,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_193,
  3, 169, :_reduce_194,
  3, 169, :_reduce_195,
  3, 169, :_reduce_196,
  3, 169, :_reduce_197,
  3, 169, :_reduce_198,
  3, 169, :_reduce_199,
  3, 169, :_reduce_200,
  4, 169, :_reduce_201,
  4, 169, :_reduce_202,
  4, 169, :_reduce_203,
  2, 169, :_reduce_204,
  2, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  3, 169, :_reduce_210,
  3, 169, :_reduce_211,
  3, 169, :_reduce_212,
  3, 169, :_reduce_213,
  3, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  3, 169, :_reduce_218,
  2, 169, :_reduce_219,
  2, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  3, 169, :_reduce_225,
  5, 169, :_reduce_226,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 163, :_reduce_229,
  2, 163, :_reduce_230,
  2, 163, :_reduce_231,
  4, 163, :_reduce_232,
  2, 163, :_reduce_233,
  3, 198, :_reduce_234,
  2, 200, :_reduce_none,
  1, 201, :_reduce_236,
  1, 201, :_reduce_none,
  1, 199, :_reduce_238,
  1, 199, :_reduce_none,
  2, 199, :_reduce_240,
  4, 199, :_reduce_241,
  2, 199, :_reduce_242,
  1, 172, :_reduce_243,
  2, 172, :_reduce_244,
  2, 172, :_reduce_245,
  4, 172, :_reduce_246,
  1, 172, :_reduce_247,
  4, 204, :_reduce_none,
  1, 204, :_reduce_none,
  0, 206, :_reduce_250,
  2, 175, :_reduce_251,
  1, 205, :_reduce_none,
  2, 205, :_reduce_253,
  3, 205, :_reduce_254,
  2, 203, :_reduce_255,
  2, 202, :_reduce_256,
  0, 202, :_reduce_257,
  1, 195, :_reduce_258,
  2, 195, :_reduce_259,
  3, 195, :_reduce_260,
  4, 195, :_reduce_261,
  3, 165, :_reduce_262,
  4, 165, :_reduce_263,
  2, 165, :_reduce_264,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 228, :_reduce_274,
  4, 193, :_reduce_275,
  4, 193, :_reduce_276,
  3, 193, :_reduce_277,
  3, 193, :_reduce_278,
  2, 193, :_reduce_279,
  4, 193, :_reduce_280,
  3, 193, :_reduce_281,
  3, 193, :_reduce_282,
  1, 193, :_reduce_283,
  4, 193, :_reduce_284,
  3, 193, :_reduce_285,
  1, 193, :_reduce_286,
  5, 193, :_reduce_287,
  4, 193, :_reduce_288,
  3, 193, :_reduce_289,
  2, 193, :_reduce_290,
  1, 193, :_reduce_none,
  2, 193, :_reduce_292,
  2, 193, :_reduce_293,
  6, 193, :_reduce_294,
  6, 193, :_reduce_295,
  0, 229, :_reduce_296,
  0, 230, :_reduce_297,
  7, 193, :_reduce_298,
  0, 231, :_reduce_299,
  0, 232, :_reduce_300,
  7, 193, :_reduce_301,
  5, 193, :_reduce_302,
  4, 193, :_reduce_303,
  5, 193, :_reduce_304,
  0, 233, :_reduce_305,
  0, 234, :_reduce_306,
  9, 193, :_reduce_307,
  0, 235, :_reduce_308,
  6, 193, :_reduce_309,
  0, 236, :_reduce_310,
  0, 237, :_reduce_311,
  8, 193, :_reduce_312,
  0, 238, :_reduce_313,
  0, 239, :_reduce_314,
  6, 193, :_reduce_315,
  0, 240, :_reduce_316,
  6, 193, :_reduce_317,
  0, 241, :_reduce_318,
  0, 242, :_reduce_319,
  9, 193, :_reduce_320,
  1, 193, :_reduce_321,
  1, 193, :_reduce_322,
  1, 193, :_reduce_323,
  1, 193, :_reduce_none,
  1, 162, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  1, 218, :_reduce_none,
  2, 218, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 217, :_reduce_333,
  3, 243, :_reduce_334,
  2, 243, :_reduce_335,
  1, 243, :_reduce_none,
  1, 243, :_reduce_none,
  3, 244, :_reduce_338,
  3, 244, :_reduce_339,
  1, 219, :_reduce_340,
  5, 219, :_reduce_341,
  1, 152, :_reduce_none,
  2, 152, :_reduce_343,
  1, 246, :_reduce_344,
  3, 246, :_reduce_345,
  3, 247, :_reduce_346,
  1, 177, :_reduce_none,
  2, 177, :_reduce_348,
  1, 177, :_reduce_349,
  3, 177, :_reduce_350,
  1, 248, :_reduce_351,
  2, 250, :_reduce_352,
  1, 250, :_reduce_353,
  6, 245, :_reduce_354,
  4, 245, :_reduce_355,
  4, 245, :_reduce_356,
  2, 245, :_reduce_357,
  2, 245, :_reduce_358,
  4, 245, :_reduce_359,
  2, 245, :_reduce_360,
  2, 245, :_reduce_361,
  1, 245, :_reduce_362,
  0, 254, :_reduce_363,
  5, 253, :_reduce_364,
  2, 173, :_reduce_365,
  4, 173, :_reduce_none,
  4, 173, :_reduce_none,
  2, 216, :_reduce_368,
  4, 216, :_reduce_369,
  3, 216, :_reduce_370,
  4, 216, :_reduce_371,
  3, 216, :_reduce_372,
  2, 216, :_reduce_373,
  1, 216, :_reduce_374,
  0, 256, :_reduce_375,
  5, 215, :_reduce_376,
  0, 257, :_reduce_377,
  5, 215, :_reduce_378,
  0, 259, :_reduce_379,
  6, 221, :_reduce_380,
  1, 258, :_reduce_381,
  1, 258, :_reduce_none,
  6, 151, :_reduce_383,
  0, 151, :_reduce_384,
  1, 260, :_reduce_385,
  1, 260, :_reduce_none,
  1, 260, :_reduce_none,
  2, 261, :_reduce_388,
  1, 261, :_reduce_389,
  2, 153, :_reduce_390,
  1, 153, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 207, :_reduce_none,
  1, 208, :_reduce_395,
  1, 264, :_reduce_none,
  2, 264, :_reduce_397,
  3, 265, :_reduce_398,
  1, 265, :_reduce_399,
  3, 209, :_reduce_400,
  3, 210, :_reduce_401,
  3, 211, :_reduce_402,
  3, 211, :_reduce_403,
  1, 268, :_reduce_404,
  3, 268, :_reduce_405,
  1, 269, :_reduce_406,
  2, 269, :_reduce_407,
  3, 212, :_reduce_408,
  3, 212, :_reduce_409,
  1, 271, :_reduce_410,
  3, 271, :_reduce_411,
  1, 266, :_reduce_412,
  2, 266, :_reduce_413,
  1, 267, :_reduce_414,
  2, 267, :_reduce_415,
  1, 270, :_reduce_416,
  0, 273, :_reduce_417,
  3, 270, :_reduce_418,
  0, 274, :_reduce_419,
  4, 270, :_reduce_420,
  1, 272, :_reduce_421,
  1, 272, :_reduce_422,
  1, 272, :_reduce_423,
  1, 272, :_reduce_none,
  2, 191, :_reduce_425,
  1, 191, :_reduce_426,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  1, 275, :_reduce_none,
  3, 263, :_reduce_431,
  1, 262, :_reduce_432,
  1, 262, :_reduce_433,
  1, 262, :_reduce_434,
  2, 262, :_reduce_435,
  2, 262, :_reduce_436,
  2, 262, :_reduce_437,
  2, 262, :_reduce_438,
  2, 262, :_reduce_439,
  2, 262, :_reduce_440,
  1, 185, :_reduce_441,
  1, 185, :_reduce_442,
  1, 185, :_reduce_443,
  1, 185, :_reduce_444,
  1, 185, :_reduce_445,
  1, 185, :_reduce_446,
  1, 185, :_reduce_447,
  1, 185, :_reduce_448,
  1, 185, :_reduce_449,
  1, 185, :_reduce_450,
  1, 185, :_reduce_451,
  1, 213, :_reduce_452,
  1, 161, :_reduce_453,
  1, 164, :_reduce_454,
  1, 164, :_reduce_none,
  1, 223, :_reduce_456,
  3, 223, :_reduce_457,
  2, 223, :_reduce_458,
  4, 225, :_reduce_459,
  2, 225, :_reduce_460,
  1, 277, :_reduce_none,
  1, 277, :_reduce_none,
  2, 278, :_reduce_463,
  1, 278, :_reduce_464,
  1, 279, :_reduce_465,
  2, 280, :_reduce_466,
  1, 280, :_reduce_467,
  1, 281, :_reduce_468,
  3, 281, :_reduce_469,
  4, 282, :_reduce_470,
  2, 282, :_reduce_471,
  2, 282, :_reduce_472,
  1, 282, :_reduce_473,
  2, 284, :_reduce_474,
  0, 284, :_reduce_475,
  6, 276, :_reduce_476,
  4, 276, :_reduce_477,
  4, 276, :_reduce_478,
  2, 276, :_reduce_479,
  4, 276, :_reduce_480,
  2, 276, :_reduce_481,
  2, 276, :_reduce_482,
  1, 276, :_reduce_483,
  0, 276, :_reduce_484,
  1, 286, :_reduce_none,
  1, 286, :_reduce_486,
  1, 287, :_reduce_487,
  1, 287, :_reduce_488,
  1, 287, :_reduce_489,
  1, 287, :_reduce_490,
  1, 288, :_reduce_491,
  3, 288, :_reduce_492,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 290, :_reduce_495,
  3, 290, :_reduce_none,
  1, 291, :_reduce_497,
  3, 291, :_reduce_498,
  1, 289, :_reduce_none,
  4, 289, :_reduce_none,
  3, 289, :_reduce_none,
  2, 289, :_reduce_none,
  1, 289, :_reduce_none,
  1, 251, :_reduce_504,
  3, 251, :_reduce_505,
  3, 292, :_reduce_506,
  1, 285, :_reduce_507,
  3, 285, :_reduce_508,
  1, 293, :_reduce_none,
  1, 293, :_reduce_none,
  2, 252, :_reduce_511,
  1, 252, :_reduce_512,
  1, 294, :_reduce_none,
  1, 294, :_reduce_none,
  2, 249, :_reduce_515,
  2, 283, :_reduce_516,
  0, 283, :_reduce_517,
  1, 226, :_reduce_518,
  4, 226, :_reduce_519,
  0, 214, :_reduce_520,
  2, 214, :_reduce_521,
  1, 197, :_reduce_522,
  3, 197, :_reduce_523,
  3, 295, :_reduce_524,
  2, 295, :_reduce_525,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 174, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  1, 227, :_reduce_none,
  1, 227, :_reduce_none,
  0, 145, :_reduce_none,
  1, 145, :_reduce_none,
  0, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 196, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 147, :_reduce_none,
  2, 147, :_reduce_none,
  0, 194, :_reduce_549 ]

racc_reduce_n = 550

racc_shift_n = 947

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tBIGNUM => 62,
  :tFLOAT => 63,
  :tREGEXP_END => 64,
  :tUPLUS => 65,
  :tUMINUS => 66,
  :tUMINUS_NUM => 67,
  :tPOW => 68,
  :tCMP => 69,
  :tEQ => 70,
  :tEQQ => 71,
  :tNEQ => 72,
  :tGEQ => 73,
  :tLEQ => 74,
  :tANDOP => 75,
  :tOROP => 76,
  :tMATCH => 77,
  :tNMATCH => 78,
  :tDOT => 79,
  :tDOT2 => 80,
  :tDOT3 => 81,
  :tAREF => 82,
  :tASET => 83,
  :tLSHFT => 84,
  :tRSHFT => 85,
  :tCOLON2 => 86,
  :tCOLON3 => 87,
  :tOP_ASGN => 88,
  :tASSOC => 89,
  :tLPAREN => 90,
  :tLPAREN2 => 91,
  :tRPAREN => 92,
  :tLPAREN_ARG => 93,
  :ARRAY_BEG => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tWORDS_BEG => 119,
  :tAWORDS_BEG => 120,
  :tSTRING_DBEG => 121,
  :tSTRING_DVAR => 122,
  :tSTRING_END => 123,
  :tSTRING => 124,
  :tSYMBOL => 125,
  :tNL => 126,
  :tEH => 127,
  :tCOLON => 128,
  :tCOMMA => 129,
  :tSPACE => 130,
  :tSEMI => 131,
  :tLAMBDA => 132,
  :tLAMBEG => 133,
  :tLBRACK2 => 134,
  :tLBRACK => 135,
  :tDSTAR => 136,
  :tEQL => 137,
  :tLOWEST => 138,
  "-@NUM" => 139,
  "+@NUM" => 140 }

racc_nt_base = 141

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tBIGNUM",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_bignum(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 227 omitted

# reduce 228 omitted

def _reduce_229(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_230(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_231(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

def _reduce_236(val, _values, result)
                      result = []
                    
    result
end

# reduce 237 omitted

def _reduce_238(val, _values, result)
                      result = []
                    
    result
end

# reduce 239 omitted

def _reduce_240(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_242(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_247(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 248 omitted

# reduce 249 omitted

def _reduce_250(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_251(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 252 omitted

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_257(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_258(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_260(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_261(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_262(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_263(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_264(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

def _reduce_274(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_275(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_287(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 291 omitted

def _reduce_292(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_297(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_300(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_301(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_302(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_306(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_307(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_308(val, _values, result)
                      # ...
                    
    result
end

def _reduce_309(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_310(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      # ...
                    
    result
end

def _reduce_312(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_314(val, _values, result)
                      # ...
                    
    result
end

def _reduce_315(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_316(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_318(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_319(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_321(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_322(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_323(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

# reduce 332 omitted

def _reduce_333(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = nil
                    
    result
end

# reduce 336 omitted

# reduce 337 omitted

def _reduce_338(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_341(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 342 omitted

def _reduce_343(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_344(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_345(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 347 omitted

def _reduce_348(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_349(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_352(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_353(val, _values, result)
                      nil
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_362(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_363(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_364(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_365(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 366 omitted

# reduce 367 omitted

def _reduce_368(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_375(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_377(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_379(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_380(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 382 omitted

def _reduce_383(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_384(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_385(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 386 omitted

# reduce 387 omitted

def _reduce_388(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_390(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 396 omitted

def _reduce_397(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_398(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_419(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_420(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 424 omitted

def _reduce_425(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_426(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

def _reduce_431(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_432(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_bignum(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_436(val, _values, result)
                    result = new_bignum(negate_bignum(val[1]))
                  
    result
end

def _reduce_437(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_438(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_439(val, _values, result)
                    result = new_bignum(val[1])
                  
    result
end

def _reduce_440(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_441(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_454(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 455 omitted

def _reduce_456(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_457(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_458(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_459(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_460(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 461 omitted

# reduce 462 omitted

def _reduce_463(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_465(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_466(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_467(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 485 omitted

def _reduce_486(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_487(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_488(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_489(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_490(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_491(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 493 omitted

# reduce 494 omitted

def _reduce_495(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 496 omitted

def _reduce_497(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_498(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 499 omitted

# reduce 500 omitted

# reduce 501 omitted

# reduce 502 omitted

# reduce 503 omitted

def _reduce_504(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_505(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_506(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_507(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_508(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 509 omitted

# reduce 510 omitted

def _reduce_511(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_512(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 513 omitted

# reduce 514 omitted

def _reduce_515(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_516(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_517(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_519(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_520(val, _values, result)
                      result = []
                    
    result
end

def _reduce_521(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_523(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_524(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_525(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

# reduce 546 omitted

# reduce 547 omitted

# reduce 548 omitted

def _reduce_549(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
