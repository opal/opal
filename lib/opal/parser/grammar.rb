#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-90,-95,-82,57,58,270,203,204,61,787,59,60,62,23,24,66',
'67,270,-524,852,641,678,22,28,27,90,89,91,92,-94,610,17,792,270,574',
'770,265,7,41,6,9,94,93,567,84,50,86,85,87,-64,88,95,96,640,81,82,-92',
'38,39,-89,536,588,783,538,73,-90,203,204,-89,-82,265,-441,74,567,567',
'-88,341,340,-441,36,-92,-91,30,-524,-92,52,-75,782,54,567,32,269,609',
'544,40,101,-93,567,265,573,100,574,18,269,-524,-87,-82,79,73,75,76,77',
'78,-90,-82,-90,74,80,-90,269,710,63,64,65,56,51,-441,53,265,57,58,37',
'83,-86,61,-91,59,60,62,256,257,66,67,203,204,710,298,299,255,28,27,90',
'89,91,92,305,101,217,566,-526,-84,100,-527,-81,41,710,587,94,93,-82',
'84,50,86,85,87,259,88,95,96,-80,81,82,-450,38,39,101,101,101,566,566',
'100,100,100,-92,-91,-92,-91,543,-92,-91,-85,-526,101,399,566,208,769',
'100,212,780,101,52,566,875,54,100,254,811,792,101,40,709,598,-80,100',
'603,225,-83,216,-84,225,-88,305,79,73,75,76,77,78,-83,641,737,74,80',
'101,412,709,262,-450,100,56,523,734,53,263,-90,792,37,83,63,64,65,8',
'51,101,598,709,57,58,100,341,340,61,640,59,60,62,23,24,66,67,692,600',
'599,341,340,22,28,27,90,89,91,92,-526,-83,17,-84,-88,447,598,-94,7,41',
'598,9,94,93,598,84,50,86,85,87,737,88,95,96,598,81,82,735,38,39,388',
'734,600,599,338,337,341,340,-83,484,-84,753,203,204,890,-279,-83,798',
'-84,737,36,-438,-279,30,-95,576,52,799,-438,54,734,32,577,341,340,40',
'600,599,605,550,600,599,601,18,600,599,596,523,79,73,75,76,77,78,600',
'599,611,74,80,-277,338,337,341,340,641,56,-277,637,53,735,-279,-527',
'37,83,63,64,65,8,51,641,575,101,57,58,203,204,100,61,-86,59,60,62,23',
'24,66,67,-94,640,735,203,204,22,28,27,90,89,91,92,101,553,17,921,640',
'100,-277,616,7,41,922,9,94,93,759,84,50,86,85,87,-324,88,95,96,482,81',
'82,-324,38,39,802,225,229,234,235,236,231,233,241,242,237,238,200,218',
'219,526,789,239,240,201,36,536,527,30,538,-81,52,536,920,54,535,32,222',
'-89,228,40,224,223,220,221,232,230,226,18,227,-324,803,620,79,73,75',
'76,77,78,443,553,-278,74,80,-277,243,444,-227,-278,101,56,-277,199,53',
'100,445,-527,37,83,63,64,65,8,51,-441,101,536,57,58,538,100,-441,61',
'-82,59,60,62,23,24,66,67,-90,811,792,621,806,22,28,27,90,89,91,92,-449',
'445,17,-278,772,101,-277,-449,7,41,100,9,94,93,491,84,50,86,85,87,515',
'88,95,96,792,81,82,516,38,39,584,-271,-84,225,-278,202,225,582,-271',
'584,-92,-278,815,101,890,-271,801,-444,100,737,36,-443,-271,30,-444',
'-449,52,816,-443,54,734,32,385,-279,222,40,818,222,224,223,-279,224',
'223,18,491,514,-87,446,79,73,75,76,77,78,-95,583,-271,74,80,-278,338',
'337,341,340,583,56,397,398,53,448,-271,-258,37,83,63,64,65,8,51,-447',
'519,520,57,58,203,204,-447,61,-279,59,60,62,23,24,66,67,449,755,735',
'-526,820,22,28,27,90,89,91,92,409,213,17,-449,480,411,410,616,7,41,-449',
'9,94,93,482,84,50,86,85,87,-278,88,95,96,484,81,82,-278,38,39,713,225',
'229,234,235,236,231,233,241,242,237,238,-277,218,219,-446,574,239,240',
'-277,36,705,-446,30,-527,828,52,702,-449,54,830,32,222,833,228,40,224',
'223,220,221,232,230,226,18,227,-278,834,836,79,73,75,76,77,78,692,838',
'840,74,80,700,243,842,63,64,65,56,51,-277,53,-445,57,58,37,83,491,61',
'-445,59,60,62,256,257,66,67,103,104,105,106,107,255,288,292,90,89,91',
'92,690,-448,217,593,338,337,341,340,-448,41,594,-63,94,93,-259,84,50',
'86,85,87,305,88,95,96,508,81,82,686,38,39,685,225,229,234,235,236,231',
'233,241,242,237,238,684,218,219,509,297,239,240,510,208,296,678,212',
'529,853,52,854,855,54,856,646,222,252,228,40,224,223,220,221,232,230',
'226,216,227,517,858,859,79,73,75,76,77,78,678,670,861,74,80,668,243',
'-257,-227,865,-75,56,667,274,53,870,665,872,37,83,63,64,65,8,51,305',
'844,845,57,58,846,95,96,61,244,59,60,62,23,24,66,67,103,104,105,106',
'107,22,28,27,90,89,91,92,657,555,17,333,331,330,656,332,7,41,305,9,94',
'93,878,84,50,86,85,87,880,88,95,96,881,81,82,305,38,39,265,225,229,234',
'235,236,231,233,241,242,237,238,225,218,219,225,225,239,240,225,36,524',
'894,30,-260,525,52,265,265,54,896,32,222,619,228,40,224,223,220,221',
'232,230,226,18,227,-257,198,-527,79,73,75,76,77,78,553,618,906,74,80',
'907,243,638,197,196,195,56,912,833,53,914,838,838,37,83,63,64,65,8,51',
'840,225,615,57,58,612,608,604,61,923,59,60,62,23,24,66,67,103,104,105',
'106,107,22,28,27,90,89,91,92,305,555,17,333,331,330,108,332,7,41,580',
'9,94,93,579,84,50,86,85,87,929,88,95,96,578,81,82,401,38,39,684,225',
'229,234,235,236,231,233,241,242,237,238,97,218,219,563,562,239,240,553',
'36,551,939,30,838,941,52,942,550,54,547,32,222,484,228,40,224,223,220',
'221,232,230,226,18,227,540,539,,79,73,75,76,77,78,,,,74,80,,243,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239',
'240,,208,,,212,,,52,,,54,,646,222,,228,40,224,223,220,221,232,230,226',
'216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,555',
'217,333,331,330,,332,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,747',
',333,331,330,737,332,,,,,,558,,,,734,,,,808,,,901,,,212,225,,52,,,54',
',,,,,335,,,,,,,,338,337,341,340,,79,73,75,76,77,78,,222,,74,80,224,223',
'220,221,,,56,,,53,,,,293,83,63,64,65,8,51,,,735,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242',
'237,238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239',
'240,,208,,,212,,,52,,,54,,,222,252,228,40,224,223,220,221,232,230,226',
'216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234',
'235,236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,',
',54,,,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76',
'77,78,,,,74,80,,243,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237',
'238,,218,219,,,239,240,,208,,,212,213,,52,,,54,,,222,,228,40,224,223',
'220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,',
'208,,,212,,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,216,227',
',,,79,73,75,76,77,78,,,,74,80,,243,,63,64,65,56,51,,53,,57,58,37,83',
',61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235',
'236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77',
'78,,,,74,80,,243,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231',
'233,241,242,237,238,,218,219,,,239,240,,36,,,30,,,52,,,54,,32,222,,228',
'40,224,223,220,221,232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80',
',243,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,',
',,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259',
'88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238',
',218,219,,,239,240,,208,,,212,,,52,,,54,,254,222,252,228,40,224,223',
'220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,225,229,234,235,236,231,233,241,242,237,238,,218,219,,,239',
'240,,208,,,212,,,52,,,54,,254,222,252,228,40,224,223,220,221,232,230',
'226,216,227,,,,79,73,75,76,77,78,,,,74,80,,243,,63,64,65,56,51,,53,',
'57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,',
',217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225',
'229,234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,208,,,212',
',,52,,,54,,254,222,252,228,40,224,223,220,221,232,230,226,216,227,,',
',79,73,75,76,77,78,,,,74,80,,243,,,,,56,,,53,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,229',
'234,235,236,231,233,241,242,237,238,,218,219,,,239,240,,36,,,30,,,52',
',,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79,73,75',
'76,77,78,,,,74,80,,243,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,555,17,333,331,330,225,332,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,555,,333,331,330,,332',
'222,,558,,224,223,220,221,,,561,,,208,,,212,225,,52,,,54,,,,,,40,,,558',
',239,240,,18,,,561,,79,73,75,76,77,78,,222,,74,80,224,223,220,221,,',
'56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,324,,333,331,330,18,332,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,335,59,60,62,256,257,66,67,338,337,341,340',
',255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,225,-547,-547,-547,-547,231,233,,,-547,-547,,,',
',,239,240,,208,,,212,,,52,,,54,,254,222,,228,40,224,223,220,221,232',
'230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,225,-547,-547,-547,-547,231,233,,,-547,-547,,,,,,239,240,,36,,,278',
',,52,,,54,,32,222,,228,40,224,223,220,221,232,230,226,18,227,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,324,,333,331,330,,332,,,,,,,,,,,,,,',
',,286,,,283,,,52,,,54,,282,,,,335,,,,,,,,338,337,341,340,,79,73,75,76',
'77,78,774,,,74,80,,,,63,64,65,56,51,,53,,57,58,293,83,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,',
'84,50,86,85,87,,88,95,96,,81,82,747,,333,331,330,737,332,,,,,,,,,,734',
',,,,,,286,,,212,,,52,,,54,,,,,,335,732,,,,,,,338,337,341,340,,79,73',
'75,76,77,78,,,,74,80,,,,295,,,56,,,53,,,,293,83,63,64,65,,51,,,735,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-547,-547',
'-547,-547,231,233,,,-547,-547,,,,,,239,240,,208,,,212,,,52,,,54,,,222',
',228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,',
'74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67',
',,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
',88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241,242,237,238',
',-547,-547,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220',
'221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,225,-547,-547,-547,-547,231,233,,,-547,-547,,,,,,239,240,,208,,',
'212,,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,241',
'242,237,238,,-547,-547,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40',
'224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,225,-547,-547,-547,-547,231,233,,,-547,-547,,,,,,239',
'240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220,221,232,230,226,216',
'227,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83',
',61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,-547,-547,-547',
'-547,231,233,,,-547,-547,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228',
'40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,',
'255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,',
'222,,228,40,224,223,220,221,,,226,216,227,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,',
',,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54',
',,222,,228,40,224,223,220,221,,,226,216,227,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,225,229,234,235,236,231,233,,,237',
'238,,,,,,239,240,,36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221',
'232,230,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225',
',,,,,,,,,,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220',
'221,,,226,216,227,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,,,,,,',
',,,,,,,,,239,240,,208,,,212,,,52,,,54,,,222,,228,40,224,223,220,221',
',,226,18,227,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,225,229',
'234,235,236,231,233,241,,237,238,,,,,,239,240,,208,,,212,,,52,,,54,',
'254,222,,228,40,224,223,220,221,232,230,226,216,227,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,259,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240,,208,,',
'212,,,52,,,54,,,222,,228,40,224,223,220,221,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,225,,,,,,,,,,,,,,,,239,240',
',36,,,30,,,52,,,54,,32,222,,228,40,224,223,220,221,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,101,,,,,100,56,,,53,,,,37,83,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,324,,333,331,330',
',332,,,,,,,,,,,,,,,,,353,,,30,,,52,,,54,,32,,,,335,,546,,,,,,338,337',
'341,340,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,293',
'83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,',
',,,,289,,,94,93,,84,50,86,85,358,,88,95,96,,81,82,747,,333,331,330,737',
'332,,,,,,,,,,734,,,,364,,,359,,,212,,,52,,,54,,,,,,335,,,,,,,,338,337',
'341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,293,83,63,64,65',
'8,51,,,735,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,418,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
'324,,333,331,330,,332,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54,,,,,,335,319',
',,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,293,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,747,',
'333,331,330,737,332,,,,,,,,,,734,,,,,,,286,,,283,,,52,,,54,,,,,,335',
'732,,,,,,,338,337,341,340,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,,293,83,63,64,65,8,51,,,735,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92',
',,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,252,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,401,56,,,53,,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,6,9,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,646,,252,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,418,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,418,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57',
'58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,',
',,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
'259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
'254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,',
',37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,',
'81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,',
'216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208',
',,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,',
'59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,',
',94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208',
',,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,',
',63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,217,,,,,,,41,,,94',
'93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,',
',212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,758,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74',
'80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,',
',,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40',
',,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89',
'91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,451,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,',
'255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,',
',,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,',
'255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,',
',,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,',
',,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80',
',,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,',
'255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,',
',,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58',
'37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217',
',,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66',
'67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,',
'53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91',
'92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63',
'64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288',
'292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17',
',,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257',
'66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54',
',,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,',
',,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41',
',9,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53',
',57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,',
',,,,,,,,,,,,696,,,212,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78',
',,,74,80,,,,63,64,65,56,51,,53,,57,58,293,83,,61,,59,60,62,256,257,66',
'67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87',
'259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
'254,,252,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,500,,,54,,254,,252,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,',
'94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',208,,,212,,504,52,,,54,,254,,252,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,',
',,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88,95',
'96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,',
',,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,',
',,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,278',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,646,,,,40,,,,,,,',
'216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,',
'94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208',
',,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,',
'63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,',
',216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,',
',,,,289,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,',
',,,,286,,,212,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80',
',,,512,,,56,,,53,,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86',
'85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,278,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51',
',53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89',
'91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73',
'75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62',
'256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84',
'50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,',
'52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65',
'56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,28,27,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,254,,,,40,,,,,,,,216',
',,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61',
',59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289',
',,94,93,,84,50,86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,286',
',,283,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,,293,83,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93,,84,50,86,85,87,,88',
'95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,401,56,,,53,,,,37,83,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,208,,,212,,661,52,,,54,,,,252,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212',
',,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292',
'90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,259,88,95,96,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,252,,40,,,,,,,',
'216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83',
',61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,',
',41,,,94,93,,84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,208,,,212,,,52,,,54,,646,,252,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,286,,,283,,,52,,,54',
',,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,',
'57,58,293,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92',
',,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76',
'77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256',
'257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50',
'86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52',
',,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90',
'89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,216,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,28,27,90,89,91,92,,,217,,,,,,,41,,,94,93,',
'84,50,86,85,87,259,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,',
'212,,,52,,,54,,254,,,,40,,,,,,,,216,,,,,79,73,75,76,77,78,,,,74,80,',
',,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,256,257,66,67,,,,,,255',
'288,292,90,89,91,92,,,217,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,',
',216,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37',
'83,,61,,59,60,62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,',
',,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,208,,,212,529,,52,,,54,,,,,,40,,,,,,,,216,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,,37,83,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,7,41,,9,94,93',
',84,50,86,85,87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64',
'65,56,51,,53,,57,58,37,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90',
'89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60',
'62,256,257,66,67,,,,,,255,288,292,90,89,91,92,,,217,,,,,,,289,,,94,93',
',84,50,86,85,358,,88,95,96,,81,82,,,,,,,,,,,,,,,,,,,,,,,,359,,,212,',
',52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74,80,,,,63,64,65,56',
'51,,53,,57,58,293,83,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,90,89,91',
'92,,,17,,,,,,,41,,,94,93,,84,50,86,85,87,,88,95,96,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,63,64,65,56,51,,53,,57,58,37,83,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,90,89,91,92,,,17,,,,,,,41,,,94,93,,84,50,86,85',
'87,,88,95,96,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,208,,,212,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,-530,,,56,,,53,-530',
'-530,-530,37,83,,-530,-530,,-530,,,,,,,,,-530,,,,,,,,,,,-530,-530,,-530',
'-530,-530,-530,-530,,,,,,,,,,,,,,,,,,,,,,,,-530,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,-530,-530,-530,-530,,,-530,-530,-530,,627,',
',,-530,,,,,,,-530,,-530,,-530,-530,-530,-530,-530,-530,-530,,-530,-530',
'-530,,,,,,,,,,,,,-530,-530,,-83,,-530,-438,,-530,,,-91,,-438,-438,-438',
',,-438,-438,-438,,-438,,,,,,,,-438,,-438,-438,-438,,,,,,,,-438,-438',
',-438,-438,-438,-438,-438,,,,,,,,,,,,,,,,,,,,,,,,-438,-438,-438,-438',
'-438,-438,-438,-438,-438,-438,-438,-438,-438,-438,,,-438,-438,-438,',
'-438,-438,,,-438,,,-438,,-438,,-438,,-438,,-438,-438,-438,-438,-438',
'-438,-438,,-438,,-438,,,,,,,,,,,,,-438,-438,-438,-438,,-438,-441,-438',
'-438,,,-438,,-441,-441,-441,,,-441,-441,-441,,-441,,,,,,,,-441,,-441',
'-441,-441,,,,,,,,-441,-441,,-441,-441,-441,-441,-441,,,,,,,,,,,,,,,',
',,,,,,,,-441,-441,-441,-441,-441,-441,-441,-441,-441,-441,-441,-441',
'-441,-441,,,-441,-441,-441,,-441,-441,,,-441,,,-441,,-441,,-441,,-441',
',-441,-441,-441,-441,-441,-441,-441,,-441,,-441,,,,,,,,,,,,,-441,-441',
'-441,-441,,-441,-277,-441,-441,,,-441,,-277,-277,-277,,,,-277,-277,',
'-277,,,,,,,,,,,,,,,,,,,,-277,-277,,-277,-277,-277,-277,-277,,,,,,,,',
',,,,,,,,,,,,,,,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277',
'-277,-277,-277,,,-277,-277,-277,,630,,,,-277,,,,,,,-277,,-277,,-277',
'-277,-277,-277,-277,-277,-277,,-277,,-277,,,,,,,,,,,,,-277,-277,,-85',
',-277,-277,,-277,,,-93,,-277,-277,-277,,,-277,-277,-277,,-277,,,,,,',
',,,-277,-277,,,,,,,,,-277,-277,,-277,-277,-277,-277,-277,,,,,,,,,,,',
',,,,,,,,,,,,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277,-277',
'-277,-277,,,-277,-277,-277,,630,-277,,,-277,,,-277,,-277,,-277,,-277',
',-277,-277,-277,-277,-277,-277,-277,,-277,,-277,,,,,,,,,,,,,-277,-277',
'-277,-277,,-277,-530,,-277,,,-93,,-530,-530,-530,,,-530,-530,-530,,-530',
',,,,,,,,-530,-530,-530,,,,,,,,,-530,-530,,-530,-530,-530,-530,-530,',
',,,,,,,,,,,,,,,,,,,,,,-530,-530,-530,-530,-530,-530,-530,-530,-530,-530',
'-530,-530,-530,-530,,,-530,-530,-530,,771,-530,,,-530,,,-530,,-530,',
'-530,,-530,,-530,-530,-530,-530,-530,-530,-530,,-530,-530,-530,,,,,',
',,,,,,,-530,-530,-530,-530,,-530,-374,,-530,,,-91,,-374,-374,-374,,',
'-374,-374,-374,,-374,,,,,,,,,-374,-374,-374,,,,,,,,,-374,-374,,-374',
'-374,-374,-374,-374,,,,,,,,,,,,,,,,,,,,,,,,-374,-374,-374,-374,-374',
'-374,-374,-374,-374,-374,-374,-374,-374,-374,,,-374,-374,-374,,,-374',
',265,-374,,,-374,,-374,,-374,,-374,,-374,-374,-374,-374,-374,-374,-374',
',-374,-374,-374,,,,,,,,,,,,,-374,-374,-374,-374,-285,-374,,,-374,,,-285',
'-285,-285,,,-285,-285,-285,,-285,,,,,,,,,,-285,-285,,,,,,,,,-285,-285',
',-285,-285,-285,-285,-285,,,,,,,,,,,,,,,,,,,,,,,,-285,-285,-285,-285',
'-285,-285,-285,-285,-285,-285,-285,-285,-285,-285,,,-285,-285,-285,',
',-285,,274,-285,,,-285,,-285,,-285,,-285,,-285,-285,-285,-285,-285,-285',
'-285,,-285,,-285,,,,,,,,,,,,,-285,-285,-285,-285,-272,-285,,,-285,,',
'-272,-272,-272,,,-272,-272,-272,,-272,,,,,,,,,,-272,-272,-272,,,,,,',
',-272,-272,,-272,-272,-272,-272,-272,,,,,,,,,,,,,,,,,,,,,,,,-272,-272',
'-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,-272,,,-272,-272',
'-272,,,-272,,,-272,,,-272,,-272,,-272,,-272,,-272,-272,-272,-272,-272',
'-272,-272,,-272,,-272,,,,,,,,,,,,,-272,-272,-272,-272,-531,-272,,-272',
'-272,,,-531,-531,-531,,,-531,-531,-531,,-531,,,,,,,,,-531,-531,-531',
'-531,,,,,,,,-531,-531,,-531,-531,-531,-531,-531,,,,,,,,,,,,,,,,,,,,',
',,,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531,-531',
'-531,,,-531,-531,-531,,,-531,,,-531,,,-531,,-531,,-531,,-531,,-531,-531',
'-531,-531,-531,-531,-531,,-531,-531,-531,,,,,,,,,,,,,-531,-531,-531',
'-531,-532,-531,,-531,-531,,,-532,-532,-532,,,-532,-532,-532,,-532,,',
',,,,,,-532,-532,-532,-532,,,,,,,,-532,-532,,-532,-532,-532,-532,-532',
',,,,,,,,,,,,,,,,,,,,,,,-532,-532,-532,-532,-532,-532,-532,-532,-532',
'-532,-532,-532,-532,-532,,,-532,-532,-532,,,-532,,,-532,,,-532,,-532',
',-532,,-532,,-532,-532,-532,-532,-532,-532,-532,,-532,-532,-532,,,,',
',,,,,,,,-532,-532,-532,-532,-546,-532,,-532,-532,,,-546,-546,-546,,',
'-546,-546,-546,,-546,,,,,,,,,-546,-546,-546,,,,,,,,,-546,-546,,-546',
'-546,-546,-546,-546,,,,,,,,,,,,,,,,,,,,,,,,-546,-546,-546,-546,-546',
'-546,-546,-546,-546,-546,-546,-546,-546,-546,,,-546,-546,-546,,,-546',
',265,-546,,,-546,,-546,,-546,,-546,,-546,-546,-546,-546,-546,-546,-546',
',-546,-546,-546,,,,,,,,,,,,,-546,-546,-546,-546,-546,-546,,,-546,,,-546',
'-546,-546,,,-546,-546,-546,,-546,,,,,,,,,,-546,,,,,,,,,,-546,-546,,-546',
'-546,-546,-546,-546,,,,,,,,,,,,,-546,,,,,,,-546,-546,-546,,,-546,-546',
'-546,,-546,,,,,,-546,,,,-546,,,-546,,,,,265,-546,-546,-546,,-546,-546',
'-546,-546,-546,,,,,,,,,,,,,-546,,,,,,,,,,,,,-546,,-546,,,-546,,,,-546',
',,,,,,-546,,,,,265,-546,,,,,,,,,,,,,,,,,,,,,-546,,,,,,,,,,,,,-546,,-546',
',,-546,156,167,157,180,153,173,163,162,188,191,178,161,160,155,181,189',
'190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179,164,152,171',
'170,183,184,185,186,187,151,158,149,150,147,148,,111,113,,,112,,,,,',
',,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132',
',,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146',
'192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191,178,161,160',
'155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177,176,169,179',
'164,152,171,170,183,184,185,186,187,151,158,149,150,147,148,,111,113',
'110,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144',
'145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118',
'140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163,162,188,191',
'178,161,160,155,181,189,190,165,154,168,172,174,166,159,,,,175,182,177',
'176,169,179,164,152,171,170,183,184,185,186,187,151,158,149,150,147',
'148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180,153,173,163',
'162,188,191,178,161,160,155,181,189,190,165,154,168,172,174,166,159',
',,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187,151,158',
'149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,,,146,192,,,,,,,,,,80,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,,111,113,,,112,,,,,,,,,142,143,,139,121',
'122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135',
',120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180,153',
'173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172,174',
'166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186,187',
'151,158,149,150,147,148,,111,113,395,394,112,,396,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167,157,180',
'153,173,163,162,188,191,178,161,160,155,181,189,190,165,154,168,172',
'174,166,159,,,,175,182,177,176,169,179,164,152,171,170,183,184,185,186',
'187,151,158,149,150,147,148,,111,113,395,394,112,,396,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,',
',,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,156,167',
'157,180,153,173,163,162,188,191,178,161,160,155,181,189,190,165,154',
'168,172,174,166,159,,,,175,182,177,373,372,374,371,152,171,170,183,184',
'185,186,187,151,158,149,150,369,370,,367,113,86,85,368,,88,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,378',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,934',
'431,429,,935,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,724,437,146,,867,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,,,146,488,431,429,,489,,,,,,,,,142,143',
',139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,',
',,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,,,146,631',
'431,429,,632,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125',
',,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141,138,137,133,134,128',
'126,118,140,119,633,437,146,,634,,,,,,,,,142,143,,139,121,122,123,130',
'127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,724,437,146,,722,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,719,437,146,,720,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
',,146,717,431,429,,718,,,,,,,,,142,143,,139,121,122,123,130,127,129',
',,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141,138,137',
'133,134,128,126,118,140,119,,,146,672,431,429,,673,,,,,,,,,142,143,',
'139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265,,',
',,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,488,431,146',
',489,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,,,146,631,431,429,,632,,,,,,,,,142,143,,139,121,122,123,130,127',
'129,,,124,125,,,,144,145,131,132,,,,,,265,,,,,,,136,135,,120,141,138',
'137,133,134,128,126,118,140,119,936,437,146,,937,,,,,,,,,142,143,,139',
'121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136',
'135,,120,141,138,137,133,134,128,126,118,140,119,675,437,146,,676,,',
',,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131',
'132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119',
'488,431,146,,489,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124',
'125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134',
'128,126,118,140,119,433,437,146,,435,,,,,,,,,142,143,,139,121,122,123',
'130,127,129,,,124,125,,,,144,145,131,132,,,,,,,,,,,,,136,135,,120,141',
'138,137,133,134,128,126,118,140,119,,,146,426,431,429,,427,,,,,,,,,142',
'143,,139,121,122,123,130,127,129,,,124,125,,,,144,145,131,132,,,,,,265',
',,,,,,136,135,,120,141,138,137,133,134,128,126,118,140,119,633,437,146',
',634,,,,,,,,,142,143,,139,121,122,123,130,127,129,,,124,125,,,,144,145',
'131,132,,,,,,,,,,,,,136,135,,120,141,138,137,133,134,128,126,118,140',
'119,,,146' ]
        racc_action_table = arr = ::Array.new(23828, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,934,354,672,0,0,290,729,729,0,671,0,0,0,0,0,0,0,55,358,772',
'501,669,0,0,0,0,0,0,0,578,389,0,909,26,909,632,674,0,0,0,0,0,0,871,0',
'0,0,0,0,667,0,0,0,501,0,0,718,0,0,818,687,363,662,687,71,717,307,307',
'772,672,290,358,71,864,345,351,553,553,358,0,935,936,0,358,632,0,667',
'659,0,344,0,290,389,318,0,729,720,817,26,349,729,349,0,55,358,354,672',
'0,0,0,0,0,0,934,672,934,0,0,934,26,570,920,920,920,0,920,358,0,677,920',
'920,0,0,578,920,719,920,920,920,920,920,920,920,595,595,819,37,37,920',
'920,920,920,920,920,920,307,871,920,871,936,718,871,720,818,920,569',
'363,920,920,717,920,920,920,920,920,920,920,920,920,351,920,920,35,920',
'920,363,864,345,864,345,363,864,345,935,936,935,936,318,935,936,720',
'719,344,97,344,920,631,344,920,655,817,920,817,817,920,817,920,924,924',
'570,920,570,384,35,570,384,680,675,920,673,681,35,595,920,920,920,920',
'920,920,719,491,838,920,920,819,193,819,25,207,819,920,446,838,920,25',
'631,683,920,920,918,918,918,918,918,569,606,569,918,918,569,833,833',
'918,491,918,918,918,918,918,918,918,803,384,384,838,838,918,918,918',
'918,918,918,918,675,675,918,673,207,209,386,446,918,918,382,918,918',
'918,380,918,918,918,918,918,830,918,918,918,391,918,918,838,918,918',
'78,830,606,606,803,803,803,803,675,645,673,606,450,450,914,942,675,688',
'673,914,918,367,942,918,209,352,918,689,367,918,914,918,352,830,830',
'918,386,386,386,692,382,382,382,918,380,380,380,297,918,918,918,918',
'918,918,391,391,391,918,918,722,914,914,914,914,478,918,722,450,918',
'830,942,722,918,918,910,910,910,910,910,502,352,733,910,910,343,343',
'733,910,297,910,910,910,910,910,910,910,297,478,914,682,682,910,910',
'910,910,910,910,910,348,694,910,900,502,348,722,416,910,910,900,910',
'910,910,619,910,910,910,910,910,42,910,910,910,643,910,910,42,910,910',
'696,416,416,416,416,416,416,416,416,416,416,416,13,416,416,300,682,416',
'416,13,910,311,300,910,311,619,910,310,900,910,310,910,416,619,416,910',
'416,416,416,416,416,416,416,910,416,42,697,426,910,910,910,910,910,910',
'206,698,580,910,910,937,416,206,416,580,727,910,937,13,910,727,300,937',
'910,910,905,905,905,905,905,368,588,314,905,905,314,588,368,905,426',
'905,905,905,905,905,905,905,426,704,704,427,701,905,905,905,905,905',
'905,905,284,206,905,580,635,3,937,284,905,905,3,905,905,905,628,905',
'905,905,905,905,285,905,905,905,706,905,905,285,905,905,361,902,427',
'455,517,14,454,361,902,695,427,517,712,275,836,287,695,373,275,836,905',
'372,287,905,373,284,905,714,372,905,836,905,77,787,455,905,716,454,455',
'455,787,454,454,905,622,285,14,208,905,905,905,905,905,905,14,361,902',
'905,905,517,836,836,836,836,695,905,83,83,905,210,287,617,905,905,898',
'898,898,898,898,370,293,293,898,898,15,15,370,898,787,898,898,898,898',
'898,898,898,211,610,836,724,725,898,898,898,898,898,898,898,110,217',
'898,899,249,110,110,636,898,898,899,898,898,898,250,898,898,898,898',
'898,923,898,898,898,253,898,898,923,898,898,572,636,636,636,636,636',
'636,636,636,636,636,636,676,636,636,371,571,636,636,676,898,565,371',
'898,676,736,898,560,899,898,740,898,636,741,636,898,636,636,636,636',
'636,636,636,898,636,923,743,744,898,898,898,898,898,898,547,745,747',
'898,898,556,636,750,896,896,896,898,896,676,898,374,896,896,898,898',
'264,896,374,896,896,896,896,896,896,896,666,666,666,666,666,896,896',
'896,896,896,896,896,545,369,896,376,547,547,547,547,369,896,376,277',
'896,896,757,896,896,896,896,896,41,896,896,896,279,896,896,532,896,896',
'531,658,658,658,658,658,658,658,658,658,658,658,530,658,658,280,36,658',
'658,281,896,34,521,896,518,775,896,776,779,896,781,896,658,896,658,896',
'658,658,658,658,658,658,658,896,658,286,784,785,896,896,896,896,896',
'896,786,513,790,896,896,511,658,793,658,794,508,896,507,288,896,809',
'503,812,896,896,879,879,879,879,879,289,751,751,879,879,751,751,751',
'879,20,879,879,879,879,879,879,879,5,5,5,5,5,879,879,879,879,879,879',
'879,497,561,879,561,561,561,496,561,879,879,493,879,879,879,821,879',
'879,879,879,879,824,879,879,879,825,879,879,826,879,879,292,477,477',
'477,477,477,477,477,477,477,477,477,459,477,477,458,457,477,477,456',
'879,298,848,879,849,299,879,434,429,879,857,879,477,425,477,879,477',
'477,477,477,477,477,477,879,477,421,12,867,879,879,879,879,879,879,868',
'419,873,879,879,874,477,477,11,10,9,879,882,884,879,887,888,889,879',
'879,876,876,876,876,876,890,302,413,876,876,407,388,385,876,901,876',
'876,876,876,876,876,876,276,276,276,276,276,876,876,876,876,876,876',
'876,309,808,876,808,808,808,6,808,876,876,359,876,876,876,355,876,876',
'876,876,876,911,876,876,876,353,876,876,350,876,876,919,247,247,247',
'247,247,247,247,247,247,247,247,1,247,247,342,339,247,247,327,876,326',
'928,876,930,931,876,933,324,876,323,876,247,315,247,876,247,247,247',
'247,247,247,247,876,247,313,312,,876,876,876,876,876,876,,,,876,876',
',247,,875,875,875,876,875,,876,,875,875,876,876,,875,,875,875,875,875',
'875,875,875,,,,,,875,875,875,875,875,875,875,,,875,,,,,,,875,,,875,875',
',875,875,875,875,875,,875,875,875,,875,875,,875,875,,679,679,679,679',
'679,679,679,679,679,679,679,,679,679,,,679,679,,875,,,875,,,875,,,875',
',875,679,,679,875,679,679,679,679,679,679,679,875,679,,,,875,875,875',
'875,875,875,,,,875,875,,679,,865,865,865,875,865,,875,,865,865,875,875',
',865,,865,865,865,865,865,865,865,,,,,,865,865,865,865,865,865,865,',
'702,865,702,702,702,,702,,865,,,865,865,,865,865,865,865,865,,865,865',
'865,,865,865,834,,834,834,834,834,834,,,,,,702,,,,834,,,,702,,,865,',
',865,474,,865,,,865,,,,,,834,,,,,,,,834,834,834,834,,865,865,865,865',
'865,865,,474,,865,865,474,474,474,474,,,865,,,865,,,,865,865,861,861',
'861,861,861,,,834,861,861,,,,861,,861,861,861,861,861,861,861,,,,,,861',
'861,861,861,861,861,861,,,861,,,,,,861,861,,861,861,861,,861,861,861',
'861,861,,861,861,861,,861,861,,861,861,,773,773,773,773,773,773,773',
'773,773,773,773,,773,773,,,773,773,,861,,,861,,,861,,,861,,861,773,',
'773,861,773,773,773,773,773,773,773,861,773,,,,861,861,861,861,861,861',
',,,861,861,,773,,856,856,856,861,856,,861,,856,856,861,861,,856,,856',
'856,856,856,856,856,856,,,,,,856,856,856,856,856,856,856,,,856,,,,,',
',856,,,856,856,,856,856,856,856,856,856,856,856,856,,856,856,,856,856',
',528,528,528,528,528,528,528,528,528,528,528,,528,528,,,528,528,,856',
',,856,,,856,,,856,,,528,856,528,856,528,528,528,528,528,528,528,856',
'528,,,,856,856,856,856,856,856,,,,856,856,,528,,852,852,852,856,852',
',856,,852,852,856,856,,852,,852,852,852,852,852,852,852,,,,,,852,852',
'852,852,852,852,852,,,852,,,,,,,852,,,852,852,,852,852,852,852,852,',
'852,852,852,,852,852,,852,852,,19,19,19,19,19,19,19,19,19,19,19,,19',
'19,,,19,19,,852,,,852,,,852,,,852,,,19,,19,852,19,19,19,19,19,19,19',
'852,19,,,,852,852,852,852,852,852,,,,852,852,,19,,17,17,17,852,17,,852',
',17,17,852,852,,17,,17,17,17,17,17,17,17,,,,,,17,17,17,17,17,17,17,',
',17,,,,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17,,851,851',
'851,851,851,851,851,851,851,851,851,,851,851,,,851,851,,17,,,17,17,',
'17,,,17,,,851,,851,17,851,851,851,851,851,851,851,17,851,,,,17,17,17',
'17,17,17,,,,17,17,,851,,18,18,18,17,18,,17,,18,18,17,17,,18,,18,18,18',
'18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,,,18,18,,18,18,18',
'18,18,,18,18,18,,18,18,,18,18,,768,768,768,768,768,768,768,768,768,768',
'768,,768,768,,,768,768,,18,,,18,,,18,,,18,,,768,,768,18,768,768,768',
'768,768,768,768,18,768,,,,18,18,18,18,18,18,,,,18,18,,768,,840,840,840',
'18,840,,18,,840,840,18,18,,840,,840,840,840,840,840,840,840,,,,,,840',
'840,840,840,840,840,840,,,840,,,,,,,840,,,840,840,,840,840,840,840,840',
',840,840,840,,840,840,,840,840,,756,756,756,756,756,756,756,756,756',
'756,756,,756,756,,,756,756,,840,,,840,,,840,,,840,,,756,,756,840,756',
'756,756,756,756,756,756,840,756,,,,840,840,840,840,840,840,,,,840,840',
',756,,,,,840,,,840,,,,840,840,814,814,814,814,814,,,,814,814,,,,814',
',814,814,814,814,814,814,814,,,,,,814,814,814,814,814,814,814,,,814',
',,,,,814,814,,814,814,814,,814,814,814,814,814,,814,814,814,,814,814',
',814,814,,440,440,440,440,440,440,440,440,440,440,440,,440,440,,,440',
'440,,814,,,814,,,814,,,814,,814,440,,440,814,440,440,440,440,440,440',
'440,814,440,,,,814,814,814,814,814,814,,,,814,814,,440,,22,22,22,814',
'22,,814,,22,22,814,814,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22',
'22,22,,,22,,,,,,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22',
',424,424,424,424,424,424,424,424,424,424,424,,424,424,,,424,424,,22',
',,22,,,22,,,22,,22,424,22,424,22,424,424,424,424,424,424,424,22,424',
',,,22,22,22,22,22,22,,,,22,22,,424,,23,23,23,22,23,,22,,23,23,22,22',
',23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,,23,,,,,,,23,,',
'23,23,,23,23,23,23,23,23,23,23,23,,23,23,,23,23,,763,763,763,763,763',
'763,763,763,763,763,763,,763,763,,,763,763,,23,,,23,,,23,,,23,,23,763',
'23,763,23,763,763,763,763,763,763,763,23,763,,,,23,23,23,23,23,23,,',
',23,23,,763,,24,24,24,23,24,,23,,24,24,23,23,,24,,24,24,24,24,24,24',
'24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24',
'24,24,24,,24,24,,24,24,,761,761,761,761,761,761,761,761,761,761,761',
',761,761,,,761,761,,24,,,24,,,24,,,24,,24,761,24,761,24,761,761,761',
'761,761,761,761,24,761,,,,24,24,24,24,24,24,,,,24,24,,761,,,,,24,,,24',
',,,24,24,813,813,813,813,813,,,,813,813,,,,813,,813,813,813,813,813',
'813,813,,,,,,813,813,813,813,813,813,813,,,813,,,,,,813,813,,813,813',
'813,,813,813,813,813,813,,813,813,813,,813,813,,813,813,,766,766,766',
'766,766,766,766,766,766,766,766,,766,766,,,766,766,,813,,,813,,,813',
',,813,,813,766,,766,813,766,766,766,766,766,766,766,813,766,,,,813,813',
'813,813,813,813,,,,813,813,,766,,811,811,811,813,811,,813,,811,811,813',
'813,,811,,811,811,811,811,811,811,811,,,,,,811,811,811,811,811,811,811',
',335,811,335,335,335,473,335,,811,,,811,811,,811,811,811,811,811,,811',
'811,811,,811,811,,811,811,558,,558,558,558,,558,473,,335,,473,473,473',
'473,,,335,,,811,,,811,462,,811,,,811,,,,,,811,,,558,,462,462,,811,,',
'558,,811,811,811,811,811,811,,462,,811,811,462,462,462,462,,,811,,,811',
',,,811,811,792,792,792,792,792,,,,792,792,,,,792,,792,792,792,792,792',
'792,792,,,,,,792,792,792,792,792,792,792,,,792,,,,,,792,792,,792,792',
'792,,792,792,792,792,792,,792,792,792,,792,792,,792,792,,,,,,,,,,,,',
',,,,,,,,792,,,792,,,792,,,792,,792,,,,792,,,551,,551,551,551,792,551',
',,,792,792,792,792,792,792,,,,792,792,,,,782,782,782,792,782,,792,,782',
'782,792,792,,782,551,782,782,782,782,782,782,782,551,551,551,551,,782',
'782,782,782,782,782,782,,,782,,,,,,,782,,,782,782,,782,782,782,782,782',
',782,782,782,,782,782,,782,782,,469,469,469,469,469,469,469,,,469,469',
',,,,,469,469,,782,,,782,,,782,,,782,,782,469,,469,782,469,469,469,469',
'469,469,469,782,469,,,,782,782,782,782,782,782,,,,782,782,,,,,,,782',
',,782,,,,782,782,30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30',
',,,,,30,30,30,30,30,30,30,,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30',
',30,30,30,,30,30,,30,30,,472,472,472,472,472,472,472,,,472,472,,,,,',
'472,472,,30,,,30,,,30,,,30,,30,472,,472,30,472,472,472,472,472,472,472',
'30,472,,,,30,30,30,30,30,30,,,,30,30,,,,31,31,31,30,31,,30,,31,31,30',
'30,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31',
',,31,31,,31,31,31,31,31,,31,31,31,,31,31,640,,640,640,640,,640,,,,,',
',,,,,,,,,,,31,,,31,,,31,,,31,,31,,,,640,,,,,,,,640,640,640,640,,31,31',
'31,31,31,31,640,,,31,31,,,,32,32,32,31,32,,31,,32,32,31,31,,32,,32,32',
'32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32,,32,32',
'32,32,32,,32,32,32,,32,32,591,,591,591,591,591,591,,,,,,,,,,591,,,,',
',,32,,,32,,,32,,,32,,,,,,591,591,,,,,,,591,591,591,591,,32,32,32,32',
'32,32,,,,32,32,,,,32,,,32,,,32,,,,32,32,771,771,771,,771,,,591,771,771',
',,,771,,771,771,771,771,771,771,771,,,,,,771,771,771,771,771,771,771',
',,771,,,,,,,771,,,771,771,,771,771,771,771,771,,771,771,771,,771,771',
',771,771,,471,471,471,471,471,471,471,,,471,471,,,,,,471,471,,771,,',
'771,,,771,,,771,,,471,,471,771,471,471,471,471,471,471,471,771,471,',
',,771,771,771,771,771,771,,,,771,771,,,,770,770,770,771,770,,771,,770',
'770,771,771,,770,,770,770,770,770,770,770,770,,,,,,770,770,770,770,770',
'770,770,,,770,,,,,,,770,,,770,770,,770,770,770,770,770,,770,770,770',
',770,770,,770,770,,452,452,452,452,452,452,452,452,452,452,452,,452',
'452,,,452,452,,770,,,770,,,770,,,770,,,452,,452,770,452,452,452,452',
'452,452,452,770,452,,,,770,770,770,770,770,770,,,,770,770,,,,769,769',
'769,770,769,,770,,769,769,770,770,,769,,769,769,769,769,769,769,769',
',,,,,769,769,769,769,769,769,769,,,769,,,,,,,769,,,769,769,,769,769',
'769,769,769,,769,769,769,,769,769,,769,769,,470,470,470,470,470,470',
'470,,,470,470,,,,,,470,470,,769,,,769,,,769,,,769,,,470,,470,769,470',
'470,470,470,470,470,470,769,470,,,,769,769,769,769,769,769,,,,769,769',
',,,759,759,759,769,759,,769,,759,759,769,769,,759,,759,759,759,759,759',
'759,759,,,,,,759,759,759,759,759,759,759,,,759,,,,,,,759,,,759,759,',
'759,759,759,759,759,,759,759,759,,759,759,,759,759,,453,453,453,453',
'453,453,453,453,453,453,453,,453,453,,,453,453,,759,,,759,,,759,,,759',
',,453,,453,759,453,453,453,453,453,453,453,759,453,,,,759,759,759,759',
'759,759,,,,759,759,,,,38,38,38,759,38,,759,,38,38,759,759,,38,,38,38',
'38,38,38,38,38,,,,,,38,38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38',
'38,38,38,,38,38,38,,38,38,,38,38,,468,468,468,468,468,468,468,,,468',
'468,,,,,,468,468,,38,,,38,,,38,,,38,,,468,,468,38,468,468,468,468,468',
'468,468,38,468,,,,38,38,38,38,38,38,,,,38,38,,,,39,39,39,38,39,,38,',
'39,39,38,38,,39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39',
',,,,,,39,,,39,39,,39,39,39,39,39,,39,39,39,,39,39,,39,39,,463,463,463',
'463,463,463,463,,,463,463,,,,,,463,463,,39,,,39,,,39,,,39,,,463,,463',
'39,463,463,463,463,463,463,463,39,463,,,,39,39,39,39,39,39,,,,39,39',
',,,40,40,40,39,40,,39,,40,40,39,39,,40,,40,40,40,40,40,40,40,,,,,,40',
'40,40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40',
'40,,40,40,,464,,,,,,,,,,,,,,,,464,464,,40,,,40,,,40,,,40,,,464,,464',
'40,464,464,464,464,,,464,40,464,,,,40,40,40,40,40,40,,,,40,40,,,,758',
'758,758,40,758,,40,,758,758,40,40,,758,,758,758,758,758,758,758,758',
',,,,,758,758,758,758,758,758,758,,,758,,,,,,,758,,,758,758,,758,758',
'758,758,758,,758,758,758,,758,758,,758,758,,465,,,,,,,,,,,,,,,,465,465',
',758,,,758,,,758,,,758,,,465,,465,758,465,465,465,465,,,465,758,465',
',,,758,758,758,758,758,758,,,,758,758,,,,,,,758,,,758,,,,758,758,752',
'752,752,752,752,,,,752,752,,,,752,,752,752,752,752,752,752,752,,,,,',
'752,752,752,752,752,752,752,,,752,,,,,,752,752,,752,752,752,,752,752',
'752,752,752,,752,752,752,,752,752,,752,752,,475,475,475,475,475,475',
'475,,,475,475,,,,,,475,475,,752,,,752,,,752,,,752,,752,475,,475,752',
'475,475,475,475,475,475,475,752,475,,,,752,752,752,752,752,752,,,,752',
'752,,,,738,738,738,752,738,,752,,738,738,752,752,,738,,738,738,738,738',
'738,738,738,,,,,,738,738,738,738,738,738,738,,,738,,,,,,,738,,,738,738',
',738,738,738,738,738,,738,738,738,,738,738,,738,738,,467,,,,,,,,,,,',
',,,,467,467,,738,,,738,,,738,,,738,,,467,,467,738,467,467,467,467,,',
'467,738,467,,,,738,738,738,738,738,738,,,,738,738,,,,52,52,52,738,52',
',738,,52,52,738,738,,52,,52,52,52,52,52,52,52,,,,,,52,52,52,52,52,52',
'52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,,52,52,,466',
',,,,,,,,,,,,,,,466,466,,52,,,52,,,52,,,52,,,466,,466,52,466,466,466',
'466,,,466,52,466,,,,52,52,52,52,52,52,,,,52,52,,,,53,53,53,52,53,,52',
',53,53,52,52,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53,53,53,,,53',
',,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53,,53,53,,476,476',
'476,476,476,476,476,476,,476,476,,,,,,476,476,,53,,,53,,,53,,,53,,53',
'476,,476,53,476,476,476,476,476,476,476,53,476,,,,53,53,53,53,53,53',
',,,53,53,,,,54,54,54,53,54,,53,,54,54,53,53,,54,,54,54,54,54,54,54,54',
',,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54',
'54,54,,54,54,,54,54,,461,,,,,,,,,,,,,,,,461,461,,54,,,54,,,54,,,54,',
',461,,461,54,461,461,461,461,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,',
',,,,54,,,54,,,,54,54,731,731,731,731,731,,,,731,731,,,,731,,731,731',
'731,731,731,731,731,,,,,,731,731,731,731,731,731,731,,,731,,,,,,731',
'731,,731,731,731,,731,731,731,731,731,,731,731,731,,731,731,,731,731',
',460,,,,,,,,,,,,,,,,460,460,,731,,,731,,,731,,,731,,731,460,,460,731',
'460,460,460,460,,,,731,,,,,731,731,731,731,731,731,,,,731,731,,,,,,',
'731,,,731,,,,731,731,730,730,730,730,730,,,,730,730,,,,730,,730,730',
'730,730,730,730,730,,,,,,730,730,730,730,730,730,730,,,730,,,,,,730',
'730,,730,730,730,,730,730,730,730,730,,730,730,730,,730,730,,730,730',
',,,,,,,,,,,,,,,,,,,,730,,,730,,,730,,,730,,730,,,,730,,,,,,,,730,,,',
',730,730,730,730,730,730,,,,730,730,,,,57,57,57,730,57,,730,,57,57,730',
'730,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57',
',,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,',
'57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,',
',,58,58,58,57,58,,57,,58,58,57,57,,58,,58,58,58,58,58,58,58,,,,,,58',
'58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58',
'58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,',
',,58,58,58,58,58,58,,,,58,58,,,,61,61,61,58,61,,58,,61,61,58,58,,61',
',61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61',
',61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,,61',
',,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,,,61',
'61,,,61,,,,61,61,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,',
',,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62',
'62,,62,62,319,,319,319,319,,319,,,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62',
',,,319,,319,,,,,,319,319,319,319,,62,62,62,62,62,62,,,,62,62,,,,63,63',
'63,62,63,,62,,63,63,62,62,,63,,63,63,63,63,63,63,63,,,,,,63,63,63,63',
'63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63,63,63,,63,63,732',
',732,732,732,732,732,,,,,,,,,,732,,,,63,,,63,,,63,,,63,,,63,,,,,,732',
',,,,,,,732,732,732,732,,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,,,',
'63,63,726,726,726,726,726,,,732,726,726,,,,726,,726,726,726,726,726',
'726,726,,,,,,726,726,726,726,726,726,726,,,726,,,,,,726,726,,726,726',
'726,,726,726,726,726,726,,726,726,726,,726,726,,726,726,,,,,,,,,,,,',
',,,,,,,,726,,,726,,,726,,,726,,726,,,,726,,,,,,,,726,,,,,726,726,726',
'726,726,726,,,,726,726,,,,721,721,721,726,721,,726,,721,721,726,726',
',721,,721,721,721,721,721,721,721,,,,,,721,721,721,721,721,721,721,',
',721,,,,,,,721,,,721,721,,721,721,721,721,721,,721,721,721,,721,721',
',721,721,,,,,,,,,,,,,,,,,,,,,721,,,721,,,721,,,721,,,,,,721,,,,,,,,721',
',,,,721,721,721,721,721,721,,,,721,721,,,,715,715,715,721,715,,721,',
'715,715,721,721,,715,,715,715,715,715,715,715,715,,,,,,715,715,715,715',
'715,715,715,,,715,,,,,,,715,,,715,715,,715,715,715,715,715,,715,715',
'715,,715,715,,715,715,,,,,,,,,,,,,,,,,,,,,715,,,715,,,715,,,715,,715',
',,,715,,,,,,,,715,,,,,715,715,715,715,715,715,,,,715,715,,,,684,684',
'684,715,684,,715,,684,684,715,715,,684,,684,684,684,684,684,684,684',
',,,,,684,684,684,684,684,684,684,,,684,,,,,,,684,,,684,684,,684,684',
'684,684,684,,684,684,684,,684,684,,684,684,,,,,,,,,,,,,,,,,,,,,684,',
',684,,,684,,,684,,684,,,,684,,,,,,,,684,,,,,684,684,684,684,684,684',
',,,684,684,,,,678,678,678,684,678,,684,,678,678,684,684,,678,,678,678',
'678,678,678,678,678,,,,,,678,678,678,678,678,678,678,,,678,,,,,,,678',
',,678,678,,678,678,678,678,678,,678,678,678,,678,678,56,,56,56,56,,56',
',,,,,,,,,,,,,,,,678,,,678,,,678,,,678,,,,,,56,56,,,,,,,56,56,56,56,',
'678,678,678,678,678,678,,,,678,678,,,,668,668,668,678,668,,678,,668',
'668,678,678,,668,,668,668,668,668,668,668,668,,,,,,668,668,668,668,668',
'668,668,,,668,,,,,,,668,,,668,668,,668,668,668,668,668,,668,668,668',
',668,668,893,,893,893,893,893,893,,,,,,,,,,893,,,,,,,668,,,668,,,668',
',,668,,,,,,893,893,,,,,,,893,893,893,893,,668,668,668,668,668,668,,',
',668,668,,,,,,,668,,,668,,,,668,668,664,664,664,664,664,,,893,664,664',
',,,664,,664,664,664,664,664,664,664,,,,,,664,664,664,664,664,664,664',
',,664,,,,,,664,664,,664,664,664,,664,664,664,664,664,,664,664,664,,664',
'664,,664,664,,,,,,,,,,,,,,,,,,,,,664,,,664,,,664,,,664,,664,,,,664,',
',,,,,,664,,,,,664,664,664,664,664,664,,,,664,664,,,,,,,664,,,664,,,',
'664,664,663,663,663,663,663,,,,663,663,,,,663,,663,663,663,663,663,663',
'663,,,,,,663,663,663,663,663,663,663,,,663,,,,,,663,663,,663,663,663',
',663,663,663,663,663,,663,663,663,,663,663,,663,663,,,,,,,,,,,,,,,,',
',,,,663,,,663,,,663,,,663,,663,,,,663,,,,,,,,663,,,,,663,663,663,663',
'663,663,,,,663,663,,,,657,657,657,663,657,,663,,657,657,663,663,,657',
',657,657,657,657,657,657,657,,,,,,657,657,657,657,657,657,657,,,657',
',,,,,,657,,,657,657,,657,657,657,657,657,657,657,657,657,,657,657,,657',
'657,,,,,,,,,,,,,,,,,,,,,657,,,657,,,657,,,657,,,,657,,657,,,,,,,,657',
',,,,657,657,657,657,657,657,,,,657,657,,,,,,,657,,,657,,,,657,657,99',
'99,99,99,99,,,,99,99,,,,99,,99,99,99,99,99,99,99,,,,,,99,99,99,99,99',
'99,99,,,99,,,,,,99,99,99,99,99,99,,99,99,99,99,99,,99,99,99,,99,99,',
'99,99,,,,,,,,,,,,,,,,,,,,,99,,,99,,,99,,,99,,99,,,,99,,,,,,,,99,,,,',
'99,99,99,99,99,99,,,,99,99,,,,,,99,99,,,99,,,,99,99,103,103,103,,103',
',,,103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103',
'103,103,103,,,103,,,,,,,103,,,103,103,,103,103,103,103,103,,103,103',
'103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,',
',103,,,,,,,,103,,,,,103,103,103,103,103,103,,,,103,103,,,,104,104,104',
'103,104,,103,,104,104,103,103,,104,,104,104,104,104,104,104,104,,,,',
',104,104,104,104,104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104',
'104,104,,104,104,104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104',
',,104,,,104,,,,,,104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104',
',,,105,105,105,104,105,,104,,105,105,104,104,,105,,105,105,105,105,105',
'105,105,,,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,',
'105,105,105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,',
',,,105,,,105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105',
'105,,,,105,105,,,,106,106,106,105,106,,105,,106,106,105,105,,106,,106',
'106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,',
',106,,,106,106,,106,106,106,106,106,,106,106,106,,106,106,,106,106,',
',,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106,,,,,,106,,,,,,,,106,,,,,106',
'106,106,106,106,106,,,,106,106,,,,,,,106,,,106,,,,106,106,107,107,107',
'107,107,,,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107',
'107,107,107,107,107,,,107,,,,,,107,107,,107,107,107,,107,107,107,107',
'107,,107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107',
',,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107',
',,,,,,107,,,107,,,,107,107,108,108,108,108,108,,,,108,108,,,,108,,108',
'108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,,,,,',
'108,108,108,108,108,108,,108,108,108,108,108,,108,108,108,,108,108,',
'108,108,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,,108,,108,,,,108,,,,,,',
',108,,,,,108,108,108,108,108,108,,,,108,108,,,,656,656,656,108,656,',
'108,,656,656,108,108,,656,,656,656,656,656,656,656,656,,,,,,656,656',
'656,656,656,656,656,,,656,,,,,,,656,,,656,656,,656,656,656,656,656,656',
'656,656,656,,656,656,,656,656,,,,,,,,,,,,,,,,,,,,,656,,,656,,,656,,',
'656,,656,,656,,656,,,,,,,,656,,,,,656,656,656,656,656,656,,,,656,656',
',,,,,,656,,,656,,,,656,656,653,653,653,653,653,,,,653,653,,,,653,,653',
'653,653,653,653,653,653,,,,,,653,653,653,653,653,653,653,,,653,,,,,',
'653,653,,653,653,653,,653,653,653,653,653,,653,653,653,,653,653,,653',
'653,,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,,,653,,653,,,,653,,,,,,,,653',
',,,,653,653,653,653,653,653,,,,653,653,,,,646,646,646,653,646,,653,',
'646,646,653,653,,646,,646,646,646,646,646,646,646,,,,,,646,646,646,646',
'646,646,646,,,646,,,,,,,646,,,646,646,,646,646,646,646,646,,646,646',
'646,,646,646,,646,646,,,,,,,,,,,,,,,,,,,,,646,,,646,,,646,,,646,,,,',
',646,,,,,,,,646,,,,,646,646,646,646,646,646,,,,646,646,,,,,,,646,,,646',
',,,646,646,195,195,195,195,195,,,,195,195,,,,195,,195,195,195,195,195',
'195,195,,,,,,195,195,195,195,195,195,195,,,195,,,,,,195,195,,195,195',
'195,,195,195,195,195,195,,195,195,195,,195,195,,195,195,,,,,,,,,,,,',
',,,,,,,,195,,,195,,,195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195',
'195,195,195,,,,195,195,,,,196,196,196,195,196,,195,,196,196,195,195',
',196,,196,196,196,196,196,196,196,,,,,,196,196,196,196,196,196,196,',
',196,,,,,,,196,,,196,196,,196,196,196,196,196,,196,196,196,,196,196',
',196,196,,,,,,,,,,,,,,,,,,,,,196,,,196,,,196,,,196,,196,,,,196,,,,,',
',,196,,,,,196,196,196,196,196,196,,,,196,196,,,,197,197,197,196,197',
',196,,197,197,196,196,,197,,197,197,197,197,197,197,197,,,,,,197,197',
'197,197,197,197,197,,,197,,,,,,,197,,,197,197,,197,197,197,197,197,',
'197,197,197,,197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,',
'197,,197,,,,197,,,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,',
',198,198,198,197,198,,197,,198,198,197,197,,198,,198,198,198,198,198',
'198,198,,,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,',
'198,198,198,198,198,,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,',
',,,198,,,198,,,198,,,198,,,,,,198,,,,,,,,198,,,,,198,198,198,198,198',
'198,,,,198,198,,,,199,199,199,198,199,,198,,199,199,198,198,,199,,199',
'199,199,199,199,199,199,,,,,,199,199,199,199,199,199,199,,,199,,,,,',
',199,,,199,199,,199,199,199,199,199,199,199,199,199,,199,199,,199,199',
',,,,,,,,,,,,,,,,,,,,199,,,199,,,199,,,199,,199,,,,199,,,,,,,,199,,,',
',199,199,199,199,199,199,,,,199,199,,,,,,,199,,,199,,,,199,199,642,642',
'642,642,642,,,,642,642,,,,642,,642,642,642,642,642,642,642,,,,,,642',
'642,642,642,642,642,642,,,642,,,,,,642,642,,642,642,642,,642,642,642',
'642,642,,642,642,642,,642,642,,642,642,,,,,,,,,,,,,,,,,,,,,642,,,642',
',,642,,,642,,642,,,,642,,,,,,,,642,,,,,642,642,642,642,642,642,,,,642',
'642,,,,638,638,638,642,638,,642,,638,638,642,642,,638,,638,638,638,638',
'638,638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,,,638,,,638,638',
',638,638,638,638,638,,638,638,638,,638,638,,638,638,,,,,,,,,,,,,,,,',
',,,,638,,,638,,,638,,,638,,,,,,638,,,,,,,,638,,,,,638,638,638,638,638',
'638,,,,638,638,,,,202,202,202,638,202,,638,,202,202,638,638,,202,,202',
'202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,',
',202,,,202,202,,202,202,202,202,202,,202,202,202,,202,202,,202,202,',
',,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,202,,,,,,202,,,,,,,,202,,,,,202',
'202,202,202,202,202,,,,202,202,,,,203,203,203,202,203,,202,,203,203',
'202,202,,203,,203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203',
'203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203,,203,203,203,,203',
'203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,',
',,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,204,204,204,203,204',
',203,,204,204,203,203,,204,,204,204,204,204,204,204,204,,,,,,204,204',
'204,204,204,204,204,,,204,,,,,,,204,,,204,204,,204,204,204,204,204,',
'204,204,204,,204,204,,204,204,,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,,',
'204,,,,,,204,,,,,,,,204,,,,,204,204,204,204,204,204,,,,204,204,,,,630',
'630,630,204,630,,204,,630,630,204,204,,630,,630,630,630,630,630,630',
'630,,,,,,630,630,630,630,630,630,630,,,630,,,,,,,630,,,630,630,,630',
'630,630,630,630,,630,630,630,,630,630,,630,630,,,,,,,,,,,,,,,,,,,,,630',
',,630,,,630,,,630,,,,,,630,,,,,,,,630,,,,,630,630,630,630,630,630,,',
',630,630,,,,627,627,627,630,627,,630,,627,627,630,630,,627,,627,627',
'627,627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627',
',,627,627,,627,627,627,627,627,,627,627,627,,627,627,,627,627,,,,,,',
',,,,,,,,,,,,,,627,,,627,,,627,,,627,,,,,,627,,,,,,,,627,,,,,627,627',
'627,627,627,627,,,,627,627,,,,621,621,621,627,621,,627,,621,621,627',
'627,,621,,621,621,621,621,621,621,621,,,,,,621,621,621,621,621,621,621',
',,621,,,,,,,621,,,621,621,,621,621,621,621,621,,621,621,621,,621,621',
',621,621,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,,621,,,,,,621,,,,,,,,621',
',,,,621,621,621,621,621,621,,,,621,621,,,,620,620,620,621,620,,621,',
'620,620,621,621,,620,,620,620,620,620,620,620,620,,,,,,620,620,620,620',
'620,620,620,,,620,,,,,,,620,,,620,620,,620,620,620,620,620,,620,620',
'620,,620,620,,620,620,,,,,,,,,,,,,,,,,,,,,620,,,620,,,620,,,620,,,,',
',620,,,,,,,,620,,,,,620,620,620,620,620,620,,,,620,620,,,,618,618,618',
'620,618,,620,,618,618,620,620,,618,,618,618,618,618,618,618,618,,,,',
',618,618,618,618,618,618,618,,,618,,,,,,,618,,,618,618,,618,618,618',
'618,618,,618,618,618,,618,618,,618,618,,,,,,,,,,,,,,,,,,,,,618,,,618',
',,618,,,618,,618,,,,618,,,,,,,,618,,,,,618,618,618,618,618,618,,,,618',
'618,,,,616,616,616,618,616,,618,,616,616,618,618,,616,,616,616,616,616',
'616,616,616,,,,,,616,616,616,616,616,616,616,,,616,,,,,,,616,,,616,616',
',616,616,616,616,616,,616,616,616,,616,616,,616,616,,,,,,,,,,,,,,,,',
',,,,616,,,616,,,616,,,616,,,,,,616,,,,,,,,616,,,,,616,616,616,616,616',
'616,,,,616,616,,,,,,,616,,,616,,,,616,616,212,212,212,212,212,,,,212',
'212,,,,212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212',
'212,,,212,,,,,,212,212,,212,212,212,,212,212,212,212,212,,212,212,212',
',212,212,,212,212,,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,,,212,,212,,,',
'212,,,,,,,,212,,,,,212,212,212,212,212,212,,,,212,212,,,,213,213,213',
'212,213,,212,,213,213,212,212,,213,,213,213,213,213,213,213,213,,,,',
',213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,,213,213,213',
'213,213,,213,213,213,,213,213,,213,213,,,,,,,,,,,,,,,,,,,,,213,,,213',
',213,213,,,213,,,,,,213,,,,,,,,213,,,,,213,213,213,213,213,213,,,,213',
'213,,,,216,216,216,213,216,,213,,216,216,213,213,,216,,216,216,216,216',
'216,216,216,,,,,,216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216',
',216,216,216,216,216,,216,216,216,,216,216,,216,216,,,,,,,,,,,,,,,,',
',,,,216,,,216,,,216,,,216,,,,,,216,,,,,,,,216,,,,,216,216,216,216,216',
'216,,,,216,216,,,,346,346,346,216,346,,216,,346,346,216,216,,346,,346',
'346,346,346,346,346,346,,,,,,346,346,346,346,346,346,346,,,346,,,,,',
',346,,,346,346,,346,346,346,346,346,,346,346,346,,346,346,,346,346,',
',,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,346,,,,,,346,,,,,,,,346,,,,,346',
'346,346,346,346,346,,,,346,346,,,,218,218,218,346,218,,346,,218,218',
'346,346,,218,,218,218,218,218,218,218,218,,,,,,218,218,218,218,218,218',
'218,,,218,,,,,,,218,,,218,218,,218,218,218,218,218,,218,218,218,,218',
'218,,218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,218,,,,,,218,,,,',
',,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,219,219,219,218,219',
',218,,219,219,218,218,,219,,219,219,219,219,219,219,219,,,,,,219,219',
'219,219,219,219,219,,,219,,,,,,,219,,,219,219,,219,219,219,219,219,',
'219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,,',
'219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219,219,,,,219,219,,,,220',
'220,220,219,220,,219,,220,220,219,219,,220,,220,220,220,220,220,220',
'220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,,220,,,220,220,,220',
'220,220,220,220,,220,220,220,,220,220,,220,220,,,,,,,,,,,,,,,,,,,,,220',
',,220,,,220,,,220,,,,,,220,,,,,,,,220,,,,,220,220,220,220,220,220,,',
',220,220,,,,221,221,221,220,221,,220,,221,221,220,220,,221,,221,221',
'221,221,221,221,221,,,,,,221,221,221,221,221,221,221,,,221,,,,,,,221',
',,221,221,,221,221,221,221,221,,221,221,221,,221,221,,221,221,,,,,,',
',,,,,,,,,,,,,,221,,,221,,,221,,,221,,,,,,221,,,,,,,,221,,,,,221,221',
'221,221,221,221,,,,221,221,,,,222,222,222,221,222,,221,,222,222,221',
'221,,222,,222,222,222,222,222,222,222,,,,,,222,222,222,222,222,222,222',
',,222,,,,,,,222,,,222,222,,222,222,222,222,222,,222,222,222,,222,222',
',222,222,,,,,,,,,,,,,,,,,,,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222',
',,,,222,222,222,222,222,222,,,,222,222,,,,223,223,223,222,223,,222,',
'223,223,222,222,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223',
'223,223,223,,,223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223',
'223,,223,223,,223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,',
',223,,,,,,,,223,,,,,223,223,223,223,223,223,,,,223,223,,,,224,224,224',
'223,224,,223,,224,224,223,223,,224,,224,224,224,224,224,224,224,,,,',
',224,224,224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224',
'224,224,,224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224',
',,224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224',
',,,225,225,225,224,225,,224,,225,225,224,224,,225,,225,225,225,225,225',
'225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,',
'225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,,',
',,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225',
'225,,,,225,225,,,,226,226,226,225,226,,225,,226,226,225,225,,226,,226',
'226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,',
',226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226,,226,226,',
',,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226,,,,,226',
'226,226,226,226,226,,,,226,226,,,,227,227,227,226,227,,226,,227,227',
'226,226,,227,,227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227',
'227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,,227,227,227,,227',
'227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,,227,,,,,,227,,,,',
',,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,228,228,228,227,228',
',227,,228,228,227,227,,228,,228,228,228,228,228,228,228,,,,,,228,228',
'228,228,228,228,228,,,228,,,,,,,228,,,228,228,,228,228,228,228,228,',
'228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,,',
'228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228,228,,,,228,228,,,,229',
'229,229,228,229,,228,,229,229,228,228,,229,,229,229,229,229,229,229',
'229,,,,,,229,229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,,229',
'229,229,229,229,,229,229,229,,229,229,,229,229,,,,,,,,,,,,,,,,,,,,,229',
',,229,,,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,229,229,,',
',229,229,,,,230,230,230,229,230,,229,,230,230,229,229,,230,,230,230',
'230,230,230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230',
',,230,230,,230,230,230,230,230,,230,230,230,,230,230,,230,230,,,,,,',
',,,,,,,,,,,,,,230,,,230,,,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230',
'230,230,230,230,,,,230,230,,,,231,231,231,230,231,,230,,231,231,230',
'230,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231',
',,231,,,,,,,231,,,231,231,,231,231,231,231,231,,231,231,231,,231,231',
',231,231,,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,231,231,,,,231,231,,,,232,232,232,231,232,,231,',
'232,232,231,231,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232',
'232,232,232,,,232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232',
'232,,232,232,,232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,',
',232,,,,,,,,232,,,,,232,232,232,232,232,232,,,,232,232,,,,233,233,233',
'232,233,,232,,233,233,232,232,,233,,233,233,233,233,233,233,233,,,,',
',233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233,233',
'233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233',
',,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233',
',,,234,234,234,233,234,,233,,234,234,233,233,,234,,234,234,234,234,234',
'234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,',
'234,234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,,',
',,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234',
'234,,,,234,234,,,,235,235,235,234,235,,234,,235,235,234,234,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,,235,235,235,235,235,,235,235,235,,235,235,,235,235,',
',,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,,235,,,,,235',
'235,235,235,235,235,,,,235,235,,,,236,236,236,235,236,,235,,236,236',
'235,235,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236',
'236,,,236,,,,,,,236,,,236,236,,236,236,236,236,236,,236,236,236,,236',
'236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,,236,,,,,,236,,,,',
',,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,237,237,237,236,237',
',236,,237,237,236,236,,237,,237,237,237,237,237,237,237,,,,,,237,237',
'237,237,237,237,237,,,237,,,,,,,237,,,237,237,,237,237,237,237,237,',
'237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,,',
'237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237,237,,,,237,237,,,,238',
'238,238,237,238,,237,,238,238,237,237,,238,,238,238,238,238,238,238',
'238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,,238',
'238,238,238,238,,238,238,238,,238,238,,238,238,,,,,,,,,,,,,,,,,,,,,238',
',,238,,,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,238,238,,',
',238,238,,,,239,239,239,238,239,,238,,239,239,238,238,,239,,239,239',
'239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239',
',,239,239,,239,239,239,239,239,,239,239,239,,239,239,,239,239,,,,,,',
',,,,,,,,,,,,,,239,,,239,,,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239',
'239,239,239,239,,,,239,239,,,,240,240,240,239,240,,239,,240,240,239',
'239,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240',
',,240,,,,,,,240,,,240,240,,240,240,240,240,240,,240,240,240,,240,240',
',240,240,,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,240,240,,,,240,240,,,,241,241,241,240,241,,240,',
'241,241,240,240,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241',
'241,241,241,,,241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241',
'241,,241,241,,241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,',
',241,,,,,,,,241,,,,,241,241,241,241,241,241,,,,241,241,,,,242,242,242',
'241,242,,241,,242,242,241,241,,242,,242,242,242,242,242,242,242,,,,',
',242,242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242,242',
'242,242,,242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242',
',,242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242',
',,,243,243,243,242,243,,242,,243,243,242,242,,243,,243,243,243,243,243',
'243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,',
'243,243,243,243,243,,243,243,243,,243,243,,243,243,,,,,,,,,,,,,,,,,',
',,,243,,,243,,,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,243',
'243,,,,243,243,,,,587,587,587,243,587,,243,,587,587,243,243,,587,,587',
'587,587,587,587,587,587,,,,,,587,587,587,587,587,587,587,,,587,,,,,',
',587,,,587,587,,587,587,587,587,587,,587,587,587,,587,587,,587,587,',
',,,,,,,,,,,,,,,,,,,587,,,587,,,587,,,587,,,,,,587,,,,,,,,587,,,,,587',
'587,587,587,587,587,,,,587,587,,,,583,583,583,587,583,,587,,583,583',
'587,587,,583,,583,583,583,583,583,583,583,,,,,,583,583,583,583,583,583',
'583,,,583,,,,,,,583,,,583,583,,583,583,583,583,583,583,583,583,583,',
'583,583,,583,583,,,,,,,,,,,,,,,,,,,,,583,,,583,,,583,,,583,,583,,,,583',
',,,,,,,583,,,,,583,583,583,583,583,583,,,,583,583,,,,575,575,575,583',
'575,,583,,575,575,583,583,,575,,575,575,575,575,575,575,575,,,,,,575',
'575,575,575,575,575,575,,,575,,,,,,,575,,,575,575,,575,575,575,575,575',
'575,575,575,575,,575,575,,575,575,,,,,,,,,,,,,,,,,,,,,575,,,575,,,575',
',,575,,575,,,,575,,,,,,,,575,,,,,575,575,575,575,575,575,,,,575,575',
',,,252,252,252,575,252,,575,,252,252,575,575,,252,,252,252,252,252,252',
'252,252,,,,,,252,252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,',
'252,252,252,252,252,,252,252,252,,252,252,,252,252,,,,,,,,,,,,,,,,,',
',,,252,,,252,,,252,,,252,,,,,,252,,,,,,,,252,,,,,252,252,252,252,252',
'252,,,,252,252,,,,,,,252,,,252,,,,252,252,573,573,573,573,573,,,,573',
'573,,,,573,,573,573,573,573,573,573,573,,,,,,573,573,573,573,573,573',
'573,,,573,,,,,,573,573,,573,573,573,,573,573,573,573,573,,573,573,573',
',573,573,,573,573,,,,,,,,,,,,,,,,,,,,,573,,,573,,,573,,,573,,573,,,',
'573,,,,,,,,573,,,,,573,573,573,573,573,573,,,,573,573,,,,254,254,254',
'573,254,,573,,254,254,573,573,,254,,254,254,254,254,254,254,254,,,,',
',254,254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,,254,254,254',
'254,254,,254,254,254,,254,254,,254,254,,,,,,,,,,,,,,,,,,,,,254,,,254',
',,254,,,254,,,,,,254,,,,,,,,254,,,,,254,254,254,254,254,254,,,,254,254',
',,,259,259,259,254,259,,254,,259,259,254,254,,259,,259,259,259,259,259',
'259,259,,,,,,259,259,259,259,259,259,259,,,259,,,,,,,259,,,259,259,',
'259,259,259,259,259,,259,259,259,,259,259,,259,259,,,,,,,,,,,,,,,,,',
',,,259,,,259,,,259,,,259,,,,,,259,,,,,,,,259,,,,,259,259,259,259,259',
'259,,,,259,259,,,,,,,259,,,259,,,,259,259,568,568,568,568,568,,,,568',
'568,,,,568,,568,568,568,568,568,568,568,,,,,,568,568,568,568,568,568',
'568,,,568,,,,,,568,568,,568,568,568,,568,568,568,568,568,,568,568,568',
',568,568,,568,568,,,,,,,,,,,,,,,,,,,,,568,,,568,,,568,,,568,,568,,,',
'568,,,,,,,,568,,,,,568,568,568,568,568,568,,,,568,568,,,,,,,568,,,568',
',,,568,568,564,564,564,564,564,,,,564,564,,,,564,,564,564,564,564,564',
'564,564,,,,,,564,564,564,564,564,564,564,,,564,,,,,,564,564,,564,564',
'564,,564,564,564,564,564,,564,564,564,,564,564,,564,564,,,,,,,,,,,,',
',,,,,,,,564,,,564,,,564,,,564,,564,,,,564,,,,,,,,564,,,,,564,564,564',
'564,564,564,,,,564,564,,,,550,550,550,564,550,,564,,550,550,564,564',
',550,,550,550,550,550,550,550,550,,,,,,550,550,550,550,550,550,550,',
',550,,,,,,,550,,,550,550,,550,550,550,550,550,,550,550,550,,550,550',
',,,,,,,,,,,,,,,,,,,,,,,550,,,550,,,550,,,550,,,,,,,,,,,,,,,,,,,550,550',
'550,550,550,550,,,,550,550,,,,265,265,265,550,265,,550,,265,265,550',
'550,,265,,265,265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265',
',,265,,,,,,,265,,,265,265,,265,265,265,265,265,265,265,265,265,,265',
'265,,265,265,,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,,,265,,265,,265,,265',
',,,,,,,265,,,,,265,265,265,265,265,265,,,,265,265,,,,266,266,266,265',
'266,,265,,266,266,265,265,,266,,266,266,266,266,266,266,266,,,,,,266',
'266,266,266,266,266,266,,,266,,,,,,,266,,,266,266,,266,266,266,266,266',
'266,266,266,266,,266,266,,266,266,,,,,,,,,,,,,,,,,,,,,266,,,266,,,266',
',,266,,266,,266,,266,,,,,,,,266,,,,,266,266,266,266,266,266,,,,266,266',
',,,274,274,274,266,274,,266,,274,274,266,266,,274,,274,274,274,274,274',
'274,274,,,,,,274,274,274,274,274,274,274,,,274,,,,,,,274,,,274,274,',
'274,274,274,274,274,274,274,274,274,,274,274,,274,274,,,,,,,,,,,,,,',
',,,,,,274,,,274,,274,274,,,274,,274,,274,,274,,,,,,,,274,,,,,274,274',
'274,274,274,274,,,,274,274,,,,,,,274,,,274,,,,274,274,544,544,544,544',
'544,,,,544,544,,,,544,,544,544,544,544,544,544,544,,,,,,544,544,544',
'544,544,544,544,,,544,,,,,,544,544,,544,544,544,,544,544,544,544,544',
',544,544,544,,544,544,,544,544,,,,,,,,,,,,,,,,,,,,,544,,,544,,,544,',
',544,,544,,,,544,,,,,,,,544,,,,,544,544,544,544,544,544,,,,544,544,',
',,,,,544,,,544,,,,544,544,543,543,543,543,543,,,,543,543,,,,543,,543',
'543,543,543,543,543,543,,,,,,543,543,543,543,543,543,543,,,543,,,,,',
'543,543,,543,543,543,,543,543,543,543,543,,543,543,543,,543,543,,543',
'543,,,,,,,,,,,,,,,,,,,,,543,,,543,,,543,,,543,,543,,,,543,,,,,,,,543',
',,,,543,543,543,543,543,543,,,,543,543,,,,538,538,538,543,538,,543,',
'538,538,543,543,,538,,538,538,538,538,538,538,538,,,,,,538,538,538,538',
'538,538,538,,,538,,,,,,,538,,,538,538,,538,538,538,538,538,538,538,538',
'538,,538,538,,538,538,,,,,,,,,,,,,,,,,,,,,538,,,538,,,538,,,538,,,,',
',538,,,,,,,,538,,,,,538,538,538,538,538,538,,,,538,538,,,,,,,538,,,538',
',,,538,538,278,278,278,278,278,,,,278,278,,,,278,,278,278,278,278,278',
'278,278,,,,,,278,278,278,278,278,278,278,,,278,,,,,,278,278,,278,278',
'278,,278,278,278,278,278,,278,278,278,,278,278,,278,278,,,,,,,,,,,,',
',,,,,,,,278,,,278,,,278,,,278,,278,,,,278,,,,,,,,278,,,,,278,278,278',
'278,278,278,,,,278,278,,,,535,535,535,278,535,,278,,535,535,278,278',
',535,,535,535,535,535,535,535,535,,,,,,535,535,535,535,535,535,535,',
',535,,,,,,,535,,,535,535,,535,535,535,535,535,535,535,535,535,,535,535',
',535,535,,,,,,,,,,,,,,,,,,,,,535,,,535,,,535,,,535,,535,,,,535,,,,,',
',,535,,,,,535,535,535,535,535,535,,,,535,535,,,,529,529,529,535,529',
',535,,529,529,535,535,,529,,529,529,529,529,529,529,529,,,,,,529,529',
'529,529,529,529,529,,,529,,,,,,,529,,,529,529,,529,529,529,529,529,',
'529,529,529,,529,529,,529,529,,,,,,,,,,,,,,,,,,,,,529,,,529,,,529,,',
'529,,,,,,529,,,,,,,,529,,,,,529,529,529,529,529,529,,,,529,529,,,,525',
'525,525,529,525,,529,,525,525,529,529,,525,,525,525,525,525,525,525',
'525,,,,,,525,525,525,525,525,525,525,,,525,,,,,,,525,,,525,525,,525',
'525,525,525,525,,525,525,525,,525,525,,525,525,,,,,,,,,,,,,,,,,,,,,525',
',,525,,,525,,,525,,,,,,525,,,,,,,,525,,,,,525,525,525,525,525,525,,',
',525,525,,,,282,282,282,525,282,,525,,282,282,525,525,,282,,282,282',
'282,282,282,282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,,,282',
',,282,282,,282,282,282,282,282,,282,282,282,,282,282,,,,,,,,,,,,,,,',
',,,,,,,,282,,,282,,,282,,,282,,,,,,,,,,,,,,,,,,,282,282,282,282,282',
'282,,,,282,282,,,,282,,,282,,,282,,,,282,282,283,283,283,283,283,,,',
'283,283,,,,283,,283,283,283,283,283,283,283,,,,,,283,283,283,283,283',
'283,283,,,283,,,,,,283,283,,283,283,283,,283,283,283,283,283,,283,283',
'283,,283,283,,283,283,,,,,,,,,,,,,,,,,,,,,283,,,283,,,283,,,283,,283',
',,,283,,,,,,,,283,,,,,283,283,283,283,283,283,,,,283,283,,,,524,524',
'524,283,524,,283,,524,524,283,283,,524,,524,524,524,524,524,524,524',
',,,,,524,524,524,524,524,524,524,,,524,,,,,,,524,,,524,524,,524,524',
'524,524,524,,524,524,524,,524,524,,524,524,,,,,,,,,,,,,,,,,,,,,524,',
',524,,,524,,,524,,,,,,524,,,,,,,,524,,,,,524,524,524,524,524,524,,,',
'524,524,,,,523,523,523,524,523,,524,,523,523,524,524,,523,,523,523,523',
'523,523,523,523,,,,,,523,523,523,523,523,523,523,,,523,,,,,,,523,,,523',
'523,,523,523,523,523,523,,523,523,523,,523,523,,523,523,,,,,,,,,,,,',
',,,,,,,,523,,,523,,,523,,,523,,,,,,523,,,,,,,,523,,,,,523,523,523,523',
'523,523,,,,523,523,,,,514,514,514,523,514,,523,,514,514,523,523,,514',
',514,514,514,514,514,514,514,,,,,,514,514,514,514,514,514,514,,,514',
',,,,,,514,,,514,514,,514,514,514,514,514,514,514,514,514,,514,514,,514',
'514,,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,,,514,,514,,,,514,,,,,,,,514',
',,,,514,514,514,514,514,514,,,,514,514,,,,512,512,512,514,512,,514,',
'512,512,514,514,,512,,512,512,512,512,512,512,512,,,,,,512,512,512,512',
'512,512,512,,,512,,,,,,,512,,,512,512,,512,512,512,512,512,,512,512',
'512,,512,512,,,,,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,,,512,,,,,,,,,,',
',,,,,,,,512,512,512,512,512,512,,,,512,512,,,,,,,512,,,512,,,,512,512',
'506,506,506,506,506,,,,506,506,,,,506,,506,506,506,506,506,506,506,',
',,,,506,506,506,506,506,506,506,,,506,,,,,,506,506,,506,506,506,,506',
'506,506,506,506,,506,506,506,,506,506,,506,506,,,,,,,,,,,,,,,,,,,,,506',
',,506,,,506,,,506,,506,,,,506,,,,,,,,506,,,,,506,506,506,506,506,506',
',,,506,506,,,,,,506,506,,,506,,,,506,506,500,500,500,,500,,,,500,500',
',,,500,,500,500,500,500,500,500,500,,,,,,500,500,500,500,500,500,500',
',,500,,,,,,,500,,,500,500,,500,500,500,500,500,,500,500,500,,500,500',
',500,500,,,,,,,,,,,,,,,,,,,,,500,,,500,,500,500,,,500,,,,500,,500,,',
',,,,,500,,,,,500,500,500,500,500,500,,,,500,500,,,,484,484,484,500,484',
',500,,484,484,500,500,,484,,484,484,484,484,484,484,484,,,,,,484,484',
'484,484,484,484,484,,,484,,,,,,,484,,,484,484,,484,484,484,484,484,',
'484,484,484,,484,484,,484,484,,,,,,,,,,,,,,,,,,,,,484,,,484,,,484,,',
'484,,,,,,484,,,,,,,,484,,,,,484,484,484,484,484,484,,,,484,484,,,,482',
'482,482,484,482,,484,,482,482,484,484,,482,,482,482,482,482,482,482',
'482,,,,,,482,482,482,482,482,482,482,,,482,,,,,,,482,,,482,482,,482',
'482,482,482,482,482,482,482,482,,482,482,,482,482,,,,,,,,,,,,,,,,,,',
',,482,,,482,,,482,,,482,,,,482,,482,,,,,,,,482,,,,,482,482,482,482,482',
'482,,,,482,482,,,,480,480,480,482,480,,482,,480,480,482,482,,480,,480',
'480,480,480,480,480,480,,,,,,480,480,480,480,480,480,480,,,480,,,,,',
',480,,,480,480,,480,480,480,480,480,480,480,480,480,,480,480,,480,480',
',,,,,,,,,,,,,,,,,,,,480,,,480,,,480,,,480,,480,,480,,480,,,,,,,,480',
',,,,480,480,480,480,480,480,,,,480,480,,,,295,295,295,480,295,,480,',
'295,295,480,480,,295,,295,295,295,295,295,295,295,,,,,,295,295,295,295',
'295,295,295,,,295,,,,,,,295,,,295,295,,295,295,295,295,295,,295,295',
'295,,295,295,,,,,,,,,,,,,,,,,,,,,,,,295,,,295,,,295,,,295,,,,,,,,,,',
',,,,,,,,295,295,295,295,295,295,,,,295,295,,,,449,449,449,295,449,,295',
',449,449,295,295,,449,,449,449,449,449,449,449,449,,,,,,449,449,449',
'449,449,449,449,,,449,,,,,,,449,,,449,449,,449,449,449,449,449,,449',
'449,449,,449,449,,449,449,,,,,,,,,,,,,,,,,,,,,449,,,449,,,449,,,449',
',,,,,449,,,,,,,,449,,,,,449,449,449,449,449,449,,,,449,449,,,,448,448',
'448,449,448,,449,,448,448,449,449,,448,,448,448,448,448,448,448,448',
',,,,,448,448,448,448,448,448,448,,,448,,,,,,,448,,,448,448,,448,448',
'448,448,448,,448,448,448,,448,448,,448,448,,,,,,,,,,,,,,,,,,,,,448,',
',448,,,448,,,448,,,,,,448,,,,,,,,448,,,,,448,448,448,448,448,448,,,',
'448,448,,,,447,447,447,448,447,,448,,447,447,448,448,,447,,447,447,447',
'447,447,447,447,,,,,,447,447,447,447,447,447,447,,,447,,,,,,,447,,,447',
'447,,447,447,447,447,447,,447,447,447,,447,447,,447,447,,,,,,,,,,,,',
',,,,,,,,447,,,447,,,447,,,447,,,,,,447,,,,,,,,447,,,,,447,447,447,447',
'447,447,,,,447,447,,,,445,445,445,447,445,,447,,445,445,447,447,,445',
',445,445,445,445,445,445,445,,,,,,445,445,445,445,445,445,445,,,445',
',,,,,,445,,,445,445,,445,445,445,445,445,445,445,445,445,,445,445,,445',
'445,,,,,,,,,,,,,,,,,,,,,445,,,445,,,445,,,445,,445,,,,445,,,,,,,,445',
',,,,445,445,445,445,445,445,,,,445,445,,,,418,418,418,445,418,,445,',
'418,418,445,445,,418,,418,418,418,418,418,418,418,,,,,,418,418,418,418',
'418,418,418,,,418,,,,,,,418,,,418,418,,418,418,418,418,418,,418,418',
'418,,418,418,,418,418,,,,,,,,,,,,,,,,,,,,,418,,,418,,,418,,,418,,,,',
',418,,,,,,,,418,,,,,418,418,418,418,418,418,,,,418,418,,,,304,304,304',
'418,304,,418,,304,304,418,418,,304,,304,304,304,304,304,304,304,,,,',
',304,304,304,304,304,304,304,,,304,,,,,,,304,,,304,304,,304,304,304',
'304,304,,304,304,304,,304,304,,304,304,,,,,,,,,,,,,,,,,,,,,304,,,304',
'304,,304,,,304,,,,,,304,,,,,,,,304,,,,,304,304,304,304,304,304,,,,304',
'304,,,,,,,304,,,304,,,,304,304,306,306,306,306,306,,,,306,306,,,,306',
',306,306,306,306,306,306,306,,,,,,306,306,306,306,306,306,306,,,306',
',,,,,306,306,,306,306,306,,306,306,306,306,306,,306,306,306,,306,306',
',306,306,,,,,,,,,,,,,,,,,,,,,306,,,306,,,306,,,306,,306,,,,306,,,,,',
',,306,,,,,306,306,306,306,306,306,,,,306,306,,,,378,378,378,306,378',
',306,,378,378,306,306,,378,,378,378,378,378,378,378,378,,,,,,378,378',
'378,378,378,378,378,,,378,,,,,,,378,,,378,378,,378,378,378,378,378,',
'378,378,378,,378,378,,378,378,,,,,,,,,,,,,,,,,,,,,378,,,378,,,378,,',
'378,,,,,,378,,,,,,,,378,,,,,378,378,378,378,378,378,,,,378,378,,,,366',
'366,366,378,366,,378,,366,366,378,378,,366,,366,366,366,366,366,366',
'366,,,,,,366,366,366,366,366,366,366,,,366,,,,,,,366,,,366,366,,366',
'366,366,366,366,,366,366,366,,366,366,,,,,,,,,,,,,,,,,,,,,,,,366,,,366',
',,366,,,366,,,,,,,,,,,,,,,,,,,366,366,366,366,366,366,,,,366,366,,,',
'347,347,347,366,347,,366,,347,347,366,366,,347,,347,347,347,347,347',
'347,347,,,,,,347,347,347,347,347,347,347,,,347,,,,,,,347,,,347,347,',
'347,347,347,347,347,,347,347,347,,347,347,,347,347,,,,,,,,,,,,,,,,,',
',,,347,,,347,,,347,,,347,,,,,,347,,,,,,,,347,,,,,347,347,347,347,347',
'347,,,,347,347,,,,589,589,589,347,589,,347,,589,589,347,347,,589,,589',
'589,589,589,589,589,589,,,,,,589,589,589,589,589,589,589,,,589,,,,,',
',589,,,589,589,,589,589,589,589,589,,589,589,589,,589,589,,589,589,',
',,,,,,,,,,,,,,,,,,,589,,,589,,,589,,,589,,,,,,589,,,,,,,,589,,,,,589',
'589,589,589,589,589,,,,589,589,,,,433,,,589,,,589,433,433,433,589,589',
',433,433,,433,,,,,,,,,433,,,,,,,,,,,433,433,,433,433,433,433,433,,,',
',,,,,,,,,,,,,,,,,,,,433,433,433,433,433,433,433,433,433,433,433,433',
'433,433,,,433,433,433,,433,,,,433,,,,,,,433,,433,,433,433,433,433,433',
'433,433,,433,433,433,,,,,,,,,,,,,433,433,,433,,433,84,,433,,,433,,84',
'84,84,,,84,84,84,,84,,,,,,,,84,,84,84,84,,,,,,,,84,84,,84,84,84,84,84',
',,,,,,,,,,,,,,,,,,,,,,,84,84,84,84,84,84,84,84,84,84,84,84,84,84,,,84',
'84,84,,84,84,,,84,,,84,,84,,84,,84,,84,84,84,84,84,84,84,,84,,84,,,',
',,,,,,,,,84,84,84,84,,84,87,84,84,,,84,,87,87,87,,,87,87,87,,87,,,,',
',,,87,,87,87,87,,,,,,,,87,87,,87,87,87,87,87,,,,,,,,,,,,,,,,,,,,,,,',
'87,87,87,87,87,87,87,87,87,87,87,87,87,87,,,87,87,87,,87,87,,,87,,,87',
',87,,87,,87,,87,87,87,87,87,87,87,,87,,87,,,,,,,,,,,,,87,87,87,87,,87',
'435,87,87,,,87,,435,435,435,,,,435,435,,435,,,,,,,,,,,,,,,,,,,,435,435',
',435,435,435,435,435,,,,,,,,,,,,,,,,,,,,,,,,435,435,435,435,435,435',
'435,435,435,435,435,435,435,435,,,435,435,435,,435,,,,435,,,,,,,435',
',435,,435,435,435,435,435,435,435,,435,,435,,,,,,,,,,,,,435,435,,435',
',435,634,,435,,,435,,634,634,634,,,634,634,634,,634,,,,,,,,,,634,634',
',,,,,,,,634,634,,634,634,634,634,634,,,,,,,,,,,,,,,,,,,,,,,,634,634',
'634,634,634,634,634,634,634,634,634,634,634,634,,,634,634,634,,634,634',
',,634,,,634,,634,,634,,634,,634,634,634,634,634,634,634,,634,,634,,',
',,,,,,,,,,634,634,634,634,,634,633,,634,,,634,,633,633,633,,,633,633',
'633,,633,,,,,,,,,633,633,633,,,,,,,,,633,633,,633,633,633,633,633,,',
',,,,,,,,,,,,,,,,,,,,,633,633,633,633,633,633,633,633,633,633,633,633',
'633,633,,,633,633,633,,633,633,,,633,,,633,,633,,633,,633,,633,633,633',
'633,633,633,633,,633,633,633,,,,,,,,,,,,,633,633,633,633,,633,27,,633',
',,633,,27,27,27,,,27,27,27,,27,,,,,,,,,27,27,27,,,,,,,,,27,27,,27,27',
'27,27,27,,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27',
'27,27,,,27,27,27,,,27,,27,27,,,27,,27,,27,,27,,27,27,27,27,27,27,27',
',27,27,27,,,,,,,,,,,,,27,27,27,27,28,27,,,27,,,28,28,28,,,28,28,28,',
'28,,,,,,,,,,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,',
',,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28',
',,28,,28,,28,,28,,28,28,28,28,28,28,28,,28,,28,,,,,,,,,,,,,28,28,28',
'28,50,28,,,28,,,50,50,50,,,50,50,50,,50,,,,,,,,,,50,50,50,,,,,,,,50',
'50,,50,50,50,50,50,,,,,,,,,,,,,,,,,,,,,,,,50,50,50,50,50,50,50,50,50',
'50,50,50,50,50,,,50,50,50,,,50,,,50,,,50,,50,,50,,50,,50,50,50,50,50',
'50,50,,50,,50,,,,,,,,,,,,,50,50,50,50,437,50,,50,50,,,437,437,437,,',
'437,437,437,,437,,,,,,,,,437,437,437,437,,,,,,,,437,437,,437,437,437',
'437,437,,,,,,,,,,,,,,,,,,,,,,,,437,437,437,437,437,437,437,437,437,437',
'437,437,437,437,,,437,437,437,,,437,,,437,,,437,,437,,437,,437,,437',
'437,437,437,437,437,437,,437,437,437,,,,,,,,,,,,,437,437,437,437,438',
'437,,437,437,,,438,438,438,,,438,438,438,,438,,,,,,,,,438,438,438,438',
',,,,,,,438,438,,438,438,438,438,438,,,,,,,,,,,,,,,,,,,,,,,,438,438,438',
'438,438,438,438,438,438,438,438,438,438,438,,,438,438,438,,,438,,,438',
',,438,,438,,438,,438,,438,438,438,438,438,438,438,,438,438,438,,,,,',
',,,,,,,438,438,438,438,428,438,,438,438,,,428,428,428,,,428,428,428',
',428,,,,,,,,,428,428,428,,,,,,,,,428,428,,428,428,428,428,428,,,,,,',
',,,,,,,,,,,,,,,,,428,428,428,428,428,428,428,428,428,428,428,428,428',
'428,,,428,428,428,,,428,,428,428,,,428,,428,,428,,428,,428,428,428,428',
'428,428,428,,428,428,428,,,,,,,,,,,,,428,428,428,428,490,428,,,428,',
',490,490,490,,,490,490,490,,490,,,,,,,,,,490,,,,,,,,,,490,490,,490,490',
'490,490,490,,,,,,,,,,,,,487,,,,,,,487,487,487,,,487,487,487,,487,,,',
',,490,,,,487,,,490,,,,,490,490,487,487,,487,487,487,487,487,,,,,,,,',
',,,,490,,,,,,,,,,,,,490,,490,,,490,,,,487,,,,,,,487,,,,,487,487,,,,',
',,,,,,,,,,,,,,,,487,,,,,,,,,,,,,487,,487,,,487,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8',
'8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,',
'7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7',
',7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,408,408,408,408,408,408,408',
'408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
',,,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408',
'408,408,408,408,,408,408,,,408,,,,,,,,,408,408,,408,408,408,408,408',
'408,408,,,408,408,,,,408,408,408,408,,,,,,,,,,,,,408,408,,408,408,408',
'408,408,408,408,408,408,408,408,,,408,408,,,,,,,,,,408,412,412,412,412',
'412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,,,,412,412,412,412,412,412,412,412,412,412,412,412,412,412',
'412,412,412,412,412,412,412,,412,412,,,412,,,,,,,,,412,412,,412,412',
'412,412,412,412,412,,,412,412,,,,412,412,412,412,,,,,,,,,,,,,412,412',
',412,412,412,412,412,412,412,412,412,412,412,,,412,412,,,,,,,,,,412',
'749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749',
'749,749,749,749,749,749,749,,,,749,749,749,749,749,749,749,749,749,749',
'749,749,749,749,749,749,749,749,749,749,749,,749,749,,,749,,,,,,,,,749',
'749,,749,749,749,749,749,749,749,,,749,749,,,,749,749,749,749,,,,,,',
',,,,,,749,749,,749,749,749,749,749,749,749,749,749,749,749,,,749,192',
'192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,,,,192,192,192,192,192,192,192,192,192,192,192',
'192,192,192,192,192,192,192,192,192,192,,192,192,192,192,192,,192,,',
',,,,192,192,,192,192,192,192,192,192,192,,,192,192,,,,192,192,192,192',
',,,,,,,,,,,,192,192,,192,192,192,192,192,192,192,192,192,192,192,,,192',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
',79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79,,,,79',
'79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
',,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65',
'65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65',
'65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,921,921',
'921,,921,,,,,,,,,921,921,,921,921,921,921,921,921,921,,,921,921,,,,921',
'921,921,921,,,,,,921,,,,,,,921,921,,921,921,921,921,921,921,921,921',
'921,921,921,801,801,921,,801,,,,,,,,,801,801,,801,801,801,801,801,801',
'801,,,801,801,,,,801,801,801,801,,,,,,,,,,,,,801,801,,801,801,801,801',
'801,801,801,801,801,801,801,,,801,584,584,584,,584,,,,,,,,,584,584,',
'584,584,584,584,584,584,584,,,584,584,,,,584,584,584,584,,,,,,584,,',
',,,,584,584,,584,584,584,584,584,584,584,584,584,584,584,,,584,443,443',
'443,,443,,,,,,,,,443,443,,443,443,443,443,443,443,443,,,443,443,,,,443',
'443,443,443,,,,,,443,,,,,,,443,443,,443,443,443,443,443,443,443,443',
'443,443,443,444,444,443,,444,,,,,,,,,444,444,,444,444,444,444,444,444',
'444,,,444,444,,,,444,444,444,444,,,,,,,,,,,,,444,444,,444,444,444,444',
'444,444,444,444,444,444,444,582,582,444,,582,,,,,,,,,582,582,,582,582',
'582,582,582,582,582,,,582,582,,,,582,582,582,582,,,,,,,,,,,,,582,582',
',582,582,582,582,582,582,582,582,582,582,582,577,577,582,,577,,,,,,',
',,577,577,,577,577,577,577,577,577,577,,,577,577,,,,577,577,577,577',
',,,,,,,,,,,,577,577,,577,577,577,577,577,577,577,577,577,577,577,,,577',
'576,576,576,,576,,,,,,,,,576,576,,576,576,576,576,576,576,576,,,576',
'576,,,,576,576,576,576,,,,,,576,,,,,,,576,576,,576,576,576,576,576,576',
'576,576,576,576,576,,,576,515,515,515,,515,,,,,,,,,515,515,,515,515',
'515,515,515,515,515,,,515,515,,,,515,515,515,515,,,,,,515,,,,,,,515',
'515,,515,515,515,515,515,515,515,515,515,515,515,263,263,515,,263,,',
',,,,,,263,263,,263,263,263,263,263,263,263,,,263,263,,,,263,263,263',
'263,,,,,,,,,,,,,263,263,,263,263,263,263,263,263,263,263,263,263,263',
',,263,526,526,526,,526,,,,,,,,,526,526,,526,526,526,526,526,526,526',
',,526,526,,,,526,526,526,526,,,,,,526,,,,,,,526,526,,526,526,526,526',
'526,526,526,526,526,526,526,922,922,526,,922,,,,,,,,,922,922,,922,922',
'922,922,922,922,922,,,922,922,,,,922,922,922,922,,,,,,,,,,,,,922,922',
',922,922,922,922,922,922,922,922,922,922,922,516,516,922,,516,,,,,,',
',,516,516,,516,516,516,516,516,516,516,,,516,516,,,,516,516,516,516',
',,,,,,,,,,,,516,516,,516,516,516,516,516,516,516,516,516,516,516,262',
'262,516,,262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262',
',,,262,262,262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262',
'262,262,262,262,201,201,262,,201,,,,,,,,,201,201,,201,201,201,201,201',
'201,201,,,201,201,,,,201,201,201,201,,,,,,,,,,,,,201,201,,201,201,201',
'201,201,201,201,201,201,201,201,,,201,200,200,200,,200,,,,,,,,,200,200',
',200,200,200,200,200,200,200,,,200,200,,,,200,200,200,200,,,,,,200,',
',,,,,200,200,,200,200,200,200,200,200,200,200,200,200,200,527,527,200',
',527,,,,,,,,,527,527,,527,527,527,527,527,527,527,,,527,527,,,,527,527',
'527,527,,,,,,,,,,,,,527,527,,527,527,527,527,527,527,527,527,527,527',
'527,,,527' ]
        racc_action_check = arr = ::Array.new(23828, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1156,   nil,   454,   nil,   925,  1009, 21968, 21845,   959,
   933,   932,   965,   400,   522,   652,   nil,  1846,  1972,  1720,
   929,   nil,  2362,  2488,  2614,   174,    13, 20886, 21015,   nil,
  3280,  3406,  3532,   nil,   761,   100,   829,    90,  4174,  4300,
  4426,   733,   378,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
 21144,   nil,  4942,  5068,  5194,    -3,  6766,  5596,  5722,   nil,
   nil,  5848,  5986,  6112,   nil, 22673,   nil,   nil,   nil,   nil,
   nil,   -46,   nil,   nil,   nil,   nil,   nil,   507,   199, 22561,
   nil,   nil,   nil,   609, 20231,   nil,   nil, 20362,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,  7420,
   nil,   nil,   nil,  7558,  7684,  7810,  7936,  8074,  8212,   nil,
   659,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 22449,   122,   nil,  8740,  8866,  8992,  9118,  9244,
 23654, 23591,  9634,  9760,  9886,   nil,   442,   166,   596,   216,
   537,   613, 10780, 10906,   nil,   nil, 11032,   623, 11284, 11410,
 11536, 11662, 11788, 11914, 12040, 12166, 12292, 12418, 12544, 12670,
 12796, 12922, 13048, 13174, 13300, 13426, 13552, 13678, 13804, 13930,
 14056, 14182, 14308, 14434,   nil,   nil,   nil,  1078,   nil,   588,
   598,   nil, 14938,   648, 15202,   nil,   nil,   nil,   nil, 15328,
   nil,   nil, 23531, 23288,   720, 15856, 15982,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 16108,   492,  1063,   758, 16648,   771,
   792,   759, 17152, 17290,   496,   516,   858,   541,   845,   822,
   -15,   nil,   916,   623,   nil, 18574,   nil,   288,   960,   964,
   403,   nil,  1019,   nil, 19330,   nil, 19468,    35,   nil,   989,
   368,   362,  1096,  1077,   422,  1089,   nil,   nil,    70,  5998,
   nil,   nil,   nil,  1046,  1036,   nil,  1037,  1035,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  2864,   nil,   nil,   nil,  1109,
   nil,   nil,  1108,   376,    82,    67, 11158, 19846,   311,    90,
  1011,    56,   275,  1083,   -18,  1104,   nil,   nil,    -2,  1069,
   nil,   526,   nil,    65,   nil,   nil, 19720,   271,   467,   761,
   605,   679,   547,   543,   733,   nil,   763,   nil, 19594,   nil,
   252,   nil,   248,   nil,   167,   970,   244,   nil,   969,   -25,
   nil,   262,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   978, 22091,   nil,
   nil,   nil, 22214,   975,   nil,   nil,   400,   nil, 19204,   933,
   nil,   923,   nil,   nil,  2362,   945,   426,   478, 21531,   944,
   nil,   nil,   nil, 20100,   943, 20493,   nil, 21273, 21402,   nil,
  2236,   nil,   nil, 22922, 22982, 19078,   169, 18952, 18826, 18700,
   304,   nil,  3796,  4048,   543,   540,   958,   955,   954,   951,
  5332,  5194,  2901,  4300,  4426,  4552,  4942,  4816,  4174,  3142,
  3922,  3670,  3280,  2853,  1353,  4690,  5068,   940,   317,   nil,
 18448,   nil, 18322,   nil, 18196,   nil,   nil, 21716,   nil,   nil,
 21660,   170,   nil,   861,   nil,   nil,   854,   848,   nil,   nil,
 18070,   -50,   332,   847,   nil,   nil, 17932,   843,   804,   nil,
   nil,   799, 17794,   832, 17668, 23228, 23471,   530,   802,   nil,
   nil,   762,   nil, 17542, 17416, 17026, 23351, 23714,  1594, 16900,
   873,   859,   774,   nil,   nil, 16774,   nil,   nil, 16510,   nil,
   nil,   nil,   nil, 16384, 16246,   747,   nil,   745,   nil,   nil,
 15730,  3069,   nil,   -18,   nil,   nil,   710,   nil,  2893,   nil,
   641,   926,   nil,   nil, 15604,   751,   nil,   nil, 15466,   144,
    99,   742,   733, 15076,   nil, 14812, 23165, 23102,    10,   nil,
   444,   nil, 23042, 14686, 22859,   nil,   nil, 14560,   421, 19972,
   nil,  3544,   nil,   nil,   nil,   112,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   210,   nil,   nil,   nil,
   572,   nil,   nil,   nil,   nil,   nil, 10642,   547, 10516,   363,
 10390, 10264,   552,   nil,   nil,   nil,   nil, 10138,   492,   nil,
 10012,   124,   -47, 20755, 20624,   484,   676,   nil,  9508,   nil,
  3418,   nil,  9382,   332,   nil,   249,  8602,   nil,   nil,   nil,
   nil,   nil,   nil,  8476,   nil,   123,  8338,  7282,   802,   -36,
   nil,   nil,   -24,  7156,  7018,   nil,   787,   -37,  6880,  -102,
   nil,   -80,   -17,   210,   -49,   208,   676,    43,  6754,  1204,
   164,   168,   391,   247,  6628,   nil,   nil,   -60,   233,   346,
   nil,   nil,   231,   nil,   309,   535,   411,   384,   393,   nil,
   nil,   475,  1316,   nil,   550,   nil,   584,   nil,   nil,   nil,
   nil,   nil,   607,   nil,   622,  6502,   546,    46,    37,   116,
    77,  6376,   309,   nil,   613,   610,  6250,   405,   nil,   -25,
  5470,  5332,  6124,   284,   nil,   nil,   716,   nil,  4816,   nil,
   644,   647,   nil,   660,   661,   669,   nil,   662,   nil, 22337,
   712,   895,  4690,   nil,   nil,   nil,  2098,   724,  4552,  4048,
   nil,  2614,   nil,  2488,   nil,   nil,  2752,   nil,  1972,  3922,
  3796,  3670,   -63,  1468,   nil,   785,   886,   nil,   nil,   784,
   nil,   770,  3142,   nil,   802,   906,   794,   559,   nil,   nil,
   916,   nil,  3016,   801,   843,   nil,   nil,   nil,   nil,   nil,
   nil, 22796,   nil,   235,   nil,   nil,   nil,   nil,  1064,   928,
   nil,  2878,   930,  2752,  2236,   nil,   nil,    90,    40,   124,
   nil,   981,   nil,   nil,   987,   991,   878,   nil,   nil,   nil,
   262,   nil,   nil,   176,  1342,   nil,   567,   nil,   190,   nil,
  2098,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   916,   902,
   nil,  1846,  1720,   nil,   nil,   nil,  1594,   908,   nil,   nil,
   nil,  1468,   nil,   nil,    66,  1330,   nil,   963,   932,   nil,
   nil,    36,   nil,  1053,  1056,  1204,  1078,   nil,   nil,   940,
   nil,   nil,   981,   nil,   945,   nil,   nil,   947,   948,   949,
   949,   nil,   nil,  6892,   nil,   nil,   802,   nil,   676,   637,
   361,  1039,   527,   nil,   nil,   538,   nil,   nil,   nil,    23,
   400,  1125,   nil,   nil,   291,   nil,   nil,   nil,   262,  1137,
   124, 22736, 23411,   654,   209,   nil,   nil,   nil,  1157,   nil,
  1040,  1160,   nil,  1077,    -7,    73,    74,   447,   nil,   nil,
   nil,   nil,   265 ]

racc_action_default = [
    -3,  -547,    -1,  -535,    -4,    -6,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -271,   -36,   -37,  -547,  -547,   -42,
   -44,   -45,  -282,  -320,  -321,   -49,  -249,  -249,  -249,   -61,
   -10,   -65,   -72,   -74,  -547,  -449,  -547,  -547,  -547,  -547,
  -547,  -537,  -226,  -264,  -265,  -266,  -267,  -268,  -269,  -270,
  -525,  -273,  -547,  -546,  -517,  -290,  -546,  -547,  -547,  -295,
  -298,  -535,  -547,  -547,  -312,  -547,  -322,  -323,  -392,  -393,
  -394,  -395,  -396,  -546,  -399,  -546,  -546,  -546,  -546,  -546,
  -426,  -432,  -433,  -547,  -523,  -439,  -440,  -524,  -442,  -443,
  -444,  -445,  -446,  -447,  -448,  -451,  -452,  -547,    -2,  -536,
  -542,  -543,  -544,  -547,  -547,  -547,  -547,  -547,    -3,   -13,
  -547,  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,
  -111,  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,
  -121,  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,
  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,
  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,
  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,
  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,
  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,
  -181,  -182,  -547,   -18,  -107,   -10,  -547,  -547,  -547,  -546,
  -547,  -547,  -547,  -547,  -547,   -40,  -547,  -449,  -547,  -271,
  -547,  -547,   -10,  -547,   -41,  -218,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -362,  -364,   -46,  -227,  -242,  -256,
  -256,  -246,  -547,  -257,  -547,  -282,  -320,  -321,  -519,  -547,
   -47,   -48,  -547,  -547,   -53,  -546,  -547,  -289,  -367,  -375,
  -377,   -59,  -373,   -60,  -547,  -535,   -11,   -61,   -10,  -547,
  -547,   -66,   -69,   -10,   -80,  -547,  -547,   -87,  -285,  -537,
  -547,  -324,  -374,  -547,   -71,  -547,   -76,  -278,  -434,  -435,
  -547,  -203,  -204,  -219,  -547,  -538,   -10,  -537,  -228,  -537,
  -539,  -539,  -547,  -547,  -539,  -547,  -291,  -292,  -547,  -547,
  -335,  -336,  -343,  -546,  -483,  -350,  -546,  -546,  -361,  -482,
  -484,  -485,  -486,  -487,  -488,  -547,  -501,  -506,  -507,  -509,
  -510,  -511,  -547,   -43,  -547,  -547,  -547,  -547,  -535,  -547,
  -536,  -449,  -547,  -547,  -271,  -547,  -490,  -491,   -96,  -547,
   -98,  -547,  -271,  -547,  -309,  -449,  -547,  -100,  -101,  -138,
  -139,  -155,  -160,  -167,  -170,  -315,  -547,  -515,  -547,  -397,
  -547,  -412,  -547,  -414,  -547,  -547,  -547,  -404,  -547,  -547,
  -410,  -547,  -425,  -427,  -428,  -429,  -430,  -436,  -437,   943,
    -5,  -545,   -19,   -20,   -21,   -22,   -23,  -547,  -547,   -15,
   -16,   -17,  -547,  -547,   -25,   -33,  -183,  -257,  -547,  -547,
   -26,   -34,   -35,   -27,  -185,  -547,  -526,  -527,  -249,  -546,
  -370,  -528,  -529,  -526,  -249,  -527,  -372,  -528,  -529,   -32,
  -192,   -38,   -39,  -547,  -547,  -546,  -278,  -547,  -547,  -547,
  -547,  -288,  -193,  -194,  -195,  -196,  -197,  -198,  -199,  -200,
  -205,  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -213,  -214,
  -215,  -216,  -217,  -220,  -221,  -222,  -223,  -547,  -546,  -243,
  -547,  -244,  -547,  -254,  -547,  -258,  -522,  -249,  -526,  -527,
  -249,  -546,   -54,  -537,  -237,  -238,  -256,  -256,  -250,  -251,
  -547,  -546,  -546,  -547,  -284,    -9,  -536,  -547,   -62,  -276,
   -77,   -67,  -547,  -547,  -546,  -547,  -547,   -86,  -547,  -434,
  -435,   -73,   -78,  -547,  -547,  -547,  -547,  -547,  -224,  -547,
  -384,  -547,  -547,  -229,  -230,  -541,  -540,  -232,  -541,  -280,
  -281,  -518,  -332,   -10,   -10,  -547,  -334,  -547,  -352,  -359,
  -547,  -356,  -357,  -547,  -360,  -483,  -547,  -492,  -547,  -494,
  -496,  -500,  -508,  -512,   -10,  -325,  -326,  -327,   -10,  -547,
  -547,  -547,  -547,   -10,  -379,  -546,  -547,  -547,  -278,  -304,
   -96,   -97,  -547,  -546,  -547,  -307,  -453,  -547,  -547,  -547,
  -313,  -481,  -317,  -533,  -534,  -537,  -398,  -413,  -416,  -417,
  -419,  -400,  -415,  -401,  -402,  -403,  -547,  -406,  -408,  -409,
  -547,  -431,    -7,   -14,  -108,   -24,  -547,  -263,  -547,  -279,
  -547,  -547,   -55,  -235,  -236,  -368,  -369,  -547,   -57,  -371,
  -547,  -526,  -527,  -526,  -527,  -547,  -183,  -287,  -547,  -346,
  -547,  -348,   -10,  -256,  -255,  -259,  -547,  -520,  -521,   -50,
  -365,   -51,  -366,   -10,  -233,  -547,  -239,  -241,   -42,  -547,
  -248,  -252,  -547,   -10,   -10,  -283,   -12,   -62,  -547,   -70,
   -75,  -547,  -526,  -527,  -546,  -530,   -85,  -547,  -547,  -191,
  -201,  -202,  -547,  -546,  -546,  -274,  -275,  -539,  -547,  -547,
  -333,  -344,  -547,  -351,  -546,  -345,  -547,  -546,  -546,  -502,
  -489,  -547,  -547,  -499,  -546,  -328,  -546,  -296,  -329,  -330,
  -331,  -299,  -547,  -302,  -547,  -547,  -547,  -526,  -527,  -530,
  -277,  -547,   -96,   -99,  -530,  -547,   -10,  -547,  -455,  -547,
   -10,   -10,  -481,  -547,  -458,  -459,  -461,  -462,  -464,  -465,
  -514,  -514,  -470,  -472,  -472,  -472,  -480,  -483,  -504,  -547,
  -547,  -547,   -10,  -405,  -407,  -411,  -184,  -261,  -547,  -547,
   -29,  -187,   -30,  -188,   -56,   -31,  -189,   -58,  -190,  -547,
  -547,  -547,  -279,  -225,  -347,  -547,  -547,  -245,  -260,  -547,
  -234,  -256,  -547,  -253,  -547,  -547,   -68,   -81,   -79,  -286,
  -546,  -341,   -10,  -385,  -546,  -386,  -387,  -231,  -337,  -338,
  -358,  -547,  -278,  -547,  -354,  -355,  -493,  -495,  -498,  -547,
  -339,  -547,  -547,   -10,   -10,  -301,  -303,  -547,  -279,  -547,
  -279,  -547,  -454,  -310,  -547,  -547,  -537,  -457,  -460,  -463,
  -547,  -468,  -469,  -547,  -547,  -476,  -547,  -478,  -547,  -479,
  -547,  -318,  -516,  -418,  -421,  -422,  -423,  -424,  -547,  -262,
   -28,  -186,  -547,  -349,  -363,   -52,  -240,  -256,  -376,  -378,
    -8,   -10,  -391,  -342,  -547,  -547,  -389,  -277,  -546,  -497,
  -293,  -547,  -294,  -547,  -547,  -547,   -10,  -305,  -308,   -10,
  -314,  -316,  -547,  -466,  -514,  -513,  -471,  -472,  -472,  -472,
  -547,  -505,  -503,  -481,  -420,  -247,  -547,  -390,   -10,   -88,
  -547,  -547,   -95,  -388,  -353,   -10,  -297,  -300,  -259,  -546,
   -10,  -547,  -456,  -467,  -547,  -474,  -475,  -477,   -10,  -384,
  -546,  -547,  -547,   -94,  -546,  -380,  -381,  -382,  -547,  -311,
  -472,  -547,  -383,  -547,  -526,  -527,  -530,   -93,  -340,  -306,
  -473,  -319,   -89 ]

clist = [
'26,375,304,572,214,557,328,114,114,99,481,249,249,249,102,393,320,26',
'26,415,422,683,26,26,26,564,568,521,281,312,26,291,291,248,248,248,5',
'492,109,194,363,699,344,345,268,272,348,428,434,264,271,273,26,26,117',
'117,731,26,26,746,691,26,291,291,309,114,743,549,809,98,552,554,102',
'534,537,597,556,541,891,114,581,607,279,294,893,2,647,306,402,403,404',
'405,346,831,832,742,277,531,642,26,707,711,626,26,26,26,26,26,26,487',
'490,653,813,250,250,250,13,644,347,644,694,663,664,814,698,721,790,349',
'393,910,726,589,879,206,206,5,366,660,206,206,206,730,647,406,5,314',
'13,285,285,812,591,749,835,837,839,592,891,382,384,318,650,391,542,652',
'745,376,697,860,206,206,585,355,400,206,206,425,193,206,352,361,357',
'245,414,420,423,419,419,478,439,501,502,925,114,407,715,26,26,26,26',
'26,746,438,26,26,26,794,864,743,379,380,309,317,26,26,386,13,606,316',
'12,206,206,206,206,13,13,712,389,843,557,751,752,703,246,260,261,826',
'742,913,884,883,313,377,498,887,669,662,408,654,12,807,518,493,1,,496',
'249,,481,,,,647,,249,,26,26,,532,328,533,,,,26,,248,248,26,545,,506',
'291,26,,248,102,,938,,428,434,522,644,644,291,915,916,917,701,,754,',
'723,,745,26,,268,,272,13,206,206,206,206,691,12,206,206,206,,,,699,12',
'12,,13,206,507,569,570,511,885,513,,885,742,940,742,505,742,590,277',
',26,26,,277,877,,926,,,,497,250,918,102,,746,674,,,250,291,,743,,,,557',
'674,586,,868,,26,,,206,206,,,,,,,,206,,,,13,764,,742,285,13,786,767',
',777,,,,888,114,889,932,285,114,12,571,,,,742,,,635,13,674,,,,,280,',
'12,674,,,,,,,800,613,14,804,805,614,438,26,624,624,,,797,622,629,,655',
'117,309,628,,117,647,,206,206,,,745,,,,14,287,287,,,495,499,,869,,,',
'361,,503,,,930,,,671,,,644,206,,12,,876,,26,12,354,362,,624,26,795,624',
'522,649,,291,651,26,,438,821,,,,824,825,,12,309,,438,,26,,,,644,,,,',
',14,,777,666,26,26,898,,14,14,,291,716,905,,,,750,,,725,,206,,927,26',
',,,26,,,643,727,26,,26,,438,,,708,708,438,26,,,309,26,,26,328,,,413',
'309,,,,,728,775,,,,,,760,762,,35,280,,904,765,,,206,895,,,26,26,13,',
',,687,26,285,,206,,,,,14,,,,35,284,284,26,,,206,,,,,,,14,26,,,,,,13',
'13,,,26,26,522,695,,291,,911,351,365,419,365,788,280,,291,,13,280,,',
'13,841,,,,13,,206,624,,,629,,,,206,,,,206,817,206,819,,35,931,,,,,,',
'35,35,14,,,26,287,14,12,,26,,,,26,26,,,,287,206,206,822,,823,,,206,827',
'850,14,781,,114,,,26,,,,,,13,26,,12,12,,,,,,674,13,,857,,,,,,,,13,13',
',12,,285,,12,882,,,,12,26,,285,,871,,,,,438,,321,35,,362,,,,,26,,26',
'26,,,,,,381,35,383,383,387,390,383,10,,,708,,,,,,,206,,,,,13,,,,13,13',
',,,,,,,,,10,,,12,26,,,,291,,,13,,,12,,,,206,26,,,26,,12,12,,,,,35,,356',
',284,35,,,,933,,26,,,,,,284,26,,,13,,26,,,,,35,,,26,,26,,438,,,,10,206',
',13,13,309,,,10,10,,,,,,688,689,,12,,14,,12,12,,,287,,,,,,,205,,,704',
',,,706,,,,12,714,,,,365,,13,,,,900,,14,14,,,,,,362,,13,,307,13,,,,343',
'343,,,343,14,,,,14,,12,,494,14,13,,,,,,,13,10,,,,13,,,,,12,12,,13,,206',
',,10,776,,,,,343,343,343,343,,,779,,,,,,,,,,784,785,,,,,,,,548,,,548',
'548,,,,,12,,,14,,,,,,,,,,,14,12,,,12,,,,,,14,14,10,,,287,,10,,,,,35',
'12,,287,,,284,,12,,,,,12,,,,,10,,,12,,,,,,,,,441,442,,,,848,,35,35,',
'450,,,,365,,,,,,,14,,,,14,14,,35,,623,623,35,,,,,35,,,,,,,,863,847,14',
',,,,,,,,,,,,,,,,,,873,874,,,,,,,,,,,,,639,,,,,,,14,,623,,,623,639,,',
',,,,,,,639,639,315,35,,14,14,,,,,897,,,35,,,,,,,,,,35,35,909,,,284,',
',,,,,,,,284,343,343,,,,,,,919,,,,,14,,924,,902,,,928,,,,,,,,14,,,14',
'595,,,,,,,,,,,,,10,,35,,,14,35,35,,,,,14,,,,,14,,,,,,,,14,,,35,,,,,',
',,,10,10,,,,,,,,,,,215,,,,247,247,247,,,10,417,421,,10,,,,,10,35,301',
'302,303,,,,,,,,,,,,,247,247,,,623,35,35,,,,,,,791,796,,,,,,,,,,548,307',
',548,548,,,483,,485,791,,791,,486,,,,,,,,,,,,,,10,35,682,,,899,,,,,',
'10,,,,,35,,,35,,10,10,,,,,,,,,,,,,,,,35,,,,,,,35,,,,,35,,,,,,,,35,,343',
',729,,,,,,862,,,,866,,,,,,,,,,,,10,,,,10,10,,416,247,424,247,,,440,',
',,,,,,,,,,,10,215,,452,453,454,455,456,457,458,459,460,461,462,463,464',
'465,466,467,468,469,470,471,472,473,474,475,476,477,,,,,,,617,548,247',
',247,10,,,,247,,,,,,247,247,,,,,,,,247,,10,10,,,,,,,,,,,,,,,791,,,,',
',,343,,,,,528,,,791,,,,,645,,315,,648,,,,,,,,10,,,,903,,,,659,,,,,,',
'10,,,10,,,,,,,,,,,,,,,,,,,10,,,,,,645,10,,315,,,10,,,,,,,,10,,,,,,,',
'343,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,440',
'636,424,757,,,,,,,,,,,,,,,,,,,,,,,,,,,,778,,247,,247,,247,,,,645,315',
',,,,,,,,,,658,,,,,,,,,,,,,,247,,793,,,,,,,679,680,681,,,,,,,,,,247,',
',247,,,,,,,,,417,,,,,,,,,,,,,,,,,,,,,,,829,,,,,247,,,,,,,,247,,,,,,',
'849,,,,,,,,,,,,,,,,,,,,,,,,417,,756,,247,,761,763,,,,,,766,,,768,,,',
',,,,773,,,,,,,,247,,,,,,,,,,247,247,,,,,,,,,,,,,,,892,,,,,,,,,,,,247',
',,,315,,,,,,,,,,,,,,,,,,,908,,,,,,,,247,,,,,,,,,,,,,908,,,,,,,,,,247',
',,,,,,,,,,,,,,,,,,,247,851,,,,,,,,,,761,763,766,,,,,,,,,,,247,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,851',
',,,247,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,,,,,,,247,,,,,,,,,,,,,,,',
',,,,,,,,247' ]
        racc_goto_table = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'37,47,51,80,18,145,107,48,48,6,61,54,54,54,83,47,104,37,37,24,24,10',
'37,37,37,77,77,43,41,22,37,52,52,29,29,29,7,35,14,14,46,147,16,16,57',
'57,16,33,33,34,34,34,37,37,50,50,84,37,37,141,106,37,52,52,29,48,110',
'109,78,4,109,109,83,55,55,129,148,55,151,48,45,129,39,42,101,2,154,87',
'16,16,16,16,88,142,142,108,38,8,36,37,79,79,60,37,37,37,37,37,37,33',
'33,36,89,56,56,56,21,62,90,62,111,36,36,91,111,92,11,4,47,93,94,95,96',
'21,21,7,97,62,21,21,21,98,154,7,7,56,21,21,21,11,99,100,143,143,143',
'86,151,126,126,102,60,126,103,60,111,85,105,12,21,21,82,81,5,21,21,22',
'15,21,21,21,19,112,18,18,18,54,54,113,18,115,116,117,48,2,118,37,37',
'37,37,37,141,48,37,37,37,119,120,110,124,125,29,76,37,37,127,21,128',
'74,20,21,21,21,21,21,21,80,130,131,145,132,133,145,31,31,31,135,108',
'142,137,139,73,72,64,144,43,63,27,59,20,149,51,58,1,,54,54,,61,,,,154',
',54,,37,37,,51,107,51,,,,37,,29,29,37,104,,6,52,37,,29,83,,78,,33,33',
'41,62,62,52,143,143,143,148,,129,,45,,111,37,,57,,57,21,21,21,21,21',
'106,20,21,21,21,,,,147,20,20,,21,21,39,16,16,42,108,39,,108,108,143',
'108,4,108,46,38,,37,37,,38,79,,11,,,,56,56,84,83,,141,33,,,56,52,,110',
',,,145,33,83,,111,,37,,,21,21,,,,,,,,21,,,,21,35,,108,21,21,43,35,,61',
',,,111,48,111,10,21,48,20,4,,,,108,,,22,21,33,,,,,9,,20,33,,,,,,,109',
'14,23,109,109,14,48,37,57,57,,,55,34,57,,51,50,29,34,,50,154,,21,21',
',,111,,,,23,23,23,,,31,31,,145,,,,21,,31,,,111,,,22,,,62,21,,20,,77',
',37,20,23,23,,57,37,24,57,41,34,,52,34,37,,48,8,,,,8,8,,20,29,,48,,37',
',,,62,,,,,,23,,61,7,37,37,77,,23,23,,52,22,77,,,,51,,,22,,21,,80,37',
',,,37,,,56,16,37,,37,,48,,,83,83,48,37,,,29,37,,37,107,,,9,29,,,,,83',
'104,,,,,,18,18,,44,9,,109,18,,,21,61,,,37,37,21,,,,56,37,21,,21,,,,',
'23,,,,44,44,44,37,,,21,,,,,,,23,37,,,,,,21,21,,,37,37,41,21,,52,,8,44',
'44,54,44,41,9,,52,,21,9,,,21,47,,,,21,,21,57,,,57,,,,21,,,,21,54,21',
'16,,44,8,,,,,,,44,44,23,,,37,23,23,20,,37,,,,37,37,,,,23,21,21,83,,83',
',,21,83,18,23,56,,48,,,37,,,,,,21,37,,20,20,,,,,,33,21,,54,,,,,,,,21',
'21,,20,,21,,20,51,,,,20,37,,21,,16,,,,,48,,53,44,,23,,,,,37,,37,37,',
',,,,53,44,53,53,53,53,53,17,,,83,,,,,,,21,,,,,21,,,,21,21,,,,,,,,,,17',
',,20,37,,,,52,,,21,,,20,,,,21,37,,,37,,20,20,,,,,44,,17,,44,44,,,,22',
',37,,,,,,44,37,,,21,,37,,,,,44,,,37,,37,,48,,,,17,21,,21,21,29,,,17',
'17,,,,,,9,9,,20,,23,,20,20,,,23,,,,,,,26,,,9,,,,9,,,,20,9,,,,44,,21',
',,,21,,23,23,,,,,,23,,21,,26,21,,,,26,26,,,26,23,,,,23,,20,,53,23,21',
',,,,,,21,17,,,,21,,,,,20,20,,21,,21,,,17,9,,,,,26,26,26,26,,,9,,,,,',
',,,,9,9,,,,,,,,53,,,53,53,,,,,20,,,23,,,,,,,,,,,23,20,,,20,,,,,,23,23',
'17,,,23,,17,,,,,44,20,,23,,,44,,20,,,,,20,,,,,17,,,20,,,,,,,,,26,26',
',,,9,,44,44,,26,,,,44,,,,,,,23,,,,23,23,,44,,53,53,44,,,,,44,,,,,,,',
'9,23,23,,,,,,,,,,,,,,,,,,,9,9,,,,,,,,,,,,,53,,,,,,,23,,53,,,53,53,,',
',,,,,,,53,53,25,44,,23,23,,,,,9,,,44,,,,,,,,,,44,44,9,,,44,,,,,,,,,',
'44,26,26,,,,,,,9,,,,,23,,9,,23,,,9,,,,,,,,23,,,23,26,,,,,,,,,,,,,17',
',44,,,23,44,44,,,,,23,,,,,23,,,,,,,,23,,,44,,,,,,,,,17,17,,,,,,,,,,',
'28,,,,28,28,28,,,17,25,25,,17,,,,,17,44,28,28,28,,,,,,,,,,,,,28,28,',
',53,44,44,,,,,,,53,53,,,,,,,,,,53,26,,53,53,,,25,,25,53,,53,,25,,,,',
',,,,,,,,,17,44,26,,,44,,,,,,17,,,,,44,,,44,,17,17,,,,,,,,,,,,,,,,44',
',,,,,,44,,,,,44,,,,,,,,44,,26,,26,,,,,,53,,,,53,,,,,,,,,,,,17,,,,17',
'17,,28,28,28,28,,,28,,,,,,,,,,,,,17,28,,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,25,53,28,,28,17',
',,,28,,,,,,28,28,,,,,,,,28,,17,17,,,,,,,,,,,,,,,53,,,,,,,26,,,,,28,',
',53,,,,,25,,25,,25,,,,,,,,17,,,,17,,,,25,,,,,,,17,,,17,,,,,,,,,,,,,',
',,,,,17,,,,,,25,17,,25,,,17,,,,,,,,17,,,,,,,,26,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,28,28,25,,,,,,,,,,,,,,,',
',,,,,,,,,,,,25,,28,,28,,28,,,,25,25,,,,,,,,,,,28,,,,,,,,,,,,,,28,,25',
',,,,,,28,28,28,,,,,,,,,,28,,,28,,,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,25',
',,,,28,,,,,,,,28,,,,,,,25,,,,,,,,,,,,,,,,,,,,,,,,25,,28,,28,,28,28,',
',,,,28,,,28,,,,,,,,28,,,,,,,,28,,,,,,,,,,28,28,,,,,,,,,,,,,,,25,,,,',
',,,,,,,28,,,,25,,,,,,,,,,,,,,,,,,,25,,,,,,,,28,,,,,,,,,,,,,25,,,,,,',
',,,28,,,,,,,,,,,,,,,,,,,,28,28,,,,,,,,,,28,28,28,,,,,,,,,,,28,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,28',
',,,28,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,',
',,,,,28' ]
        racc_goto_check = arr = ::Array.new(2285, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   252,    85,   nil,    66,    73,     6,    36,  -209,   398,
  -509,  -557,  -623,   nil,    31,   168,   -15,   827,   -14,   118,
   218,   116,   -24,   440,  -177,  1196,   942,   137,  1364,    11,
   nil,   210,   nil,  -153,    23,  -227,  -380,     0,    66,    52,
   nil,    -3,    51,  -268,   609,  -279,   -23,   -64,     0,   nil,
    47,   -39,     0,   747,   -11,  -237,    91,    18,   -14,  -246,
  -327,  -240,  -363,  -255,   -24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   176,   186,   162,   nil,   155,  -319,  -636,  -469,
  -346,   109,  -193,    11,  -535,   100,  -221,    36,    33,  -595,
    58,  -588,  -454,  -748,  -455,  -233,  -691,    72,  -449,  -225,
  -441,  -757,   103,  -156,   -40,  -385,  -487,   -50,  -496,  -256,
  -525,  -427,   161,   -57,   nil,   -80,   -80,  -718,  -380,  -479,
  -588,   nil,   nil,   nil,   137,   136,    82,   137,  -170,  -305,
   148,  -524,  -370,  -370,   nil,  -497,   nil,  -592,   nil,  -591,
   nil,  -532,  -647,  -591,  -591,  -330,   nil,  -510,  -259,  -453,
   nil,  -758,   nil,   nil,  -396 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   350,   276,   nil,   530,
   nil,   810,   nil,   275,   nil,   nil,   nil,   210,    16,    11,
   211,   300,   nil,   209,   nil,   253,    15,   nil,    19,    20,
    21,   nil,    25,   677,   nil,   nil,   nil,   290,    29,   nil,
    31,    34,    33,   nil,   207,   360,   nil,   116,   432,   115,
    69,   nil,    42,   308,   310,   nil,   311,   430,   nil,   nil,
   625,   479,   251,   nil,   nil,   266,    43,    44,    45,    46,
    47,    48,    49,   nil,   267,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   565,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   323,   322,   693,   325,   nil,
   326,   327,   nil,   nil,   436,   nil,   nil,   nil,   nil,   nil,
   nil,    68,    70,    71,    72,   nil,   nil,   nil,   nil,   602,
   nil,   nil,   nil,   nil,   392,   733,   736,   741,   738,   739,
   740,   886,   nil,   nil,   744,   334,   329,   336,   nil,   559,
   560,   748,   339,   342,   258 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 167, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  3, 147, :_reduce_25,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  5, 147, :_reduce_29,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_33,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  1, 147, :_reduce_none,
  1, 166, :_reduce_none,
  3, 166, :_reduce_38,
  3, 166, :_reduce_39,
  2, 166, :_reduce_40,
  2, 166, :_reduce_41,
  1, 166, :_reduce_none,
  1, 156, :_reduce_none,
  1, 158, :_reduce_none,
  1, 158, :_reduce_none,
  2, 158, :_reduce_46,
  2, 158, :_reduce_47,
  2, 158, :_reduce_48,
  1, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  4, 175, :_reduce_none,
  2, 169, :_reduce_53,
  3, 169, :_reduce_none,
  4, 169, :_reduce_55,
  5, 169, :_reduce_none,
  4, 169, :_reduce_57,
  5, 169, :_reduce_none,
  2, 169, :_reduce_59,
  2, 169, :_reduce_60,
  1, 159, :_reduce_61,
  3, 159, :_reduce_62,
  1, 179, :_reduce_63,
  3, 179, :_reduce_64,
  1, 178, :_reduce_65,
  2, 178, :_reduce_66,
  3, 178, :_reduce_67,
  5, 178, :_reduce_none,
  2, 178, :_reduce_69,
  4, 178, :_reduce_none,
  2, 178, :_reduce_71,
  1, 178, :_reduce_72,
  3, 178, :_reduce_none,
  1, 181, :_reduce_74,
  3, 181, :_reduce_75,
  2, 180, :_reduce_76,
  3, 180, :_reduce_77,
  1, 183, :_reduce_none,
  3, 183, :_reduce_none,
  1, 182, :_reduce_80,
  4, 182, :_reduce_81,
  3, 182, :_reduce_82,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  3, 182, :_reduce_none,
  2, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 157, :_reduce_88,
  4, 157, :_reduce_89,
  3, 157, :_reduce_90,
  3, 157, :_reduce_91,
  3, 157, :_reduce_92,
  3, 157, :_reduce_93,
  2, 157, :_reduce_94,
  1, 157, :_reduce_none,
  1, 185, :_reduce_none,
  2, 186, :_reduce_97,
  1, 186, :_reduce_98,
  3, 186, :_reduce_99,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_103,
  1, 187, :_reduce_104,
  1, 154, :_reduce_105,
  1, 154, :_reduce_none,
  1, 155, :_reduce_107,
  3, 155, :_reduce_108,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  3, 168, :_reduce_183,
  5, 168, :_reduce_184,
  3, 168, :_reduce_185,
  6, 168, :_reduce_186,
  5, 168, :_reduce_187,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  5, 168, :_reduce_none,
  4, 168, :_reduce_none,
  3, 168, :_reduce_none,
  3, 168, :_reduce_193,
  3, 168, :_reduce_194,
  3, 168, :_reduce_195,
  3, 168, :_reduce_196,
  3, 168, :_reduce_197,
  3, 168, :_reduce_198,
  3, 168, :_reduce_199,
  3, 168, :_reduce_200,
  4, 168, :_reduce_201,
  4, 168, :_reduce_202,
  2, 168, :_reduce_203,
  2, 168, :_reduce_204,
  3, 168, :_reduce_205,
  3, 168, :_reduce_206,
  3, 168, :_reduce_207,
  3, 168, :_reduce_208,
  3, 168, :_reduce_209,
  3, 168, :_reduce_210,
  3, 168, :_reduce_211,
  3, 168, :_reduce_212,
  3, 168, :_reduce_213,
  3, 168, :_reduce_214,
  3, 168, :_reduce_215,
  3, 168, :_reduce_216,
  3, 168, :_reduce_217,
  2, 168, :_reduce_218,
  2, 168, :_reduce_219,
  3, 168, :_reduce_220,
  3, 168, :_reduce_221,
  3, 168, :_reduce_222,
  3, 168, :_reduce_223,
  3, 168, :_reduce_224,
  5, 168, :_reduce_225,
  1, 168, :_reduce_none,
  1, 165, :_reduce_none,
  1, 162, :_reduce_228,
  2, 162, :_reduce_229,
  2, 162, :_reduce_230,
  4, 162, :_reduce_231,
  2, 162, :_reduce_232,
  3, 197, :_reduce_233,
  2, 199, :_reduce_none,
  1, 200, :_reduce_235,
  1, 200, :_reduce_none,
  1, 198, :_reduce_237,
  1, 198, :_reduce_none,
  2, 198, :_reduce_239,
  4, 198, :_reduce_240,
  2, 198, :_reduce_241,
  1, 171, :_reduce_242,
  2, 171, :_reduce_243,
  2, 171, :_reduce_244,
  4, 171, :_reduce_245,
  1, 171, :_reduce_246,
  4, 203, :_reduce_none,
  1, 203, :_reduce_none,
  0, 205, :_reduce_249,
  2, 174, :_reduce_250,
  1, 204, :_reduce_none,
  2, 204, :_reduce_252,
  3, 204, :_reduce_253,
  2, 202, :_reduce_254,
  2, 201, :_reduce_255,
  0, 201, :_reduce_256,
  1, 194, :_reduce_257,
  2, 194, :_reduce_258,
  3, 194, :_reduce_259,
  4, 194, :_reduce_260,
  3, 164, :_reduce_261,
  4, 164, :_reduce_262,
  2, 164, :_reduce_263,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  0, 227, :_reduce_273,
  4, 192, :_reduce_274,
  4, 192, :_reduce_275,
  3, 192, :_reduce_276,
  3, 192, :_reduce_277,
  2, 192, :_reduce_278,
  4, 192, :_reduce_279,
  3, 192, :_reduce_280,
  3, 192, :_reduce_281,
  1, 192, :_reduce_282,
  4, 192, :_reduce_283,
  3, 192, :_reduce_284,
  1, 192, :_reduce_285,
  5, 192, :_reduce_286,
  4, 192, :_reduce_287,
  3, 192, :_reduce_288,
  2, 192, :_reduce_289,
  1, 192, :_reduce_none,
  2, 192, :_reduce_291,
  2, 192, :_reduce_292,
  6, 192, :_reduce_293,
  6, 192, :_reduce_294,
  0, 228, :_reduce_295,
  0, 229, :_reduce_296,
  7, 192, :_reduce_297,
  0, 230, :_reduce_298,
  0, 231, :_reduce_299,
  7, 192, :_reduce_300,
  5, 192, :_reduce_301,
  4, 192, :_reduce_302,
  5, 192, :_reduce_303,
  0, 232, :_reduce_304,
  0, 233, :_reduce_305,
  9, 192, :_reduce_306,
  0, 234, :_reduce_307,
  6, 192, :_reduce_308,
  0, 235, :_reduce_309,
  0, 236, :_reduce_310,
  8, 192, :_reduce_311,
  0, 237, :_reduce_312,
  0, 238, :_reduce_313,
  6, 192, :_reduce_314,
  0, 239, :_reduce_315,
  6, 192, :_reduce_316,
  0, 240, :_reduce_317,
  0, 241, :_reduce_318,
  9, 192, :_reduce_319,
  1, 192, :_reduce_320,
  1, 192, :_reduce_321,
  1, 192, :_reduce_322,
  1, 192, :_reduce_none,
  1, 161, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  2, 217, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 216, :_reduce_332,
  3, 242, :_reduce_333,
  2, 242, :_reduce_334,
  1, 242, :_reduce_none,
  1, 242, :_reduce_none,
  3, 243, :_reduce_337,
  3, 243, :_reduce_338,
  1, 218, :_reduce_339,
  5, 218, :_reduce_340,
  1, 151, :_reduce_none,
  2, 151, :_reduce_342,
  1, 245, :_reduce_343,
  3, 245, :_reduce_344,
  3, 246, :_reduce_345,
  1, 176, :_reduce_none,
  2, 176, :_reduce_347,
  1, 176, :_reduce_348,
  3, 176, :_reduce_349,
  1, 247, :_reduce_350,
  2, 249, :_reduce_351,
  1, 249, :_reduce_352,
  6, 244, :_reduce_353,
  4, 244, :_reduce_354,
  4, 244, :_reduce_355,
  2, 244, :_reduce_356,
  2, 244, :_reduce_357,
  4, 244, :_reduce_358,
  2, 244, :_reduce_359,
  2, 244, :_reduce_360,
  1, 244, :_reduce_361,
  0, 253, :_reduce_362,
  5, 252, :_reduce_363,
  2, 172, :_reduce_364,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 215, :_reduce_367,
  4, 215, :_reduce_368,
  4, 215, :_reduce_369,
  3, 215, :_reduce_370,
  4, 215, :_reduce_371,
  3, 215, :_reduce_372,
  2, 215, :_reduce_373,
  1, 215, :_reduce_374,
  0, 255, :_reduce_375,
  5, 214, :_reduce_376,
  0, 256, :_reduce_377,
  5, 214, :_reduce_378,
  0, 258, :_reduce_379,
  6, 220, :_reduce_380,
  1, 257, :_reduce_381,
  1, 257, :_reduce_none,
  6, 150, :_reduce_383,
  0, 150, :_reduce_384,
  1, 259, :_reduce_385,
  1, 259, :_reduce_none,
  1, 259, :_reduce_none,
  2, 260, :_reduce_388,
  1, 260, :_reduce_389,
  2, 152, :_reduce_390,
  1, 152, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 206, :_reduce_none,
  1, 207, :_reduce_395,
  1, 263, :_reduce_none,
  2, 263, :_reduce_397,
  3, 264, :_reduce_398,
  1, 264, :_reduce_399,
  3, 208, :_reduce_400,
  3, 209, :_reduce_401,
  3, 210, :_reduce_402,
  3, 210, :_reduce_403,
  1, 267, :_reduce_404,
  3, 267, :_reduce_405,
  1, 268, :_reduce_406,
  2, 268, :_reduce_407,
  3, 211, :_reduce_408,
  3, 211, :_reduce_409,
  1, 270, :_reduce_410,
  3, 270, :_reduce_411,
  1, 265, :_reduce_412,
  2, 265, :_reduce_413,
  1, 266, :_reduce_414,
  2, 266, :_reduce_415,
  1, 269, :_reduce_416,
  0, 272, :_reduce_417,
  3, 269, :_reduce_418,
  0, 273, :_reduce_419,
  4, 269, :_reduce_420,
  1, 271, :_reduce_421,
  1, 271, :_reduce_422,
  1, 271, :_reduce_423,
  1, 271, :_reduce_none,
  2, 190, :_reduce_425,
  1, 190, :_reduce_426,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  1, 274, :_reduce_none,
  3, 262, :_reduce_431,
  1, 261, :_reduce_432,
  1, 261, :_reduce_433,
  2, 261, :_reduce_434,
  2, 261, :_reduce_435,
  2, 261, :_reduce_436,
  2, 261, :_reduce_437,
  1, 184, :_reduce_438,
  1, 184, :_reduce_439,
  1, 184, :_reduce_440,
  1, 184, :_reduce_441,
  1, 184, :_reduce_442,
  1, 184, :_reduce_443,
  1, 184, :_reduce_444,
  1, 184, :_reduce_445,
  1, 184, :_reduce_446,
  1, 184, :_reduce_447,
  1, 184, :_reduce_448,
  1, 212, :_reduce_449,
  1, 160, :_reduce_450,
  1, 163, :_reduce_451,
  1, 163, :_reduce_none,
  1, 222, :_reduce_453,
  3, 222, :_reduce_454,
  2, 222, :_reduce_455,
  4, 224, :_reduce_456,
  2, 224, :_reduce_457,
  1, 276, :_reduce_none,
  1, 276, :_reduce_none,
  2, 277, :_reduce_460,
  1, 277, :_reduce_461,
  1, 278, :_reduce_462,
  2, 279, :_reduce_463,
  1, 279, :_reduce_464,
  1, 280, :_reduce_465,
  3, 280, :_reduce_466,
  4, 281, :_reduce_467,
  2, 281, :_reduce_468,
  2, 281, :_reduce_469,
  1, 281, :_reduce_470,
  2, 283, :_reduce_471,
  0, 283, :_reduce_472,
  6, 275, :_reduce_473,
  4, 275, :_reduce_474,
  4, 275, :_reduce_475,
  2, 275, :_reduce_476,
  4, 275, :_reduce_477,
  2, 275, :_reduce_478,
  2, 275, :_reduce_479,
  1, 275, :_reduce_480,
  0, 275, :_reduce_481,
  1, 285, :_reduce_none,
  1, 285, :_reduce_483,
  1, 286, :_reduce_484,
  1, 286, :_reduce_485,
  1, 286, :_reduce_486,
  1, 286, :_reduce_487,
  1, 287, :_reduce_488,
  3, 287, :_reduce_489,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 289, :_reduce_492,
  3, 289, :_reduce_none,
  1, 290, :_reduce_494,
  3, 290, :_reduce_495,
  1, 288, :_reduce_none,
  4, 288, :_reduce_none,
  3, 288, :_reduce_none,
  2, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 250, :_reduce_501,
  3, 250, :_reduce_502,
  3, 291, :_reduce_503,
  1, 284, :_reduce_504,
  3, 284, :_reduce_505,
  1, 292, :_reduce_none,
  1, 292, :_reduce_none,
  2, 251, :_reduce_508,
  1, 251, :_reduce_509,
  1, 293, :_reduce_none,
  1, 293, :_reduce_none,
  2, 248, :_reduce_512,
  2, 282, :_reduce_513,
  0, 282, :_reduce_514,
  1, 225, :_reduce_515,
  4, 225, :_reduce_516,
  0, 213, :_reduce_517,
  2, 213, :_reduce_518,
  1, 196, :_reduce_519,
  3, 196, :_reduce_520,
  3, 294, :_reduce_521,
  2, 294, :_reduce_522,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  1, 254, :_reduce_none,
  1, 226, :_reduce_none,
  1, 226, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 191, :_reduce_none,
  1, 191, :_reduce_none,
  0, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 195, :_reduce_none,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 193, :_reduce_546 ]

racc_reduce_n = 547

racc_shift_n = 943

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tDSTAR => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tDSTAR",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_kwrest",
  "f_label",
  "f_kw",
  "f_kwarg",
  "args_tail",
  "opt_f_block_arg",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_201(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_202(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 234 omitted

def _reduce_235(val, _values, result)
                      result = []
                    
    result
end

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_243(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_246(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 247 omitted

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_250(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 251 omitted

def _reduce_252(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_254(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_255(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_257(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_260(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_261(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_262(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_263(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

def _reduce_273(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_274(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_283(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_284(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_285(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_286(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 290 omitted

def _reduce_291(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_299(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_301(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_302(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_304(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_305(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_306(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_312(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_313(val, _values, result)
                      # ...
                    
    result
end

def _reduce_314(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_318(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_319(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_321(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_322(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

# reduce 331 omitted

def _reduce_332(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_333(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_334(val, _values, result)
                      result = nil
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

def _reduce_337(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_338(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_339(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 341 omitted

def _reduce_342(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_343(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_344(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_345(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 346 omitted

def _reduce_347(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_348(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_349(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_350(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_351(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_352(val, _values, result)
                      nil
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_359(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_361(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_362(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_364(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 365 omitted

# reduce 366 omitted

def _reduce_367(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_371(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_373(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_375(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_377(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_378(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_379(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_380(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 382 omitted

def _reduce_383(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_384(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_385(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 386 omitted

# reduce 387 omitted

def _reduce_388(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_389(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_390(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 391 omitted

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 396 omitted

def _reduce_397(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_398(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_399(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_402(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_406(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_408(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_409(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_411(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_414(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_415(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_416(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_418(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_419(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_420(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_421(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_423(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 424 omitted

def _reduce_425(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_426(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 427 omitted

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

def _reduce_431(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_432(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_435(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_436(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_437(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_438(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_446(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_447(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_448(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_451(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 452 omitted

def _reduce_453(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_454(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_455(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_456(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_457(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 458 omitted

# reduce 459 omitted

def _reduce_460(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_464(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_465(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_466(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_467(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_480(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_481(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 482 omitted

def _reduce_483(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_484(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_485(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_486(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_487(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_488(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_489(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 490 omitted

# reduce 491 omitted

def _reduce_492(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 493 omitted

def _reduce_494(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_495(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 496 omitted

# reduce 497 omitted

# reduce 498 omitted

# reduce 499 omitted

# reduce 500 omitted

def _reduce_501(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_502(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_503(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_504(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_505(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 506 omitted

# reduce 507 omitted

def _reduce_508(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_509(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 510 omitted

# reduce 511 omitted

def _reduce_512(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_513(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_514(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_515(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_516(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_517(val, _values, result)
                      result = []
                    
    result
end

def _reduce_518(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_519(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_520(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_521(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_522(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

# reduce 537 omitted

# reduce 538 omitted

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

# reduce 542 omitted

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

def _reduce_546(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
