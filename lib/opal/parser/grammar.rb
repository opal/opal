#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'64,65,66,258,52,-97,-102,642,58,59,258,258,598,62,914,60,61,63,28,29',
'67,68,-100,907,-95,206,207,27,26,25,91,90,92,93,-70,468,220,102,677',
'-103,568,630,101,42,635,228,95,94,85,51,87,86,88,-98,89,96,97,801,82',
'83,677,39,40,915,-97,677,206,207,641,620,-82,676,424,-96,253,253,225',
'426,425,835,227,226,74,211,-98,-103,215,257,-101,53,75,55,598,676,257',
'257,-102,41,676,-474,632,631,598,916,-99,219,-474,-96,-93,-89,80,74',
'76,77,78,79,-97,917,-97,75,81,-97,-103,102,-91,597,-87,57,101,-101,54',
'64,65,66,8,52,38,84,677,58,59,-94,567,598,62,715,60,61,63,28,29,67,68',
'311,547,-89,206,207,27,26,25,91,90,92,93,-572,-88,18,604,-571,605,676',
'619,7,42,-89,9,95,94,85,51,87,86,88,908,89,96,97,598,82,83,102,39,40',
'-572,-98,101,-98,-479,-101,-98,-101,546,102,-101,597,-90,-102,101,-102',
'673,-89,-102,102,37,597,938,31,101,-99,53,-89,55,-95,33,-477,630,-100',
'41,755,-476,-92,-477,-103,-97,-103,19,-476,-103,541,542,80,74,76,77',
'78,79,755,-95,919,75,81,-102,-87,102,102,597,416,57,101,101,54,64,65',
'66,813,52,38,84,102,58,59,814,-265,101,62,-92,60,61,63,295,296,67,68',
'-93,632,631,628,-94,291,292,298,91,90,92,93,-571,630,220,102,-475,597',
'699,-91,101,42,923,-475,95,94,85,51,87,86,88,-98,89,96,97,-87,82,83',
'-100,39,40,-88,102,838,754,605,-99,101,-99,543,-95,-99,-95,253,-100',
'-95,-100,-572,-92,-100,102,211,754,102,215,101,-93,53,101,55,-94,-87',
'632,631,637,41,755,-472,538,616,-470,-87,-90,219,-472,-91,742,-470,80',
'74,76,77,78,79,-92,206,207,75,81,311,560,-572,-93,559,-92,57,-94,-88',
'54,64,65,66,-93,52,38,84,-94,58,59,262,630,-91,62,932,60,61,63,295,296',
'67,68,-91,933,615,341,537,291,292,298,91,90,92,93,-88,338,220,546,-571',
'-90,630,206,207,42,-88,228,95,94,85,51,87,86,88,-467,89,96,97,539,82',
'83,-467,39,40,935,102,-473,754,356,355,101,632,631,-473,102,341,-90',
'225,-93,101,795,227,226,630,211,338,-90,215,-102,530,53,586,55,348,346',
'345,630,347,41,102,632,631,633,625,101,339,219,865,838,529,626,80,74',
'76,77,78,79,356,355,102,75,81,528,586,101,348,346,345,57,347,-69,54',
'64,65,66,8,52,38,84,941,58,59,632,631,628,62,943,60,61,63,28,29,67,68',
'339,632,631,643,652,27,26,25,91,90,92,93,944,748,18,653,204,311,800',
'560,7,42,562,9,95,94,85,51,87,86,88,520,89,96,97,560,82,83,562,39,40',
'304,305,560,-89,930,562,586,518,348,346,345,341,347,-98,-91,-94,311',
'-88,516,998,37,338,957,31,-100,-103,53,-97,55,-268,33,249,250,98,41',
'206,207,203,463,251,865,838,19,503,350,464,216,80,74,76,77,78,79,356',
'355,470,75,81,206,207,412,413,-479,469,57,356,355,54,64,65,66,963,52',
'38,84,467,58,59,849,972,849,62,849,60,61,63,28,29,67,68,339,976,466',
'932,465,27,26,25,91,90,92,93,-87,427,18,-291,-291,979,980,414,985,42',
'-95,-291,95,94,85,51,87,86,88,578,89,96,97,987,82,83,989,39,40,991,586',
'993,348,346,345,586,347,348,346,345,341,347,897,898,993,403,899,96,97',
'211,338,993,215,228,472,53,400,55,-291,1003,-291,311,932,41,303,1011',
'203,201,589,302,247,19,721,350,202,860,80,74,76,77,78,79,356,355,225',
'75,81,205,227,226,223,224,198,57,849,932,54,64,65,66,1026,52,38,84,1027',
'58,59,993,993,993,62,702,60,61,63,295,296,67,68,339,704,199,-82,200',
'291,292,298,91,90,92,93,701,692,220,538,535,689,688,552,715,42,311,536',
'95,94,85,51,87,86,88,1032,89,96,97,721,82,83,722,39,40,311,586,724,348',
'346,345,586,347,348,346,345,341,347,961,729,348,346,345,743,347,211',
'338,744,215,228,746,53,750,55,534,605,537,758,228,41,228,228,538,549',
'589,228,664,219,253,350,550,592,80,74,76,77,78,79,356,355,225,75,81',
'797,227,226,223,224,-266,57,651,650,54,64,65,66,649,52,38,84,503,58',
'59,-265,503,647,62,503,60,61,63,295,296,67,68,339,644,466,640,465,291',
'292,298,91,90,92,93,636,816,220,538,616,817,824,518,520,42,612,742,95',
'94,85,51,87,86,88,611,89,96,97,610,82,83,715,39,40,832,586,416,348,346',
'345,586,347,348,346,345,341,347,961,253,348,346,345,253,347,211,338',
'833,215,253,715,53,1033,55,615,228,537,228,838,41,594,843,-336,-336',
'589,845,846,219,847,350,-336,592,80,74,76,77,78,79,356,355,849,75,81',
'104,105,106,107,108,578,57,852,854,54,64,65,66,849,52,38,84,593,58,59',
'858,861,838,62,869,60,61,63,295,296,67,68,339,870,-336,872,-336,291',
'292,298,91,90,92,93,583,581,220,538,1001,579,578,873,575,42,-571,1002',
'95,94,85,51,87,86,88,875,89,96,97,574,82,83,571,39,40,520,586,564,348',
'346,345,586,347,348,346,345,341,347,104,105,106,107,108,563,884,211',
'338,578,215,887,889,53,891,55,1000,893,609,895,-267,41,311,311,538,607',
'589,197,196,219,109,350,608,228,80,74,76,77,78,79,356,355,548,75,81',
'104,105,106,107,108,910,57,911,311,54,64,65,66,913,52,38,84,,58,59,',
',,62,,60,61,63,295,296,67,68,339,,606,,609,291,292,298,91,90,92,93,',
',220,-289,-289,,,,,42,,-289,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,586,,348,346,345,586,347,348,346,345,341,347,,,,,,,,211,338,,215',
',,53,,55,-289,,-289,,,41,,,538,616,589,,,219,,350,614,,80,74,76,77,78',
'79,356,355,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,339,,615,,537,291,292,298,91,90,92,93,,,220,,586',
',348,346,345,42,347,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228',
'586,,348,346,345,586,347,348,346,345,341,347,589,,,,242,243,,211,338',
',215,,,53,,55,,,225,,231,41,227,226,223,224,589,,229,219,230,350,,,80',
'74,76,77,78,79,356,355,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,295,296,67,68,339,,,,,291,292,298,91,90,92,93,,,220',
',586,,348,346,345,42,347,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,228,,,,,,586,,348,346,345,341,347,589,,,,242,243,,211,338,,215,,',
'53,,55,,,225,,231,41,227,226,223,224,,,229,219,230,350,,,80,74,76,77',
'78,79,356,355,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,295,296,67,68,339,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,586,,348,346',
'345,341,347,,,,,242,243,,211,338,,215,,,53,,55,,,225,,231,41,227,226',
'223,224,,,229,219,230,350,,,80,74,76,77,78,79,356,355,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,339,,,',
',291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,228,,,,,,586,,348,346,345,341,347,,,,,242,243,,211',
'338,,215,,,53,,55,,,225,,231,41,227,226,223,224,,,229,219,230,350,,',
'80,74,76,77,78,79,356,355,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,295,296,67,68,339,,,,,291,292,298,91,90,92,93,,,220',
',,,,665,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237',
'238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,246,,-239,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,665,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239',
'234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225',
',231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,-288',
'-288,,75,81,,246,,-288,,,57,,-572,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,-288,',
'-288,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238',
'239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55',
',,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78',
'79,,,,75,81,,246,818,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224',
'235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243',
',211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237',
'238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224',
'235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243',
',211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237',
'238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224',
'235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,228,232,237,238,239,234,236,244,245,240,241,,,221,222,,,242,243',
',211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237',
'238,239,234,236,244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,246,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238,239,234,236',
'244,245,240,241,,,221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41',
'227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246',
',,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',221,222,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224',
'235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81,,246,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,',
'39,40,228,-592,-592,-592,-592,234,236,,,-592,-592,,,,,,,242,243,,211',
',,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,',
',,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,-592,-592,-592',
'-592,234,236,,,-592,-592,,,,,,,242,243,,211,,,215,,,53,,55,,,225,,231',
'41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,6,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,,,-592',
'-592,,,242,243,,37,,,31,,,53,,55,,33,225,,231,41,227,226,223,224,235',
'233,229,19,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,-569,,,,27,26,25,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39',
'40,228,-592,-592,-592,-592,234,236,,,-592,-592,-470,-470,,,,,242,243',
'-470,211,,,215,-569,,53,,55,,271,225,269,231,41,227,226,223,224,235',
'233,229,219,230,-569,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,-470,54',
'-470,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,244,245,240,241,',
',-592,-592,,,242,243,,211,,,215,,,53,,55,,271,225,269,231,41,227,226',
'223,224,235,233,229,219,230,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57',
',,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274',
'89,96,97,,82,83,,39,40,228,232,237,238,239,234,236,,,240,241,,,,,,,242',
'243,,211,,,215,,514,53,,55,,271,225,269,231,41,227,226,223,224,235,233',
'229,219,230,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38',
'84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292',
'298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,228,-592,-592,-592,-592,234,236,,,-592,-592,,,,,,,242,243',
',211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233,229,219,230',
',,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,',
',,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228,232,237,238',
'239,234,236,244,,240,241,,,,,,,242,243,,211,,,215,,,53,,55,,,225,,231',
'41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,228,-592,-592,-592,-592,234,236,,,-592,-592,',
',,,,,242,243,,211,,,215,,,53,,55,,,225,,231,41,227,226,223,224,235,233',
'229,219,230,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,228',
'-592,-592,-592,-592,234,236,,,-592,-592,,,,,,,242,243,,211,,,215,,,53',
',55,,,225,,231,41,227,226,223,224,235,233,229,219,230,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,228,82,83,,39,40,,,,,,,,,,,,242,243,,,,,,,',
'211,,,215,,225,53,231,55,227,226,223,224,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,,,,,,,,,,,,242,243,',
'37,,,281,,,53,,55,,33,225,,,41,227,226,223,224,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61',
'63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,228,,,,,,,,,,,,,,,,,242,243,,37',
',,31,,,53,,55,,33,225,,231,41,227,226,223,224,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,789,,348,346,345,341,347,,,,,,,,,338',
',,,,,,289,,,215,,,53,,55,,,,,,,,350,,,,,,,353,352,356,355,80,74,76,77',
'78,79,,,,75,81,,,,532,,,57,,,54,64,65,66,8,52,299,84,,58,59,,,,62,339',
'60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,281',
',,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27',
'26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88',
',89,96,97,,82,83,,789,,348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,286',
',,53,,55,,,,,,,,350,,,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,8,52,299,84,,58,59,,,,62,339,60,61,63,28,29,67',
'68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88',
',89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,',
'41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,',
'52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,',
'60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,',
',,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,552,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62',
',60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31',
',,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,',
',80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,',
',,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,',
',,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,',
',,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,',
',,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7',
'42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67',
'68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88',
',89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,',
'41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,',
'52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93',
',,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,',
',,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,331,,348,346,345,341,347,,,,,,,,,338,',
',,,,,585,,,215,,,53,,55,,,,,,,,350,,,,,,,353,352,356,355,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,311,52,299,84,,58,59,,,,62,339',
'60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,432,',
',,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90',
'92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,789,',
'348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,286,,,53,,55,,,,,,,,350',
',,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,299,84,,58,59,,,,62,339,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292',
'298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,331,,348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,286,,,53,,55,,',
',,,,,350,326,,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,299,84,,58,59,,,,62,339,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,',
',53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,373,,89,96,97',
',82,83,,789,,348,346,345,341,347,,,,,,,,,338,,,,,,,374,,,215,,,53,,55',
',,,,,,,350,778,,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,8,52,299,84,,58,59,,,,62,339,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,',
',,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,269,,41,,,,,,,,219,,,,,80,272',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,',
',,,,,,,,,,,211,,,215,,,53,,55,,696,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,8,52,,,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42',
',9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,',
',,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,',
',,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295',
'296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292',
'298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,',
',42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67',
'68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
',89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,',
'41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,799,,,,41,,,,',
',,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,-573,-573,-573,',
'-573,38,84,,-573,-573,,,,-573,,-573,-573,-573,-573,-573,-573,-573,,',
',,,-573,-573,-573,-573,-573,-573,-573,,,-573,,,,,,,-573,,,-573,-573',
'-573,-573,-573,-573,-573,-573,-573,-573,-573,,-573,-573,,-573,-573,',
',,,,,,,,,,,,,,,,,,,-573,,,-573,-573,,-573,,-573,,-573,,-573,,-573,,',
',,,,,-573,,,,,-573,-573,-573,-573,-573,-573,,,,-573,-573,,,,,,,-573',
',,-573,,-573,,,,-573,-573,-574,-574,-574,,-574,,,,-574,-574,,,,-574',
',-574,-574,-574,-574,-574,-574,-574,,,,,,-574,-574,-574,-574,-574,-574',
'-574,,,-574,,,,,,,-574,,,-574,-574,-574,-574,-574,-574,-574,-574,-574',
'-574,-574,,-574,-574,,-574,-574,,,,,,,,,,,,,,,,,,,,,-574,,,-574,-574',
',-574,,-574,,-574,,-574,,-574,,,,,,,,-574,,,,,-574,-574,-574,-574,-574',
'-574,,,,-574,-574,,,,,,,-574,,,-574,,-574,,,,-574,-574,64,65,66,,52',
',,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18',
',,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,',
',,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29',
'67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
'274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271',
',,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275',
',,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219',
',,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66',
',52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,',
'54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,',
',,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87',
'86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,271,,,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,',
',54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,',
',,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,',
',,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82',
'83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219',
',,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66',
'8,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93',
',,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61',
'63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53',
',55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,',
',,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,331,,348,346,345,341',
'347,,,,,,,,,338,,,,,,,585,,,215,,,53,,55,,,,,,,,350,,,,,,,353,352,356',
'355,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,299,84,,58',
'59,,,,62,339,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,',
',,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,',
',,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,',
',75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29',
'67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33',
',,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80',
'272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,211,,,215,,,53,,55,,696,,269,,41,,,,,,,,219,,,,,80,272',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68',
',,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41',
',,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,789,,348',
'346,345,341,347,,,,,,,,,338,,,,,,,289,,,286,,,53,,55,,,,,,,,350,,,,',
',,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
',52,299,84,,58,59,,,,62,339,60,61,63,28,29,67,68,,,,,,27,26,25,91,90',
'92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219,,,,',
'80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52',
',,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93',
',,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,696,,269,,41,,,,,,,,219,,,,,80',
'272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,',
',58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,',
'220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59',
',,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,',
',,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,',
',,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29',
'67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88',
'274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271',
',,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275',
',,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291',
'292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,789,,348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,286,,,53,,55',
',,,,,,,350,778,,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,299,84,,58,59,,,,62,339,60,61,63,28,29,67,68,',
',,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41',
',,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38',
'84,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,216,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,',
',,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,',
',,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,',
',,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38',
'84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220',
',,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,',
',,,,,,,,,,,211,,,215,,,53,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76,77,78,79',
',,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85',
'51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,271,,269,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,',
',,,,57,,,54,,275,,,,38,84,64,65,66,8,52,,,,58,59,,,,62,,60,61,63,28',
'29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,281,,,53,,55',
',33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298',
'91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',331,,348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,286,,,53,,55,,285',
',,,,,350,,570,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81,,,,,,,57',
',,54,64,65,66,,52,299,84,,58,59,,,,62,339,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,331,,348,346,345,341,347,,,,,,,,,338,,,,,,,289,,,215,',
',53,,55,,,,,,,,350,,,,,,,353,352,356,355,80,74,76,77,78,79,,,,75,81',
',,,301,,,57,,,54,64,65,66,8,52,299,84,,58,59,,,,62,339,60,61,63,28,29',
'67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86',
'88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33',
',,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66',
'8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92',
'93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,',
',,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95',
'94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,',
',57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,',
',,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,',
',,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,',
',,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76',
'77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60',
'61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,',
'53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54',
'64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25',
'91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,,,,41,,,,,,,,219',
',,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66',
',52,,,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91,90,92',
'93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274,89,96,97,,82,83,,39,40',
',,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,272',
'76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,,,,38,84,64,65,66,,52,,,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,',
'42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,',
',,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,',
',,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,',
',,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,',
',,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,',
'75,81,102,,,,,101,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85',
'51,87,86,88,,89,96,97,,82,83,,331,,348,346,345,341,347,,,,,,,,,338,',
',,,,,368,,,31,,,53,,55,,33,,,,,,350,,,,,,,353,352,356,355,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,299,84,,58,59,,,,62,339,60',
'61,63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95',
'94,85,51,87,86,373,,89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,379,,,374,,',
'215,,,53,,55,,,,,,,,,,,,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,',
',54,64,65,66,8,52,299,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27',
'26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,',
'82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19',
',,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58',
'59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7',
'42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,',
',,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75',
'81,,,,,,,57,,,54,-568,-568,-568,,-568,38,84,,-568,-568,,,,-568,,-568',
'-568,-568,-568,-568,-568,-568,,-568,,,,-568,-568,-568,-568,-568,-568',
'-568,,,-568,,,,,,,-568,,,-568,-568,-568,-568,-568,-568,-568,-568,-568',
'-568,-568,,-568,-568,,-568,-568,,,,,,,,,,,,,,,,,,,,,-568,,,-568,-568',
',-568,,-568,,-568,,-568,,-568,,,,,,,,-568,,-568,,,-568,-568,-568,-568',
'-568,-568,,,,-568,-568,,,,,,,-568,,,-568,,-568,,,,-568,-568,-569,-569',
'-569,,-569,,,,-569,-569,,,,-569,,-569,-569,-569,-569,-569,-569,-569',
',-569,,,,-569,-569,-569,-569,-569,-569,-569,,,-569,,,,,,,-569,,,-569',
'-569,-569,-569,-569,-569,-569,-569,-569,-569,-569,,-569,-569,,-569,-569',
',,,,,,,,,,,,,,,,,,,,-569,,,-569,-569,,-569,,-569,,-569,,-569,,-569,',
',,,,,,-569,,-569,,,-569,-569,-569,-569,-569,-569,,,,-569,-569,,,,,,',
'-569,,,-569,,-569,,,,-569,-569,64,65,66,8,52,,,,58,59,,,,62,,60,61,63',
'28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,,9,95,94,85,51',
'87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55',
',33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64',
'65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91',
'90,92,93,,,18,,,,,,7,42,6,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74',
'76,77,78,79,,,,75,81,,,,,,416,57,,,54,64,65,66,,52,38,84,,58,59,,,,62',
',60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94',
'85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215',
',,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,',
',54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,',
',,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,',
',95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,',
',,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,',
',27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97',
',82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,',
'19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84',
',58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,',
',,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,',
',,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,',
',,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59,,,,62,,60,61,63,28',
'29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42,6,9,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,37,,,31,,,53,,55,',
'33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65',
'66,,52,38,84,,58,59,,,,62,,60,61,63,295,296,67,68,,,,,,291,292,298,91',
'90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39',
'40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,696,,,,41,,,,,,,,219,,,,',
'80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,,,,,7,42',
',9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,',
'37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89',
'96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,432,,,,41',
',,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52',
'38,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,',
',220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,',
',,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,,,80,74,76,77,78',
'79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63',
'28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87',
'86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53',
',55,,271,,,,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,',
',54,,275,,,,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,274',
'89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,271,',
',,41,,,,,,,,219,,,,,80,272,76,77,78,79,,,,75,81,,,,,,,57,,,54,,275,',
',,38,84,64,65,66,,52,,,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26',
'25,91,90,92,93,,,220,,,,,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83',
',39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,219,,,',
',80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59',
',,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,220,,,,,,,42',
',,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211',
',,215,,,53,,55,,432,,,,41,,,,,,,,219,,,,,80,74,76,77,78,79,,,,75,81',
',,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,28,29,67,68',
',,,,,27,26,25,91,90,92,93,,,18,,,,,,,42,,,95,94,85,51,87,86,88,,89,96',
'97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,,215,,,53,,55,,,,,,41,,,,',
',,,19,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84',
',58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93,,,18,,',
',,,,42,,,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,',
',,,,,,211,,,215,,,53,,55,,,,,,41,,,,,,,,19,,,,,80,74,76,77,78,79,,,',
'75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61,63,295,296',
'67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,293,,,95,94,85,51,87',
'86,88,,89,96,97,,82,83,,,,,,,,,,,,,,,,,,,,,,,,968,,,215,,,53,,55,,,',
',,,,,,,,,,,,,,,80,74,76,77,78,79,,,,75,81,,,,,,,57,,,54,64,65,66,8,52',
'299,84,,58,59,,,,62,,60,61,63,28,29,67,68,,,,,,27,26,25,91,90,92,93',
',,18,,,,,,7,42,,9,95,94,85,51,87,86,88,,89,96,97,,82,83,,39,40,,,,,',
',,,,,,,,,,,,,,,37,,,31,,,53,,55,,33,,,,41,,,,,,,,19,,,,,80,74,76,77',
'78,79,,,,75,81,,,,,,,57,,,54,64,65,66,,52,38,84,,58,59,,,,62,,60,61',
'63,295,296,67,68,,,,,,291,292,298,91,90,92,93,,,220,,,,,,,42,,,95,94',
'85,51,87,86,88,274,89,96,97,,82,83,,39,40,,,,,,,,,,,,,,,,,,,,,211,,',
'215,,,53,,55,,,,269,,41,,,,,,,,219,,,,-575,80,272,76,77,78,79,-575,-575',
'-575,75,81,,-575,-575,,-575,,57,,,54,,275,,-575,,38,84,,,,,,,,-575,-575',
',-575,-575,-575,-575,-575,,,,,,,,,,,,,,,,,,,,,,-575,-575,-575,-575,-575',
'-575,-575,-575,-575,-575,-575,-575,-575,-575,-575,,,-575,-575,-575,',
'658,,,,-575,,,,,,-575,,-575,,-575,-575,-575,-575,-575,-575,-575,,-575',
'-575,-575,,,,,,,,,,,,,-575,-575,,-90,,-575,,-288,-575,,-575,,,-99,-288',
'-288,-288,,,-288,-288,-288,,-288,,,,,,,,,,-288,-288,,,,,,,,,-288,-288',
',-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,',
'661,-288,,,-288,,-288,,-288,,-288,,-288,,-288,-288,-288,-288,-288,-288',
'-288,,-288,,-288,,,,,,,,,,,,,-288,-288,-288,-288,,-288,,-288,-288,,-288',
',,-101,-288,-288,-288,,,,-288,-288,,-288,,,,,,,,,,,,,,,,,,,,-288,-288',
',-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,-288,-288,-288,-288,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288,-288,-288,',
'661,,,,-288,,,,,,-288,,-288,,-288,-288,-288,-288,-288,-288,-288,,-288',
',-288,,,,,,,,,,,,,-288,-288,,-92,,-288,,-575,-288,,-288,,,-101,-575',
'-575,-575,,,-575,-575,-575,,-575,,,,,,,,,-575,-575,-575,,,,,,,,,-575',
'-575,,-575,-575,-575,-575,-575,,,,,,,,,,,,,,,,,,,,,,-575,-575,-575,-575',
'-575,-575,-575,-575,-575,-575,-575,-575,-575,-575,-575,,,-575,-575,-575',
',815,-575,,,-575,,-575,,-575,,-575,,-575,,-575,-575,-575,-575,-575,-575',
'-575,,-575,-575,-575,,,,,,,,,,,,,-575,-575,-575,-575,,-575,,-297,-575',
',-575,,,-99,-297,-297,-297,,,-297,-297,-297,,-297,,,,,,,,,,-297,-297',
',,,,,,,,-297,-297,,-297,-297,-297,-297,-297,,,,,,,,,,,,,,,,,,,,,,-297',
'-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297,-297',
',,-297,-297,-297,,,-297,,262,-297,,-297,,-297,,-297,,-297,,-297,-297',
'-297,-297,-297,-297,-297,,-297,,-297,,,,,,,,,,,,,-297,-297,-297,-297',
'-402,-297,,,-297,,-297,-402,-402,-402,,,-402,-402,-402,,-402,,,,,,,',
',-402,-402,-402,,,,,,,,,-402,-402,,-402,-402,-402,-402,-402,,,,,,,,',
',,,,,,,,,,,,,-402,-402,-402,-402,-402,-402,-402,-402,-402,-402,-402',
'-402,-402,-402,-402,,,-402,-402,-402,,,-402,,253,-402,,-402,,-402,,-402',
',-402,,-402,-402,-402,-402,-402,-402,-402,,-402,-402,-402,,,,,,,,,,',
',,-402,-402,-402,-402,-591,-402,,,-402,,-402,-591,-591,-591,,,-591,-591',
'-591,,-591,,,,,,,,,-591,-591,-591,,,,,,,,,-591,-591,,-591,-591,-591',
'-591,-591,,,,,,,,,,,,,,,,,,,,,,-591,-591,-591,-591,-591,-591,-591,-591',
'-591,-591,-591,-591,-591,-591,-591,,,-591,-591,-591,,,-591,,253,-591',
',-591,,-591,,-591,,-591,,-591,-591,-591,-591,-591,-591,-591,,-591,-591',
'-591,,,,,,,,,,,,,-591,-591,-591,-591,-591,-591,,,-591,,-591,-591,-591',
'-591,,,-591,-591,-591,,-591,,,,,,,,,-591,-591,-591,,,,,,,,,-591,-591',
',-591,-591,-591,-591,-591,,,,,,,,,,,,,,,,,,,,,,-591,-591,-591,-591,-591',
'-591,-591,-591,-591,-591,-591,-591,-591,-591,-591,,,-591,-591,-591,',
',-591,,253,-591,,-591,,-591,,-591,,-591,,-591,-591,-591,-591,-591,-591',
'-591,,-591,-591,-591,,,,,,,,,,,,,-591,-591,-591,-591,-280,-591,,,-591',
',-591,-280,-280,-280,,,-280,-280,-280,,-280,,,,,,,,,,-280,-280,-280',
',,,,,,,-280,-280,,-280,-280,-280,-280,-280,,,,,,,,,,,,,,,,,,,,,,-280',
'-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280,-280',
',,-280,-280,-280,,,-280,,,-280,,-280,,-280,,-280,,-280,,-280,-280,-280',
'-280,-280,-280,-280,,-280,,-280,,,,,,,,,,,,,-280,-280,-280,-280,-591',
'-280,,-280,-280,,-280,-591,-591,-591,,,-591,-591,-591,,-591,,,,,,,,',
',-591,,,,,,,,,,-591,-591,,-591,-591,-591,-591,-591,,,,,,,,,,,,-591,',
',,,,,-591,-591,-591,,,-591,-591,-591,,-591,,,,,-591,-591,,,,-591,,,-591',
',,,,253,-591,-591,-591,,-591,-591,-591,-591,-591,,,,,,,,,,,,-591,,,',
',,,,,,,,,-591,,-591,,,-591,,,-591,-591,,-591,,,,,-591,,-591,-591,-591',
'253,-591,-591,-591,-591,,-591,,,,,,,,,,-591,,,,,-591,,,,,-591,-591,',
'-591,-591,-591,-591,-591,-591,,-591,,,-591,668,448,,,669,,,,,,,,,144',
'145,141,123,124,125,132,129,131,,,126,127,-591,-591,,,146,147,133,134',
'-591,,,,,253,-591,,,,,138,137,,122,143,140,139,135,136,130,128,120,142',
'121,,-591,148,,,,,,,,,,,,-591,,-591,,,-591,158,169,159,182,155,175,165',
'164,190,193,180,163,162,157,183,191,192,167,156,170,174,176,168,161',
',,,177,184,179,178,171,181,166,154,173,172,185,186,187,188,189,153,160',
'151,152,149,150,112,114,,,113,,,,,,,,,144,145,141,123,124,125,132,129',
'131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140,139',
'135,136,130,128,120,142,121,,,148,80,,,,,,,,,,81,158,169,159,182,155',
'175,165,164,190,193,180,163,162,157,183,191,192,167,156,170,174,176',
'168,161,,,,177,184,179,178,171,181,166,154,173,172,185,186,187,188,189',
'153,160,151,152,149,150,112,114,111,,113,,,,,,,,,144,145,141,123,124',
'125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122',
'143,140,139,135,136,130,128,120,142,121,,,148,80,,,,,,,,,,81,158,169',
'159,182,155,175,165,164,190,193,180,163,162,157,183,191,192,167,156',
'170,174,176,168,161,,,,177,184,179,178,171,181,166,154,173,172,185,186',
'187,188,189,153,160,151,152,149,150,112,114,,,113,,,,,,,,,144,145,141',
'123,124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138',
'137,,122,143,140,139,135,136,130,128,120,142,121,,,148,80,,,,,,,,,,81',
'158,169,159,182,155,175,165,164,190,193,180,163,162,157,183,191,192',
'167,156,170,174,176,168,161,,,,177,184,179,178,171,181,166,154,173,172',
'185,186,187,188,189,153,160,151,152,149,150,112,114,,,113,,,,,,,,,144',
'145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,',
',,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121,,,148,80,',
',,,,,,,,81,158,169,159,182,155,175,165,164,190,193,180,163,162,157,183',
'191,192,167,156,170,174,176,168,161,,,,177,184,179,178,171,181,166,154',
'173,172,185,186,187,188,189,153,160,151,152,149,150,112,114,,,113,,',
',,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133',
'134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121',
',,148,158,169,159,182,155,175,165,164,190,193,180,163,162,157,183,191',
'192,167,156,170,174,176,168,161,,,,177,184,179,178,171,181,166,154,173',
'172,185,186,187,188,189,153,160,151,152,149,150,112,114,410,409,113',
',411,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147',
'133,134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142',
'121,,,148,158,169,159,182,155,175,165,164,190,193,180,163,162,157,183',
'191,192,167,156,170,174,176,168,161,,,,177,184,179,388,387,389,386,154',
'173,172,185,186,187,188,189,153,160,151,152,384,385,382,114,87,86,383',
',89,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147',
'133,134,,,,,,393,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142',
'121,1020,442,148,,1021,,,,,,,,,144,145,141,123,124,125,132,129,131,',
',126,127,,,,,146,147,133,134,,,,,,253,,,,,,138,137,,122,143,140,139',
'135,136,130,128,120,142,121,451,442,148,,452,,,,,,,,,144,145,141,123',
'124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137',
',122,143,140,139,135,136,130,128,120,142,121,1022,448,148,,1023,,,,',
',,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133,134',
',,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121,770',
'448,148,,768,,,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127,',
',,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128',
'120,142,121,668,448,148,,669,,,,,,,,,144,145,141,123,124,125,132,129',
'131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140,139',
'135,136,130,128,120,142,121,762,442,148,,763,,,,,,,,,144,145,141,123',
'124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,253,,,,,,138',
'137,,122,143,140,139,135,136,130,128,120,142,121,764,448,148,,765,,',
',,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133',
'134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121',
'666,442,148,,667,,,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127',
',,,,146,147,133,134,,,,,,253,,,,,,138,137,,122,143,140,139,135,136,130',
'128,120,142,121,770,448,148,,857,,,,,,,,,144,145,141,123,124,125,132',
'129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140',
'139,135,136,130,128,120,142,121,666,442,148,,667,,,,,,,,,144,145,141',
'123,124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,253,,,,,',
'138,137,,122,143,140,139,135,136,130,128,120,142,121,444,448,148,,446',
',,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133',
'134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121',
'438,442,148,,439,,,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127',
',,,,146,147,133,134,,,,,,253,,,,,,138,137,,122,143,140,139,135,136,130',
'128,120,142,121,451,442,148,,452,,,,,,,,,144,145,141,123,124,125,132',
'129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140',
'139,135,136,130,128,120,142,121,706,442,148,,707,,,,,,,,,144,145,141',
'123,124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,253,,,,,',
'138,137,,122,143,140,139,135,136,130,128,120,142,121,709,448,148,,710',
',,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133',
'134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121',
'451,442,148,,452,,,,,,,,,144,145,141,123,124,125,132,129,131,,,126,127',
',,,,146,147,133,134,,,,,,253,,,,,,138,137,,122,143,140,139,135,136,130',
'128,120,142,121,451,442,148,,452,,,,,,,,,144,145,141,123,124,125,132',
'129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138,137,,122,143,140',
'139,135,136,130,128,120,142,121,451,442,148,,452,,,,,,,,,144,145,141',
'123,124,125,132,129,131,,,126,127,,,,,146,147,133,134,,,,,,,,,,,,138',
'137,,122,143,140,139,135,136,130,128,120,142,121,451,442,148,,452,,',
',,,,,,144,145,141,123,124,125,132,129,131,,,126,127,,,,,146,147,133',
'134,,,,,,,,,,,,138,137,,122,143,140,139,135,136,130,128,120,142,121',
',,148' ]
        racc_action_table = arr = ::Array.new(25535, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'664,664,664,56,664,1033,610,404,664,664,24,294,934,664,823,664,664,664',
'664,664,664,664,763,816,366,719,719,664,664,664,664,664,664,664,701',
'212,664,3,512,369,325,399,3,664,399,475,664,664,664,664,664,664,664',
'762,664,664,664,651,664,664,503,664,664,825,872,511,627,627,404,378',
'701,512,111,816,24,294,475,111,111,719,475,475,72,664,1020,212,664,56',
'1023,664,72,664,922,503,24,294,1003,664,511,389,399,399,871,826,764',
'664,389,651,610,706,664,664,664,664,664,664,1033,827,1033,664,664,1033',
'969,934,763,934,366,664,934,765,664,526,526,526,526,526,664,664,499',
'526,526,369,325,360,526,831,526,526,526,526,526,526,526,627,304,762',
'471,471,526,526,526,526,526,526,526,1023,872,526,364,764,364,499,378',
'526,526,706,526,526,526,526,526,526,526,526,817,526,526,526,359,526',
'526,378,526,526,765,1020,378,1020,210,1023,1020,1023,467,922,1023,922',
'764,1003,922,1003,471,706,1003,871,526,871,871,526,871,1022,526,706',
'526,966,526,384,522,1021,526,600,385,765,384,969,817,969,526,385,969',
'299,299,526,526,526,526,526,526,601,210,836,526,526,467,287,360,278',
'360,526,526,360,278,526,909,909,909,666,909,526,526,363,909,909,667',
'839,363,909,710,909,909,909,909,909,909,909,539,522,522,522,290,909',
'909,909,909,909,909,909,1022,401,909,359,386,359,522,707,359,909,840',
'386,909,909,909,909,909,909,909,666,909,909,909,287,909,909,667,909',
'909,832,600,982,600,982,1022,600,1022,300,966,1022,966,298,1021,966',
'1021,710,710,1021,601,909,601,620,909,601,539,909,620,909,290,287,401',
'401,401,909,874,387,734,734,383,287,709,909,387,707,734,383,909,909',
'909,909,909,909,710,775,775,909,909,293,317,857,539,317,710,909,290',
'832,909,908,908,908,539,908,909,909,290,908,908,292,638,707,908,862',
'908,908,908,908,908,908,908,707,863,734,884,734,908,908,908,908,908',
'908,908,832,884,908,303,709,709,397,16,16,908,832,476,908,908,908,908',
'908,908,908,382,908,908,908,289,908,908,382,908,908,866,874,388,874',
'884,884,874,638,638,388,775,575,709,476,303,775,638,476,476,395,908',
'575,709,908,303,284,908,592,908,592,592,592,406,592,908,779,397,397',
'397,391,779,884,908,749,749,283,391,908,908,908,908,908,908,575,575',
'773,908,908,282,860,773,860,860,860,908,860,280,908,215,215,215,215',
'215,908,908,876,215,215,395,395,395,215,879,215,215,215,215,215,215',
'215,575,406,406,406,438,215,215,215,215,215,215,215,880,592,215,439',
'14,881,650,725,215,215,725,215,215,215,215,215,215,215,215,270,215,215',
'215,318,215,215,318,215,215,38,38,321,438,860,321,1027,267,1027,1027',
'1027,1027,1027,438,439,14,959,650,266,959,215,1027,901,215,439,14,215',
'650,215,902,215,23,23,1,215,313,313,209,209,23,1006,1006,215,252,1027',
'209,220,215,215,215,215,215,215,1027,1027,214,215,215,358,358,84,84',
'36,213,215,578,578,215,216,216,216,912,216,215,215,211,216,216,925,926',
'927,216,928,216,216,216,216,216,216,216,1027,929,209,931,209,216,216',
'216,216,216,216,216,36,194,216,873,873,936,937,98,945,216,36,873,216',
'216,216,216,216,216,216,947,216,216,216,949,216,216,950,216,216,951',
'746,952,746,746,746,891,746,891,891,891,891,891,793,793,954,79,793,793',
'793,216,891,1034,216,495,216,216,78,216,873,968,873,42,977,216,37,984',
'13,13,746,35,21,216,999,891,13,746,216,216,216,216,216,216,891,891,495',
'216,216,15,495,495,495,495,12,216,1004,1005,216,219,219,219,1010,219',
'216,216,1012,219,219,1013,1014,1015,219,531,219,219,219,219,219,219',
'219,891,533,13,528,13,219,219,219,219,219,219,219,527,513,219,288,288',
'509,508,540,544,219,505,288,219,219,219,219,219,219,219,1016,219,219',
'219,553,219,219,554,219,219,555,589,556,589,589,589,993,589,993,993',
'993,993,993,910,569,910,910,910,585,910,219,993,587,219,494,591,219',
'596,219,288,602,288,603,480,219,479,478,306,306,589,477,456,219,445',
'993,306,589,219,219,219,219,219,219,993,993,494,219,219,642,494,494',
'494,494,648,219,437,436,219,907,907,907,433,907,219,219,654,907,907',
'430,659,428,907,662,907,907,907,907,907,907,907,993,422,306,403,306',
'907,907,907,907,907,907,907,400,670,907,584,584,671,687,693,695,907',
'374,584,907,907,907,907,907,907,907,370,907,907,907,368,907,907,703',
'907,907,705,350,365,350,350,350,991,350,991,991,991,991,991,998,708',
'998,998,998,711,998,907,991,712,907,713,714,907,1019,907,584,717,584',
'718,720,907,357,723,43,43,350,727,728,907,732,991,43,350,907,907,907',
'907,907,907,991,991,733,907,907,5,5,5,5,5,735,907,738,739,907,221,221',
'221,741,221,907,907,354,221,221,745,747,751,221,757,221,221,221,221',
'221,221,221,991,759,43,761,43,221,221,221,221,221,221,221,340,336,221',
'967,967,335,333,766,332,221,770,967,221,221,221,221,221,221,221,771',
'221,221,221,331,221,221,330,221,221,322,976,320,976,976,976,989,976',
'989,989,989,989,989,700,700,700,700,700,319,782,221,989,783,221,785',
'786,221,787,221,967,789,967,792,798,221,316,314,367,367,976,11,9,221',
'6,989,367,308,221,221,221,221,221,221,989,989,305,221,221,279,279,279',
'279,279,819,221,820,821,221,222,222,222,822,222,221,221,,222,222,,,',
'222,,222,222,222,222,222,222,222,989,,367,,367,222,222,222,222,222,222',
'222,,,222,612,612,,,,,222,,612,222,222,222,222,222,222,222,,222,222',
'222,,222,222,,222,222,,748,,748,748,748,972,748,972,972,972,972,972',
',,,,,,,222,972,,222,,,222,,222,612,,612,,,222,,,376,376,748,,,222,,972',
'376,,222,222,222,222,222,222,972,972,,222,222,,,,,,,222,,,222,223,223',
'223,,223,222,222,,223,223,,,,223,,223,223,223,223,223,223,223,972,,376',
',376,223,223,223,223,223,223,223,,,223,,930,,930,930,930,223,930,,223',
'223,223,223,223,223,223,,223,223,223,,223,223,,223,223,486,932,,932',
'932,932,854,932,854,854,854,854,854,930,,,,486,486,,223,854,,223,,,223',
',223,,,486,,486,223,486,486,486,486,932,,486,223,486,854,,,223,223,223',
'223,223,223,854,854,,223,223,,,,,,,223,,,223,224,224,224,,224,223,223',
',224,224,,,,224,,224,224,224,224,224,224,224,854,,,,,224,224,224,224',
'224,224,224,,,224,,861,,861,861,861,224,861,,224,224,224,224,224,224',
'224,,224,224,224,,224,224,,224,224,487,,,,,,849,,849,849,849,849,849',
'861,,,,487,487,,224,849,,224,,,224,,224,,,487,,487,224,487,487,487,487',
',,487,224,487,849,,,224,224,224,224,224,224,849,849,,224,224,,,,,,,224',
',,224,225,225,225,,225,224,224,,225,225,,,,225,,225,225,225,225,225',
'225,225,849,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225',
'225,225,225,225,225,,225,225,225,,225,225,,225,225,485,,,,,,847,,847',
'847,847,847,847,,,,,485,485,,225,847,,225,,,225,,225,,,485,,485,225',
'485,485,485,485,,,485,225,485,847,,,225,225,225,225,225,225,847,847',
',225,225,,,,,,,225,,,225,226,226,226,,226,225,225,,226,226,,,,226,,226',
'226,226,226,226,226,226,847,,,,,226,226,226,226,226,226,226,,,226,,',
',,,,226,,,226,226,226,226,226,226,226,,226,226,226,,226,226,,226,226',
'488,,,,,,581,,581,581,581,581,581,,,,,488,488,,226,581,,226,,,226,,226',
',,488,,488,226,488,488,488,488,,,488,226,488,581,,,226,226,226,226,226',
'226,581,581,,226,226,,,,,,,226,,,226,227,227,227,,227,226,226,,227,227',
',,,227,,227,227,227,227,227,227,227,581,,,,,227,227,227,227,227,227',
'227,,,227,,,,,459,,227,,,227,227,227,227,227,227,227,,227,227,227,,227',
'227,,227,227,459,459,459,459,459,459,459,459,459,459,459,,,459,459,',
',459,459,,227,,,227,,,227,,227,,,459,,459,227,459,459,459,459,459,459',
'459,227,459,,,,227,227,227,227,227,227,,,,227,227,,459,,459,,,227,,',
'227,228,228,228,,228,227,227,,228,228,,,,228,,228,228,228,228,228,228',
'228,,,,,,228,228,228,228,228,228,228,,,228,,,,,672,,228,,,228,228,228',
'228,228,228,228,,228,228,228,,228,228,,228,228,672,672,672,672,672,672',
'672,672,672,672,672,,,672,672,,,672,672,,228,,,228,,,228,,228,,,672',
',672,228,672,672,672,672,672,672,672,228,672,,,,228,228,228,228,228',
'228,768,768,,228,228,,672,,768,,,228,,768,228,229,229,229,,229,228,228',
',229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229',
'229,229,,,229,,,,768,,768,229,,,229,229,229,229,229,229,229,,229,229',
'229,,229,229,,229,229,674,674,674,674,674,674,674,674,674,674,674,,',
'674,674,,,674,674,,229,,,229,,,229,,229,,,674,,674,229,674,674,674,674',
'674,674,674,229,674,,,,229,229,229,229,229,229,,,,229,229,,674,674,',
',,229,,,229,230,230,230,,230,229,229,,230,230,,,,230,,230,230,230,230',
'230,230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230',
'230,230,230,230,230,,230,230,230,,230,230,,230,230,906,906,906,906,906',
'906,906,906,906,906,906,,,906,906,,,906,906,,230,,,230,,,230,,230,,',
'906,,906,230,906,906,906,906,906,906,906,230,906,,,,230,230,230,230',
'230,230,,,,230,230,,906,,,,,230,,,230,231,231,231,,231,230,230,,231',
'231,,,,231,,231,231,231,231,231,231,231,,,,,,231,231,231,231,231,231',
'231,,,231,,,,,,,231,,,231,231,231,231,231,231,231,,231,231,231,,231',
'231,,231,231,20,20,20,20,20,20,20,20,20,20,20,,,20,20,,,20,20,,231,',
',231,,,231,,231,,,20,,20,231,20,20,20,20,20,20,20,231,20,,,,231,231',
'231,231,231,231,,,,231,231,,20,,,,,231,,,231,232,232,232,,232,231,231',
',232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232',
'232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,,232,232,232,',
'232,232,,232,232,264,264,264,264,264,264,264,264,264,264,264,,,264,264',
',,264,264,,232,,,232,,,232,,232,,,264,,264,232,264,264,264,264,264,264',
'264,232,264,,,,232,232,232,232,232,232,,,,232,232,,264,,,,,232,,,232',
'233,233,233,,233,232,232,,233,233,,,,233,,233,233,233,233,233,233,233',
',,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233',
'233,233,,233,233,233,,233,233,,233,233,435,435,435,435,435,435,435,435',
'435,435,435,,,435,435,,,435,435,,233,,,233,,,233,,233,,,435,,435,233',
'435,435,435,435,435,435,435,233,435,,,,233,233,233,233,233,233,,,,233',
'233,,435,,,,,233,,,233,234,234,234,,234,233,233,,234,234,,,,234,,234',
'234,234,234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,',
',234,,,234,234,234,234,234,234,234,,234,234,234,,234,234,,234,234,454',
'454,454,454,454,454,454,454,454,454,454,,,454,454,,,454,454,,234,,,234',
',,234,,234,,,454,,454,234,454,454,454,454,454,454,454,234,454,,,,234',
'234,234,234,234,234,,,,234,234,,454,,,,,234,,,234,235,235,235,,235,234',
'234,,235,235,,,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235',
'235,235,235,,,235,,,,,,,235,,,235,235,235,235,235,235,235,,235,235,235',
',235,235,,235,235,551,551,551,551,551,551,551,551,551,551,551,,,551',
'551,,,551,551,,235,,,235,,,235,,235,,,551,,551,235,551,551,551,551,551',
'551,551,235,551,,,,235,235,235,235,235,235,,,,235,235,,551,,,,,235,',
',235,236,236,236,,236,235,235,,236,236,,,,236,,236,236,236,236,236,236',
'236,,,,,,236,236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236',
'236,236,236,,236,236,236,,236,236,,236,236,716,716,716,716,716,716,716',
'716,716,716,716,,,716,716,,,716,716,,236,,,236,,,236,,236,,,716,,716',
'236,716,716,716,716,716,716,716,236,716,,,,236,236,236,236,236,236,',
',,236,236,,716,,,,,236,,,236,237,237,237,,237,236,236,,237,237,,,,237',
',237,237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237',
',,,,,,237,,,237,237,237,237,237,237,237,,237,237,237,,237,237,,237,237',
'803,803,803,803,803,803,803,803,803,803,803,,,803,803,,,803,803,,237',
',,237,,,237,,237,,,803,,803,237,803,803,803,803,803,803,803,237,803',
',,,237,237,237,237,237,237,,,,237,237,,803,,,,,237,,,237,238,238,238',
',238,237,237,,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238,238',
'238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238,,238',
'238,238,,238,238,,238,238,805,805,805,805,805,805,805,805,805,805,805',
',,805,805,,,805,805,,238,,,238,,,238,,238,,,805,,805,238,805,805,805',
'805,805,805,805,238,805,,,,238,238,238,238,238,238,,,,238,238,,805,',
',,,238,,,238,239,239,239,,239,238,238,,239,239,,,,239,,239,239,239,239',
'239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239',
'239,239,239,239,239,,239,239,239,,239,239,,239,239,808,808,808,808,808',
'808,808,808,808,808,808,,,808,808,,,808,808,,239,,,239,,,239,,239,,',
'808,,808,239,808,808,808,808,808,808,808,239,808,,,,239,239,239,239',
'239,239,,,,239,239,,808,,,,,239,,,239,240,240,240,,240,239,239,,240',
'240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240,240',
'240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,,240,240,240,,240',
'240,,240,240,810,810,810,810,810,810,810,810,810,810,810,,,810,810,',
',810,810,,240,,,240,,,240,,240,,,810,,810,240,810,810,810,810,810,810',
'810,240,810,,,,240,240,240,240,240,240,,,,240,240,,810,,,,,240,,,240',
'241,241,241,,241,240,240,,241,241,,,,241,,241,241,241,241,241,241,241',
',,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241,241,241',
'241,241,,241,241,241,,241,241,,241,241,812,812,812,812,812,812,812,812',
'812,812,812,,,812,812,,,812,812,,241,,,241,,,241,,241,,,812,,812,241',
'812,812,812,812,812,812,812,241,812,,,,241,241,241,241,241,241,,,,241',
'241,,812,,,,,241,,,241,242,242,242,,242,241,241,,242,242,,,,242,,242',
'242,242,242,242,242,242,,,,,,242,242,242,242,242,242,242,,,242,,,,,',
',242,,,242,242,242,242,242,242,242,,242,242,242,,242,242,,242,242,904',
'904,904,904,904,904,904,904,904,904,904,,,904,904,,,904,904,,242,,,242',
',,242,,242,,,904,,904,242,904,904,904,904,904,904,904,242,904,,,,242',
'242,242,242,242,242,,,,242,242,,904,,,,,242,,,242,243,243,243,,243,242',
'242,,243,243,,,,243,,243,243,243,243,243,243,243,,,,,,243,243,243,243',
'243,243,243,,,243,,,,,,,243,,,243,243,243,243,243,243,243,,243,243,243',
',243,243,,243,243,958,958,958,958,958,958,958,958,958,958,958,,,958',
'958,,,958,958,,243,,,243,,,243,,243,,,958,,958,243,958,958,958,958,958',
'958,958,243,958,,,,243,243,243,243,243,243,,,,243,243,,958,,,,,243,',
',243,244,244,244,,244,243,243,,244,244,,,,244,,244,244,244,244,244,244',
'244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244',
'244,244,244,,244,244,244,,244,244,,244,244,492,492,492,492,492,492,492',
',,492,492,,,,,,,492,492,,244,,,244,,,244,,244,,,492,,492,244,492,492',
'492,492,492,492,492,244,492,,,,244,244,244,244,244,244,,,,244,244,,',
',,,,244,,,244,245,245,245,,245,244,244,,245,245,,,,245,,245,245,245',
'245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245',
'245,245,245,245,245,245,,245,245,245,,245,245,,245,245,491,491,491,491',
'491,491,491,,,491,491,,,,,,,491,491,,245,,,245,,,245,,245,,,491,,491',
'245,491,491,491,491,491,491,491,245,491,,,,245,245,245,245,245,245,',
',,245,245,,,,,,,245,,,245,0,0,0,0,0,245,245,,0,0,,,,0,,0,0,0,0,0,0,0',
',,,,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,,0,0,473',
'473,473,473,473,473,473,473,473,473,473,,,473,473,,,473,473,,0,,,0,',
',0,,0,,0,473,,473,0,473,473,473,473,473,473,473,0,473,,,,0,0,0,0,0,0',
',,,0,0,,,,,,,0,,,0,253,253,253,,253,0,0,,253,253,,,,253,,253,253,253',
'253,253,253,253,,373,,,,253,253,253,253,253,253,253,,,253,,,,,,,253',
',,253,253,253,253,253,253,253,253,253,253,253,,253,253,,253,253,490',
'490,490,490,490,490,490,,,490,490,373,373,,,,,490,490,373,253,,,253',
'373,,253,,253,,253,490,253,490,253,490,490,490,490,490,490,490,253,490',
'373,,,253,253,253,253,253,253,,,,253,253,,,,,,,253,,373,253,373,253',
',,,253,253,254,254,254,,254,,,,254,254,,,,254,,254,254,254,254,254,254',
'254,,,,,,254,254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254',
'254,254,254,254,254,254,254,,254,254,,254,254,474,474,474,474,474,474',
'474,474,474,474,474,,,474,474,,,474,474,,254,,,254,,,254,,254,,254,474',
'254,474,254,474,474,474,474,474,474,474,254,474,,,,254,254,254,254,254',
'254,,,,254,254,,,,,,,254,,,254,,254,,,,254,254,262,262,262,,262,,,,262',
'262,,,,262,,262,262,262,262,262,262,262,,,,,,262,262,262,262,262,262',
'262,,,262,,,,,,,262,,,262,262,262,262,262,262,262,262,262,262,262,,262',
'262,,262,262,496,496,496,496,496,496,496,,,496,496,,,,,,,496,496,,262',
',,262,,262,262,,262,,262,496,262,496,262,496,496,496,496,496,496,496',
'262,496,,,,262,262,262,262,262,262,,,,262,262,,,,,,,262,,,262,,262,',
',,262,262,893,893,893,,893,,,,893,893,,,,893,,893,893,893,893,893,893',
'893,,,,,,893,893,893,893,893,893,893,,,893,,,,,,,893,,,893,893,893,893',
'893,893,893,,893,893,893,,893,893,,893,893,493,493,493,493,493,493,493',
',,493,493,,,,,,,493,493,,893,,,893,,,893,,893,,,493,,493,893,493,493',
'493,493,493,493,493,893,493,,,,893,893,893,893,893,893,,,,893,893,,',
',,,,893,,,893,269,269,269,,269,893,893,,269,269,,,,269,,269,269,269',
'269,269,269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269',
'269,269,269,269,269,269,,269,269,269,,269,269,,269,269,497,497,497,497',
'497,497,497,497,,497,497,,,,,,,497,497,,269,,,269,,,269,,269,,,497,',
'497,269,497,497,497,497,497,497,497,269,497,,,,269,269,269,269,269,269',
',,,269,269,,,,,,,269,,,269,271,271,271,,271,269,269,,271,271,,,,271',
',271,271,271,271,271,271,271,,,,,,271,271,271,271,271,271,271,,,271',
',,,,,,271,,,271,271,271,271,271,271,271,,271,271,271,,271,271,,271,271',
'484,484,484,484,484,484,484,,,484,484,,,,,,,484,484,,271,,,271,,,271',
',271,,,484,,484,271,484,484,484,484,484,484,484,271,484,,,,271,271,271',
'271,271,271,,,,271,271,,,,,,,271,,,271,274,274,274,,274,271,271,,274',
'274,,,,274,,274,274,274,274,274,274,274,,,,,,274,274,274,274,274,274',
'274,,,274,,,,,,,274,,,274,274,274,274,274,274,274,,274,274,274,,274',
'274,,274,274,489,489,489,489,489,489,489,,,489,489,,,,,,,489,489,,274',
',,274,,,274,,274,,,489,,489,274,489,489,489,489,489,489,489,274,489',
',,,274,274,274,274,274,274,,,,274,274,,,,,,,274,,,274,275,275,275,,275',
'274,274,,275,275,,,,275,,275,275,275,275,275,275,275,,,,,,275,275,275',
'275,275,275,275,,,275,,,,,,,275,,,275,275,275,275,275,275,275,,275,275',
'275,481,275,275,,275,275,,,,,,,,,,,,481,481,,,,,,,,275,,,275,,481,275',
'481,275,481,481,481,481,,275,,,,,,,,275,,,,,275,275,275,275,275,275',
',,,275,275,,,,,,,275,,,275,281,281,281,281,281,275,275,,281,281,,,,281',
',281,281,281,281,281,281,281,,,,,,281,281,281,281,281,281,281,,,281',
',,,,,281,281,,281,281,281,281,281,281,281,281,,281,281,281,,281,281',
',281,281,483,,,,,,,,,,,,,,,,,483,483,,281,,,281,,,281,,281,,281,483',
',,281,483,483,483,483,,,,281,,,,,281,281,281,281,281,281,,,,281,281',
',,,,,,281,,,281,868,868,868,868,868,281,281,,868,868,,,,868,,868,868',
'868,868,868,868,868,,,,,,868,868,868,868,868,868,868,,,868,,,,,,868',
'868,,868,868,868,868,868,868,868,868,,868,868,868,,868,868,,868,868',
'482,,,,,,,,,,,,,,,,,482,482,,868,,,868,,,868,,868,,868,482,,482,868',
'482,482,482,482,,,,868,,,,,868,868,868,868,868,868,,,,868,868,,,,,,',
'868,,,868,285,285,285,,285,868,868,,285,285,,,,285,,285,285,285,285',
'285,285,285,,,,,,285,285,285,285,285,285,285,,,285,,,,,,,285,,,285,285',
'285,285,285,285,285,,285,285,285,,285,285,,889,,889,889,889,889,889',
',,,,,,,,889,,,,,,,285,,,285,,,285,,285,,,,,,,,889,,,,,,,889,889,889',
'889,285,285,285,285,285,285,,,,285,285,,,,285,,,285,,,285,286,286,286',
'286,286,285,285,,286,286,,,,286,889,286,286,286,286,286,286,286,,,,',
',286,286,286,286,286,286,286,,,286,,,,,,286,286,,286,286,286,286,286',
'286,286,286,,286,286,286,,286,286,,286,286,,,,,,,,,,,,,,,,,,,,,286,',
',286,,,286,,286,,286,,,,286,,,,,,,,286,,,,,286,286,286,286,286,286,',
',,286,286,,,,,,,286,,,286,867,867,867,867,867,286,286,,867,867,,,,867',
',867,867,867,867,867,867,867,,,,,,867,867,867,867,867,867,867,,,867',
',,,,,867,867,,867,867,867,867,867,867,867,867,,867,867,867,,867,867',
',867,867,,,,,,,,,,,,,,,,,,,,,867,,,867,,,867,,867,,867,,,,867,,,,,,',
',867,,,,,867,867,867,867,867,867,,,,867,867,,,,,,,867,,,867,865,865',
'865,,865,867,867,,865,865,,,,865,,865,865,865,865,865,865,865,,,,,,865',
'865,865,865,865,865,865,,,865,,,,,,,865,,,865,865,865,865,865,865,865',
',865,865,865,,865,865,,865,865,,,,,,,,,,,,,,,,,,,,,865,,,865,,,865,',
'865,,,,,,865,,,,,,,,865,,,,,865,865,865,865,865,865,,,,865,865,,,,,',
',865,,,865,301,301,301,,301,865,865,,301,301,,,,301,,301,301,301,301',
'301,301,301,,,,,,301,301,301,301,301,301,301,,,301,,,,,,,301,,,301,301',
'301,301,301,301,301,,301,301,301,,301,301,,887,,887,887,887,887,887',
',,,,,,,,887,,,,,,,301,,,301,,,301,,301,,,,,,,,887,,,,,,,887,887,887',
'887,301,301,301,301,301,301,,,,301,301,,,,,,,301,,,301,838,838,838,838',
'838,301,301,,838,838,,,,838,887,838,838,838,838,838,838,838,,,,,,838',
'838,838,838,838,838,838,,,838,,,,,,838,838,,838,838,838,838,838,838',
'838,838,,838,838,838,,838,838,,838,838,,,,,,,,,,,,,,,,,,,,,838,,,838',
',,838,,838,,838,,,,838,,,,,,,,838,,,,,838,838,838,838,838,838,,,,838',
'838,,,,,,,838,,,838,815,815,815,,815,838,838,,815,815,,,,815,,815,815',
'815,815,815,815,815,,,,,,815,815,815,815,815,815,815,,,815,,,,,,,815',
',,815,815,815,815,815,815,815,,815,815,815,,815,815,,815,815,,,,,,,',
',,,,,,,,,,,,,815,,,815,,,815,,815,,,,,,815,,,,,,,,815,,,,,815,815,815',
'815,815,815,,,,815,815,,,,,,,815,,,815,814,814,814,,814,815,815,,814',
'814,,,,814,,814,814,814,814,814,814,814,,,,,,814,814,814,814,814,814',
'814,,,814,,,,,,,814,,,814,814,814,814,814,814,814,,814,814,814,,814',
'814,,814,814,,,,,,,,,,,,,,,,,,,,,814,,,814,,,814,,814,,,,,,814,,,,,',
',,814,,,,,814,814,814,814,814,814,,,,814,814,,,,,,,814,,,814,813,813',
'813,,813,814,814,,813,813,,,,813,,813,813,813,813,813,813,813,,,,,,813',
'813,813,813,813,813,813,,,813,,,,,,,813,,,813,813,813,813,813,813,813',
',813,813,813,,813,813,,813,813,,,,,,,,,,,,,,,,,,,,,813,,,813,,,813,',
'813,,,,,,813,,,,,,,,813,,,,,813,813,813,813,813,813,,,,813,813,,,,,',
',813,,,813,310,310,310,,310,813,813,,310,310,,,,310,,310,310,310,310',
'310,310,310,,,,,,310,310,310,310,310,310,310,,,310,,,,,,,310,,,310,310',
'310,310,310,310,310,,310,310,310,,310,310,,310,310,,,,,,,,,,,,,,,,,',
',,,310,,,310,310,,310,,310,,,,,,310,,,,,,,,310,,,,,310,310,310,310,310',
'310,,,,310,310,,,,,,,310,,,310,312,312,312,312,312,310,310,,312,312',
',,,312,,312,312,312,312,312,312,312,,,,,,312,312,312,312,312,312,312',
',,312,,,,,,312,312,,312,312,312,312,312,312,312,312,,312,312,312,,312',
'312,,312,312,,,,,,,,,,,,,,,,,,,,,312,,,312,,,312,,312,,312,,,,312,,',
',,,,,312,,,,,312,312,312,312,312,312,,,,312,312,,,,,,,312,,,312,801',
'801,801,,801,312,312,,801,801,,,,801,,801,801,801,801,801,801,801,,',
',,,801,801,801,801,801,801,801,,,801,,,,,,,801,,,801,801,801,801,801',
'801,801,,801,801,801,,801,801,,801,801,,,,,,,,,,,,,,,,,,,,,801,,,801',
',,801,,801,,,,,,801,,,,,,,,801,,,,,801,801,801,801,801,801,,,,801,801',
',,,,,,801,,,801,800,800,800,,800,801,801,,800,800,,,,800,,800,800,800',
'800,800,800,800,,,,,,800,800,800,800,800,800,800,,,800,,,,,,,800,,,800',
'800,800,800,800,800,800,,800,800,800,,800,800,,800,800,,,,,,,,,,,,,',
',,,,,,,800,,,800,,,800,,800,,,,,,800,,,,,,,,800,,,,,800,800,800,800',
'800,800,,,,800,800,,,,,,,800,,,800,799,799,799,,799,800,800,,799,799',
',,,799,,799,799,799,799,799,799,799,,,,,,799,799,799,799,799,799,799',
',,799,,,,,,,799,,,799,799,799,799,799,799,799,,799,799,799,,799,799',
',799,799,,,,,,,,,,,,,,,,,,,,,799,,,799,,,799,,799,,,,,,799,,,,,,,,799',
',,,,799,799,799,799,799,799,,,,799,799,,,,,,,799,,,799,794,794,794,794',
'794,799,799,,794,794,,,,794,,794,794,794,794,794,794,794,,,,,,794,794',
'794,794,794,794,794,,,794,,,,,,794,794,,794,794,794,794,794,794,794',
'794,,794,794,794,,794,794,,794,794,,,,,,,,,,,,,,,,,,,,,794,,,794,,,794',
',794,,794,,,,794,,,,,,,,794,,,,,794,794,794,794,794,794,,,,794,794,',
',,,,,794,,,794,780,780,780,,780,794,794,,780,780,,,,780,,780,780,780',
'780,780,780,780,,,,,,780,780,780,780,780,780,780,,,780,,,,,,,780,,,780',
'780,780,780,780,780,780,,780,780,780,,780,780,,780,780,,,,,,,,,,,,,',
',,,,,,,780,,,780,,,780,,780,,,,,,780,,,,,,,,780,,,,,780,780,780,780',
'780,780,,,,780,780,,,,,,,780,,,780,777,777,777,777,777,780,780,,777',
'777,,,,777,,777,777,777,777,777,777,777,,,,,,777,777,777,777,777,777',
'777,,,777,,,,,,777,777,,777,777,777,777,777,777,777,777,,777,777,777',
',777,777,,777,777,,,,,,,,,,,,,,,,,,,,,777,,,777,,,777,,777,,777,,,,777',
',,,,,,,777,,,,,777,777,777,777,777,777,,,,777,777,,,,,,,777,,,777,776',
'776,776,776,776,777,777,,776,776,,,,776,,776,776,776,776,776,776,776',
',,,,,776,776,776,776,776,776,776,,,776,,,,,,776,776,,776,776,776,776',
'776,776,776,776,,776,776,776,,776,776,,776,776,,,,,,,,,,,,,,,,,,,,,776',
',,776,,,776,,776,,776,,,,776,,,,,,,,776,,,,,776,776,776,776,776,776',
',,,776,776,,,,,,,776,,,776,772,772,772,772,772,776,776,,772,772,,,,772',
',772,772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772,,,772',
',,,,,772,772,,772,772,772,772,772,772,772,772,,772,772,772,,772,772',
',772,772,,,,,,,,,,,,,,,,,,,,,772,,,772,,,772,,772,,772,,,,772,,,,,,',
',772,,,,,772,772,772,772,772,772,,,,772,772,,,,,,,772,,,772,767,767',
'767,,767,772,772,,767,767,,,,767,,767,767,767,767,767,767,767,,,,,,767',
'767,767,767,767,767,767,,,767,,,,,,,767,,,767,767,767,767,767,767,767',
',767,767,767,,767,767,,767,767,,,,,,,,,,,,,,,,,,,,,767,,,767,,,767,',
'767,,,,,,767,,,,,,,,767,,,,,767,767,767,767,767,767,,,,767,767,,,,,',
',767,,,767,342,342,342,,342,767,767,,342,342,,,,342,,342,342,342,342',
'342,342,342,,,,,,342,342,342,342,342,342,342,,,342,,,,,,,342,,,342,342',
'342,342,342,342,342,,342,342,342,,342,342,,676,,676,676,676,676,676',
',,,,,,,,676,,,,,,,342,,,342,,,342,,342,,,,,,,,676,,,,,,,676,676,676',
'676,342,342,342,342,342,342,,,,342,342,,,,,,,342,,,342,760,760,760,676',
'760,342,342,,760,760,,,,760,676,760,760,760,760,760,760,760,,,,,,760',
'760,760,760,760,760,760,,,760,,,,,,,760,,,760,760,760,760,760,760,760',
',760,760,760,,760,760,,760,760,,,,,,,,,,,,,,,,,,,,,760,,,760,,,760,',
'760,,760,,,,760,,,,,,,,760,,,,,760,760,760,760,760,760,,,,760,760,,',
',,,,760,,,760,721,721,721,,721,760,760,,721,721,,,,721,,721,721,721',
'721,721,721,721,,,,,,721,721,721,721,721,721,721,,,721,,,,,,,721,,,721',
'721,721,721,721,721,721,,721,721,721,,721,721,,721,721,,,,,,,,,,,,,',
',,,,,,,721,,,721,,,721,,721,,721,,,,721,,,,,,,,721,,,,,721,721,721,721',
'721,721,,,,721,721,,,,,,,721,,,721,715,715,715,,715,721,721,,715,715',
',,,715,,715,715,715,715,715,715,715,,,,,,715,715,715,715,715,715,715',
',,715,,,,,,,715,,,715,715,715,715,715,715,715,,715,715,715,,715,715',
',987,,987,987,987,987,987,,,,,,,,,987,,,,,,,715,,,715,,,715,,715,,,',
',,,,987,,,,,,,987,987,987,987,715,715,715,715,715,715,,,,715,715,,,',
',,,715,,,715,361,361,361,,361,715,715,,361,361,,,,361,987,361,361,361',
'361,361,361,361,,,,,,361,361,361,361,361,361,361,,,361,,,,,,,361,,,361',
'361,361,361,361,361,361,,361,361,361,,361,361,,361,361,,,,,,,,,,,,,',
',,,,,,,361,,,361,,,361,,361,,,,,,361,,,,,,,,361,,,,,361,361,361,361',
'361,361,,,,361,361,,,,,,,361,,,361,362,362,362,,362,361,361,,362,362',
',,,362,,362,362,362,362,362,362,362,,,,,,362,362,362,362,362,362,362',
',,362,,,,,,,362,,,362,362,362,362,362,362,362,,362,362,362,,362,362',
',362,362,,,,,,,,,,,,,,,,,,,,,362,,,362,,,362,,362,,,,,,362,,,,,,,,362',
',,,,362,362,362,362,362,362,,,,362,362,,,,,,,362,,,362,702,702,702,',
'702,362,362,,702,702,,,,702,,702,702,702,702,702,702,702,,,,,,702,702',
'702,702,702,702,702,,,702,,,,,,,702,,,702,702,702,702,702,702,702,,702',
'702,702,,702,702,,57,,57,57,57,57,57,,,,,,,,,57,,,,,,,702,,,702,,,702',
',702,,,,,,,,57,57,,,,,,57,57,57,57,702,702,702,702,702,702,,,,702,702',
',,,,,,702,,,702,699,699,699,,699,702,702,,699,699,,,,699,57,699,699',
'699,699,699,699,699,,,,,,699,699,699,699,699,699,699,,,699,,,,,,,699',
',,699,699,699,699,699,699,699,,699,699,699,,699,699,,699,699,,,,,,,',
',,,,,,,,,,,,,699,,,699,,,699,,699,,,,,,699,,,,,,,,699,,,,,699,699,699',
'699,699,699,,,,699,699,,,,,,,699,,,699,696,696,696,,696,699,699,,696',
'696,,,,696,,696,696,696,696,696,696,696,,,,,,696,696,696,696,696,696',
'696,,,696,,,,,,,696,,,696,696,696,696,696,696,696,,696,696,696,,696',
'696,,696,696,,,,,,,,,,,,,,,,,,,,,696,,,696,,,696,,696,,,,,,696,,,,,',
',,696,,,,,696,696,696,696,696,696,,,,696,696,,,,,,,696,,,696,691,691',
'691,691,691,696,696,,691,691,,,,691,,691,691,691,691,691,691,691,,,',
',,691,691,691,691,691,691,691,,,691,,,,,,691,691,,691,691,691,691,691',
'691,691,691,,691,691,691,,691,691,,691,691,,,,,,,,,,,,,,,,,,,,,691,',
',691,,,691,,691,,691,,,,691,,,,,,,,691,,,,,691,691,691,691,691,691,',
',,691,691,,,,,,,691,,,691,381,381,381,,381,691,691,,381,381,,,,381,',
'381,381,381,381,381,381,381,,,,,,381,381,381,381,381,381,381,,,381,',
',,,,,381,,,381,381,381,381,381,381,381,,381,381,381,,381,381,,956,,956',
'956,956,956,956,,,,,,,,,956,,,,,,,381,,,381,,,381,,381,,,,,,,,956,956',
',,,,,956,956,956,956,381,381,381,381,381,381,,,,381,381,,,,,,,381,,',
'381,690,690,690,690,690,381,381,,690,690,,,,690,956,690,690,690,690',
'690,690,690,,,,,,690,690,690,690,690,690,690,,,690,,,,,,690,690,,690',
'690,690,690,690,690,690,690,,690,690,690,,690,690,,690,690,,,,,,,,,',
',,,,,,,,,,,690,,,690,,,690,,690,,690,,,,690,,,,,,,,690,,,,,690,690,690',
'690,690,690,,,,690,690,,,,,,,690,,,690,689,689,689,,689,690,690,,689',
'689,,,,689,,689,689,689,689,689,689,689,,,,,,689,689,689,689,689,689',
'689,,,689,,,,,,,689,,,689,689,689,689,689,689,689,689,689,689,689,,689',
'689,,689,689,,,,,,,,,,,,,,,,,,,,,689,,,689,,,689,,689,,,,689,,689,,',
',,,,,689,,,,,689,689,689,689,689,689,,,,689,689,,,,,,,689,,,689,,689',
',,,689,689,688,688,688,,688,,,,688,688,,,,688,,688,688,688,688,688,688',
'688,,,,,,688,688,688,688,688,688,688,,,688,,,,,,,688,,,688,688,688,688',
'688,688,688,688,688,688,688,,688,688,,688,688,,,,,,,,,,,,,,,,,,,,,688',
',,688,,,688,,688,,688,,688,,688,,,,,,,,688,,,,,688,688,688,688,688,688',
',,,688,688,,,,,,,688,,,688,,688,,,,688,688,685,685,685,685,685,,,,685',
'685,,,,685,,685,685,685,685,685,685,685,,,,,,685,685,685,685,685,685',
'685,,,685,,,,,,685,685,,685,685,685,685,685,685,685,685,,685,685,685',
',685,685,,685,685,,,,,,,,,,,,,,,,,,,,,685,,,685,,,685,,685,,685,,,,685',
',,,,,,,685,,,,,685,685,685,685,685,685,,,,685,685,,,,,,,685,,,685,678',
'678,678,678,678,685,685,,678,678,,,,678,,678,678,678,678,678,678,678',
',,,,,678,678,678,678,678,678,678,,,678,,,,,,678,678,,678,678,678,678',
'678,678,678,678,,678,678,678,,678,678,,678,678,,,,,,,,,,,,,,,,,,,,,678',
',,678,,,678,,678,,678,,,,678,,,,,,,,678,,,,,678,678,678,678,678,678',
',,,678,678,,,,,,,678,,,678,393,393,393,,393,678,678,,393,393,,,,393',
',393,393,393,393,393,393,393,,,,,,393,393,393,393,393,393,393,,,393',
',,,,,,393,,,393,393,393,393,393,393,393,,393,393,393,,393,393,,393,393',
',,,,,,,,,,,,,,,,,,,,393,,,393,,,393,,393,,,,,,393,,,,,,,,393,,,,,393',
'393,393,393,393,393,,,,393,393,,,,,,,393,,,393,665,665,665,,665,393',
'393,,665,665,,,,665,,665,665,665,665,665,665,665,,,,,,665,665,665,665',
'665,665,665,,,665,,,,,,,665,,,665,665,665,665,665,665,665,,665,665,665',
',665,665,,665,665,,,,,,,,,,,,,,,,,,,,,665,,,665,,,665,,665,,,,,,665',
',,,,,,,665,,,,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665,661',
'661,661,,661,665,665,,661,661,,,,661,,661,661,661,661,661,661,661,,',
',,,661,661,661,661,661,661,661,,,661,,,,,,,661,,,661,661,661,661,661',
'661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,,,,,661,,,661',
',,661,,661,,,,,,661,,,,,,,,661,,,,,661,661,661,661,661,661,,,,661,661',
',,,,,,661,,,661,658,658,658,,658,661,661,,658,658,,,,658,,658,658,658',
'658,658,658,658,,,,,,658,658,658,658,658,658,658,,,658,,,,,,,658,,,658',
'658,658,658,658,658,658,,658,658,658,,658,658,,658,658,,,,,,,,,,,,,',
',,,,,,,658,,,658,,,658,,658,,,,,,658,,,,,,,,658,,,,,658,658,658,658',
'658,658,,,,658,658,,,,,,,658,,,658,432,432,432,,432,658,658,,432,432',
',,,432,,432,432,432,432,432,432,432,,,,,,432,432,432,432,432,432,432',
',,432,,,,,,,432,,,432,432,432,432,432,432,432,,432,432,432,,432,432',
',432,432,,,,,,,,,,,,,,,,,,,,,432,,,432,,,432,,432,,,,,,432,,,,,,,,432',
',,,,432,432,432,432,432,432,,,,432,432,,,,,,,432,,,432,653,653,653,',
'653,432,432,,653,653,,,,653,,653,653,653,653,653,653,653,,,,,,653,653',
'653,653,653,653,653,,,653,,,,,,,653,,,653,653,653,653,653,653,653,,653',
'653,653,,653,653,,653,653,,,,,,,,,,,,,,,,,,,,,653,,,653,,,653,,653,',
',,,,653,,,,,,,,653,,,,,653,653,653,653,653,653,,,,653,653,,,,,,,653',
',,653,652,652,652,,652,653,653,,652,652,,,,652,,652,652,652,652,652',
'652,652,,,,,,652,652,652,652,652,652,652,,,652,,,,,,,652,,,652,652,652',
'652,652,652,652,,652,652,652,,652,652,,652,652,,,,,,,,,,,,,,,,,,,,,652',
',,652,,,652,,652,,,,,,652,,,,,,,,652,,,,,652,652,652,652,652,652,,,',
'652,652,,,,,,,652,,,652,649,649,649,,649,652,652,,649,649,,,,649,,649',
'649,649,649,649,649,649,,,,,,649,649,649,649,649,649,649,,,649,,,,,',
',649,,,649,649,649,649,649,649,649,,649,649,649,,649,649,,649,649,,',
',,,,,,,,,,,,,,,,,,649,,,649,,,649,,649,,649,,,,649,,,,,,,,649,,,,,649',
'649,649,649,649,649,,,,649,649,,,,,,,649,,,649,448,448,448,,448,649',
'649,,448,448,,,,448,,448,448,448,448,448,448,448,,,,,,448,448,448,448',
'448,448,448,,,448,,,,,,,448,,,448,448,448,448,448,448,448,448,448,448',
'448,,448,448,,448,448,,,,,,,,,,,,,,,,,,,,,448,,,448,448,,448,,448,,448',
',448,,448,,,,,,,,448,,,,,448,448,448,448,448,448,,,,448,448,,,,,,,448',
',,448,,448,,,,448,448,449,449,449,,449,,,,449,449,,,,449,,449,449,449',
'449,449,449,449,,,,,,449,449,449,449,449,449,449,,,449,,,,,,,449,,,449',
'449,449,449,449,449,449,449,449,449,449,,449,449,,449,449,,,,,,,,,,',
',,,,,,,,,,449,,,449,449,,449,,449,,449,,449,,449,,,,,,,,449,,,,,449',
'449,449,449,449,449,,,,449,449,,,,,,,449,,,449,,449,,,,449,449,621,621',
'621,,621,,,,621,621,,,,621,,621,621,621,621,621,621,621,,,,,,621,621',
'621,621,621,621,621,,,621,,,,,,,621,,,621,621,621,621,621,621,621,,621',
'621,621,,621,621,,621,621,,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,,621,',
',,,,621,,,,,,,,621,,,,,621,621,621,621,621,621,,,,621,621,,,,,,,621',
',,621,465,465,465,,465,621,621,,465,465,,,,465,,465,465,465,465,465',
'465,465,,,,,,465,465,465,465,465,465,465,,,465,,,,,,,465,,,465,465,465',
'465,465,465,465,465,465,465,465,,465,465,,465,465,,,,,,,,,,,,,,,,,,',
',,465,,,465,,,465,,465,,465,,,,465,,,,,,,,465,,,,,465,465,465,465,465',
'465,,,,465,465,,,,,,,465,,,465,,465,,,,465,465,466,466,466,,466,,,,466',
'466,,,,466,,466,466,466,466,466,466,466,,,,,,466,466,466,466,466,466',
'466,,,466,,,,,,,466,,,466,466,466,466,466,466,466,466,466,466,466,,466',
'466,,466,466,,,,,,,,,,,,,,,,,,,,,466,,,466,,,466,,466,,466,,,,466,,',
',,,,,466,,,,,466,466,466,466,466,466,,,,466,466,,,,,,,466,,,466,,466',
',,,466,466,619,619,619,,619,,,,619,619,,,,619,,619,619,619,619,619,619',
'619,,,,,,619,619,619,619,619,619,619,,,619,,,,,,,619,,,619,619,619,619',
'619,619,619,,619,619,619,,619,619,,619,619,,,,,,,,,,,,,,,,,,,,,619,',
',619,,,619,,619,,,,,,619,,,,,,,,619,,,,,619,619,619,619,619,619,,,,619',
'619,,,,,,,619,,,619,468,468,468,,468,619,619,,468,468,,,,468,,468,468',
'468,468,468,468,468,,,,,,468,468,468,468,468,468,468,,,468,,,,,,,468',
',,468,468,468,468,468,468,468,,468,468,468,,468,468,,468,468,,,,,,,',
',,,,,,,,,,,,,468,,,468,,,468,,468,,,,,,468,,,,,,,,468,,,,,468,468,468',
'468,468,468,,,,468,468,,,,,,,468,,,468,469,469,469,,469,468,468,,469',
'469,,,,469,,469,469,469,469,469,469,469,,,,,,469,469,469,469,469,469',
'469,,,469,,,,,,,469,,,469,469,469,469,469,469,469,,469,469,469,,469',
'469,,469,469,,,,,,,,,,,,,,,,,,,,,469,,,469,,,469,,469,,,,,,469,,,,,',
',,469,,,,,469,469,469,469,469,469,,,,469,469,,,,,,,469,,,469,470,470',
'470,,470,469,469,,470,470,,,,470,,470,470,470,470,470,470,470,,,,,,470',
'470,470,470,470,470,470,,,470,,,,,,,470,,,470,470,470,470,470,470,470',
',470,470,470,,470,470,,470,470,,,,,,,,,,,,,,,,,,,,,470,,,470,,,470,',
'470,,,,,,470,,,,,,,,470,,,,,470,470,470,470,470,470,,,,470,470,,,,,',
',470,,,470,615,615,615,,615,470,470,,615,615,,,,615,,615,615,615,615',
'615,615,615,,,,,,615,615,615,615,615,615,615,,,615,,,,,,,615,,,615,615',
'615,615,615,615,615,615,615,615,615,,615,615,,615,615,,,,,,,,,,,,,,',
',,,,,,615,,,615,,,615,,615,,615,,,,615,,,,,,,,615,,,,,615,615,615,615',
'615,615,,,,615,615,,,,,,,615,,,615,,615,,,,615,615,609,609,609,,609',
',,,609,609,,,,609,,609,609,609,609,609,609,609,,,,,,609,609,609,609',
'609,609,609,,,609,,,,,,,609,,,609,609,609,609,609,609,609,609,609,609',
'609,,609,609,,609,609,,,,,,,,,,,,,,,,,,,,,609,,,609,,,609,,609,,609',
',,,609,,,,,,,,609,,,,,609,609,609,609,609,609,,,,609,609,,,,,,,609,',
',609,,609,,,,609,609,606,606,606,,606,,,,606,606,,,,606,,606,606,606',
'606,606,606,606,,,,,,606,606,606,606,606,606,606,,,606,,,,,,,606,,,606',
'606,606,606,606,606,606,606,606,606,606,,606,606,,606,606,,,,,,,,,,',
',,,,,,,,,,606,,,606,,,606,,606,,606,,,,606,,,,,,,,606,,,,,606,606,606',
'606,606,606,,,,606,606,,,,,,,606,,,606,,606,,,,606,606,604,604,604,604',
'604,,,,604,604,,,,604,,604,604,604,604,604,604,604,,,,,,604,604,604',
'604,604,604,604,,,604,,,,,,604,604,,604,604,604,604,604,604,604,604',
',604,604,604,,604,604,,604,604,,,,,,,,,,,,,,,,,,,,,604,,,604,,,604,',
'604,,604,,,,604,,,,,,,,604,,,,,604,604,604,604,604,604,,,,604,604,,',
',,,,604,,,604,599,599,599,599,599,604,604,,599,599,,,,599,,599,599,599',
'599,599,599,599,,,,,,599,599,599,599,599,599,599,,,599,,,,,,599,599',
',599,599,599,599,599,599,599,599,,599,599,599,,599,599,,599,599,,,,',
',,,,,,,,,,,,,,,,599,,,599,,,599,,599,,599,,,,599,,,,,,,,599,,,,,599',
'599,599,599,599,599,,,,599,599,,,,,,,599,,,599,595,595,595,595,595,599',
'599,,595,595,,,,595,,595,595,595,595,595,595,595,,,,,,595,595,595,595',
'595,595,595,,,595,,,,,,595,595,,595,595,595,595,595,595,595,595,,595',
'595,595,,595,595,,595,595,,,,,,,,,,,,,,,,,,,,,595,,,595,,,595,,595,',
'595,,,,595,,,,,,,,595,,,,,595,595,595,595,595,595,,,,595,595,,,,,,,595',
',,595,574,574,574,,574,595,595,,574,574,,,,574,,574,574,574,574,574',
'574,574,,,,,,574,574,574,574,574,574,574,,,574,,,,,,,574,,,574,574,574',
'574,574,574,574,,574,574,574,,574,574,,852,,852,852,852,852,852,,,,',
',,,,852,,,,,,,574,,,574,,,574,,574,,,,,,,,852,,,,,,,852,852,852,852',
'574,574,574,574,574,574,,,,574,574,,,,,,,574,,,574,568,568,568,568,568',
'574,574,,568,568,,,,568,852,568,568,568,568,568,568,568,,,,,,568,568',
'568,568,568,568,568,,,568,,,,,,568,568,,568,568,568,568,568,568,568',
'568,,568,568,568,,568,568,,568,568,,,,,,,,,,,,,,,,,,,,,568,,,568,,,568',
',568,,568,,,,568,,,,,,,,568,,,,,568,568,568,568,568,568,,,,568,568,',
',,,,,568,,,568,567,567,567,567,567,568,568,,567,567,,,,567,,567,567',
'567,567,567,567,567,,,,,,567,567,567,567,567,567,567,,,567,,,,,,567',
'567,,567,567,567,567,567,567,567,567,,567,567,567,,567,567,,567,567',
',,,,,,,,,,,,,,,,,,,,567,,,567,,,567,,567,,567,,,,567,,,,,,,,567,,,,',
'567,567,567,567,567,567,,,,567,567,,,,,,,567,,,567,562,562,562,,562',
'567,567,,562,562,,,,562,,562,562,562,562,562,562,562,,,,,,562,562,562',
'562,562,562,562,,,562,,,,,,,562,,,562,562,562,562,562,562,562,562,562',
'562,562,,562,562,,562,562,,,,,,,,,,,,,,,,,,,,,562,,,562,,,562,,562,',
',,,,562,,,,,,,,562,,,,,562,562,562,562,562,562,,,,562,562,,,,,,,562',
',,562,,562,,,,562,562,559,559,559,,559,,,,559,559,,,,559,,559,559,559',
'559,559,559,559,,,,,,559,559,559,559,559,559,559,,,559,,,,,,,559,,,559',
'559,559,559,559,559,559,559,559,559,559,,559,559,,559,559,,,,,,,,,,',
',,,,,,,,,,559,,,559,,,559,,559,,559,,559,,559,,,,,,,,559,,,,,559,559',
'559,559,559,559,,,,559,559,,,,,,,559,,,559,,559,,,,559,559,552,552,552',
',552,,,,552,552,,,,552,,552,552,552,552,552,552,552,,,,,,552,552,552',
'552,552,552,552,,,552,,,,,,,552,,,552,552,552,552,552,552,552,,552,552',
'552,,552,552,,552,552,,,,,,,,,,,,,,,,,,,,,552,,,552,,,552,,552,,,,,',
'552,,,,,,,,552,,,,,552,552,552,552,552,552,,,,552,552,,,,,,,552,,,552',
'498,498,498,,498,552,552,,498,498,,,,498,,498,498,498,498,498,498,498',
',,,,,498,498,498,498,498,498,498,,,498,,,,,,,498,,,498,498,498,498,498',
'498,498,,498,498,498,,498,498,,498,498,,,,,,,,,,,,,,,,,,,,,498,,,498',
',,498,,498,,,,,,498,,,,,,,,498,,,,,498,498,498,498,498,498,,,,498,498',
',,,,,,498,,,498,548,548,548,,548,498,498,,548,548,,,,548,,548,548,548',
'548,548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548',
'548,548,548,548,548,548,,548,548,548,,548,548,,548,548,,,,,,,,,,,,,',
',,,,,,,548,,,548,,,548,,548,,,,,,548,,,,,,,,548,,,,,548,548,548,548',
'548,548,,,,548,548,,,,,,,548,,,548,547,547,547,,547,548,548,,547,547',
',,,547,,547,547,547,547,547,547,547,,,,,,547,547,547,547,547,547,547',
',,547,,,,,,,547,,,547,547,547,547,547,547,547,,547,547,547,,547,547',
',547,547,,,,,,,,,,,,,,,,,,,,,547,,,547,,,547,,547,,,,,,547,,,,,,,,547',
',,,,547,547,547,547,547,547,,,,547,547,,,,,,,547,,,547,546,546,546,',
'546,547,547,,546,546,,,,546,,546,546,546,546,546,546,546,,,,,,546,546',
'546,546,546,546,546,,,546,,,,,,,546,,,546,546,546,546,546,546,546,,546',
'546,546,,546,546,,546,546,,,,,,,,,,,,,,,,,,,,,546,,,546,,,546,,546,',
',,,,546,,,,,,,,546,,,,,546,546,546,546,546,546,,,,546,546,,,,,,,546',
',,546,543,543,543,,543,546,546,,543,543,,,,543,,543,543,543,543,543',
'543,543,,,,,,543,543,543,543,543,543,543,,,543,,,,,,,543,,,543,543,543',
'543,543,543,543,,543,543,543,,543,543,,778,,778,778,778,778,778,,,,',
',,,,778,,,,,,,543,,,543,,,543,,543,,,,,,,,778,,,,,,,778,778,778,778',
'543,543,543,543,543,543,,,,543,543,,,,,,,543,,,543,537,537,537,,537',
'543,543,,537,537,,,,537,778,537,537,537,537,537,537,537,,,,,,537,537',
'537,537,537,537,537,,,537,,,,,,,537,,,537,537,537,537,537,537,537,537',
'537,537,537,,537,537,,537,537,,,,,,,,,,,,,,,,,,,,,537,,,537,,,537,,537',
',537,,,,537,,,,,,,,537,,,,,537,537,537,537,537,537,,,,537,537,,,,,,',
'537,,,537,,537,,,,537,537,516,516,516,,516,,,,516,516,,,,516,,516,516',
'516,516,516,516,516,,,,,,516,516,516,516,516,516,516,,,516,,,,,,,516',
',,516,516,516,516,516,516,516,516,516,516,516,,516,516,,516,516,,,,',
',,,,,,,,,,,,,,,,516,,,516,,,516,,516,,516,,516,,516,,,,,,,,516,,,,,516',
'516,516,516,516,516,,,,516,516,,,,,,,516,,,516,,516,,,,516,516,518,518',
'518,,518,,,,518,518,,,,518,,518,518,518,518,518,518,518,,,,,,518,518',
'518,518,518,518,518,,,518,,,,,,,518,,,518,518,518,518,518,518,518,518',
'518,518,518,,518,518,,518,518,,,,,,,,,,,,,,,,,,,,,518,,,518,,,518,,518',
',,,518,,518,,,,,,,,518,,,,,518,518,518,518,518,518,,,,518,518,,,,,,',
'518,,,518,,518,,,,518,518,520,520,520,,520,,,,520,520,,,,520,,520,520',
'520,520,520,520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520',
',,520,520,520,520,520,520,520,,520,520,520,,520,520,,520,520,,,,,,,',
',,,,,,,,,,,,,520,,,520,,,520,,520,,,,,,520,,,,,,,,520,,,,,520,520,520',
'520,520,520,,,,520,520,,,,,,,520,,,520,534,534,534,,534,520,520,,534',
'534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534,534,534,534,534',
'534,,,534,,,,,,,534,,,534,534,534,534,534,534,534,534,534,534,534,,534',
'534,,534,534,,,,,,,,,,,,,,,,,,,,,534,,,534,,,534,,534,,534,,,,534,,',
',,,,,534,,,,,534,534,534,534,534,534,,,,534,534,,,,,,,534,,,534,,534',
',,,534,534,532,532,532,,532,,,,532,532,,,,532,,532,532,532,532,532,532',
'532,,,,,,532,532,532,532,532,532,532,,,532,,,,,,,532,,,532,532,532,532',
'532,532,532,,532,532,532,,532,532,,623,,623,623,623,623,623,,,,,,,,',
'623,,,,,,,532,,,532,,,532,,532,,,,,,,,623,623,,,,,,623,623,623,623,532',
'532,532,532,532,532,,,,532,532,,,,,,,532,,,532,1000,1000,1000,,1000',
'532,532,,1000,1000,,,,1000,623,1000,1000,1000,1000,1000,1000,1000,,',
',,,1000,1000,1000,1000,1000,1000,1000,,,1000,,,,,,,1000,,,1000,1000',
'1000,1000,1000,1000,1000,1000,1000,1000,1000,,1000,1000,,1000,1000,',
',,,,,,,,,,,,,,,,,,,1000,,,1000,,,1000,,1000,,1000,,,,1000,,,,,,,,1000',
',,,,1000,1000,1000,1000,1000,1000,,,,1000,1000,,,,,,,1000,,,1000,,1000',
',,,1000,1000,996,996,996,996,996,,,,996,996,,,,996,,996,996,996,996',
'996,996,996,,,,,,996,996,996,996,996,996,996,,,996,,,,,,996,996,,996',
'996,996,996,996,996,996,996,,996,996,996,,996,996,,996,996,,,,,,,,,',
',,,,,,,,,,,996,,,996,,,996,,996,,996,,,,996,,,,,,,,996,,,,,996,996,996',
'996,996,996,,,,996,996,,,,,,,996,,,996,18,18,18,,18,996,996,,18,18,',
',,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18,,,,,,,18,',
',18,18,18,18,18,18,18,,18,18,18,,18,18,,18,18,,,,,,,,,,,,,,,,,,,,,18',
',,18,18,,18,,18,,,,,,18,,,,,,,,18,,,,,18,18,18,18,18,18,,,,18,18,,,',
',,,18,,,18,19,19,19,,19,18,18,,19,19,,,,19,,19,19,19,19,19,19,19,,,',
',,19,19,19,19,19,19,19,,,19,,,,,,,19,,,19,19,19,19,19,19,19,,19,19,19',
',19,19,,19,19,,,,,,,,,,,,,,,,,,,,,19,,,19,,,19,,19,,,,,,19,,,,,,,,19',
',,,,19,19,19,19,19,19,,,,19,19,,,,,,,19,,,19,27,27,27,,27,19,19,,27',
'27,,,,27,,27,27,27,27,27,27,27,,,,,,27,27,27,27,27,27,27,,,27,,,,,,',
'27,,,27,27,27,27,27,27,27,27,27,27,27,,27,27,,27,27,,,,,,,,,,,,,,,,',
',,,,27,,,27,,,27,,27,,27,,27,,27,,,,,,,,27,,,,,27,27,27,27,27,27,,,',
'27,27,,,,,,,27,,,27,,27,,,,27,27,28,28,28,,28,,,,28,28,,,,28,,28,28',
'28,28,28,28,28,,,,,,28,28,28,28,28,28,28,,,28,,,,,,,28,,,28,28,28,28',
'28,28,28,28,28,28,28,,28,28,,28,28,,,,,,,,,,,,,,,,,,,,,28,,,28,,,28',
',28,,28,,28,,28,,,,,,,,28,,,,,28,28,28,28,28,28,,,,28,28,,,,,,,28,,',
'28,,28,,,,28,28,29,29,29,,29,,,,29,29,,,,29,,29,29,29,29,29,29,29,,',
',,,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29,29,29',
'29,,29,29,,29,29,,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,,29,,29,,29,,29,,',
',,,,,29,,,,,29,29,29,29,29,29,,,,29,29,,,,,,,29,,,29,,29,,,,29,29,31',
'31,31,31,31,,,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31',
'31,31,,,31,,,,,,31,31,,31,31,31,31,31,31,31,31,,31,31,31,,31,31,,31',
'31,,,,,,,,,,,,,,,,,,,,,31,,,31,,,31,,31,,31,,,,31,,,,,,,,31,,,,,31,31',
'31,31,31,31,,,,31,31,,,,,,,31,,,31,32,32,32,,32,31,31,,32,32,,,,32,',
'32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32,,,32,,,,,,,32,,,32,32',
'32,32,32,32,32,,32,32,32,,32,32,,326,,326,326,326,326,326,,,,,,,,,326',
',,,,,,32,,,32,,,32,,32,,32,,,,,,326,,326,,,,,326,326,326,326,32,32,32',
'32,32,32,,,,32,32,,,,,,,32,,,32,33,33,33,,33,32,32,,33,33,,,,33,326',
'33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33,33,,,33,,,,,,,33,,,33,33',
'33,33,33,33,33,,33,33,33,,33,33,,579,,579,579,579,579,579,,,,,,,,,579',
',,,,,,33,,,33,,,33,,33,,,,,,,,579,,,,,,,579,579,579,579,33,33,33,33',
'33,33,,,,33,33,,,,33,,,33,,,33,983,983,983,983,983,33,33,,983,983,,',
',983,579,983,983,983,983,983,983,983,,,,,,983,983,983,983,983,983,983',
',,983,,,,,,983,983,,983,983,983,983,983,983,983,983,,983,983,983,,983',
'983,,983,983,,,,,,,,,,,,,,,,,,,,,983,,,983,,,983,,983,,983,,,,983,,',
',,,,,983,,,,,983,983,983,983,983,983,,,,983,983,,,,,,,983,,,983,978',
'978,978,978,978,983,983,,978,978,,,,978,,978,978,978,978,978,978,978',
',,,,,978,978,978,978,978,978,978,,,978,,,,,,978,978,,978,978,978,978',
'978,978,978,978,,978,978,978,,978,978,,978,978,,,,,,,,,,,,,,,,,,,,,978',
',,978,,,978,,978,,978,,,,978,,,,,,,,978,,,,,978,978,978,978,978,978',
',,,978,978,,,,,,,978,,,978,39,39,39,,39,978,978,,39,39,,,,39,,39,39',
'39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,39,39',
'39,39,39,,39,39,39,,39,39,,39,39,,,,,,,,,,,,,,,,,,,,,39,,,39,,,39,,39',
',,,,,39,,,,,,,,39,,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,,39,40,40',
'40,,40,39,39,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40,40,40,40',
'40,40,,,40,,,,,,,40,,,40,40,40,40,40,40,40,,40,40,40,,40,40,,40,40,',
',,,,,,,,,,,,,,,,,,,40,,,40,,,40,,40,,,,,,40,,,,,,,,40,,,,,40,40,40,40',
'40,40,,,,40,40,,,,,,,40,,,40,41,41,41,,41,40,40,,41,41,,,,41,,41,41',
'41,41,41,41,41,,,,,,41,41,41,41,41,41,41,,,41,,,,,,,41,,,41,41,41,41',
'41,41,41,,41,41,41,,41,41,,41,41,,,,,,,,,,,,,,,,,,,,,41,,,41,,,41,,41',
',,,,,41,,,,,,,,41,,,,,41,41,41,41,41,41,,,,41,41,,,,,,,41,,,41,53,53',
'53,,53,41,41,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53,53,53',
'53,53,,,53,,,,,,,53,,,53,53,53,53,53,53,53,,53,53,53,,53,53,,53,53,',
',,,,,,,,,,,,,,,,,,,53,,,53,,,53,,53,,,,,,53,,,,,,,,53,,,,,53,53,53,53',
'53,53,,,,53,53,,,,,,,53,,,53,54,54,54,,54,53,53,,54,54,,,,54,,54,54',
'54,54,54,54,54,,,,,,54,54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,54,54',
'54,54,54,54,54,54,54,,54,54,,54,54,,,,,,,,,,,,,,,,,,,,,54,,,54,,,54',
',54,,54,,,,54,,,,,,,,54,,,,,54,54,54,54,54,54,,,,54,54,,,,,,,54,,,54',
',54,,,,54,54,55,55,55,,55,,,,55,55,,,,55,,55,55,55,55,55,55,55,,,,,',
'55,55,55,55,55,55,55,,,55,,,,,,,55,,,55,55,55,55,55,55,55,55,55,55,55',
',55,55,,55,55,,,,,,,,,,,,,,,,,,,,,55,,,55,,,55,,55,,,,,,55,,,,,,,,55',
',,,,55,55,55,55,55,55,,,,55,55,,,,,,,55,,,55,,55,,,,55,55,58,58,58,',
'58,,,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58,58,58,58,58,58,,',
'58,,,,,,,58,,,58,58,58,58,58,58,58,,58,58,58,,58,58,,58,58,,,,,,,,,',
',,,,,,,,,,,58,,,58,,,58,,58,,,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58',
',,,58,58,,,,,,,58,,,58,59,59,59,,59,58,58,,59,59,,,,59,,59,59,59,59',
'59,59,59,,,,,,59,59,59,59,59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59',
'59,,59,59,59,,59,59,,59,59,,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,,59,,,,',
',59,,,,,,,,59,,,,,59,59,59,59,59,59,,,,59,59,,,,,,,59,,,59,62,62,62',
',62,59,59,,62,62,,,,62,,62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62',
'62,,,62,,,,,,,62,,,62,62,62,62,62,62,62,,62,62,62,,62,62,,62,62,,,,',
',,,,,,,,,,,,,,,,62,,,62,,,62,,62,,,,,,62,,,,,,,,62,,,,,62,62,62,62,62',
'62,,,,62,62,62,,,,,62,62,,,62,63,63,63,,63,62,62,,63,63,,,,63,,63,63',
'63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63',
'63,63,63,,63,63,63,,63,63,,571,,571,571,571,571,571,,,,,,,,,571,,,,',
',,63,,,63,,,63,,63,,63,,,,,,571,,,,,,,571,571,571,571,63,63,63,63,63',
'63,,,,63,63,,,,,,,63,,,63,64,64,64,,64,63,63,,64,64,,,,64,571,64,64',
'64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64,64,64',
'64,64,64,,64,64,64,,64,64,,,,,,,,,,,,,,,,,,,,,64,,,64,,,64,,,64,,64',
',,,,,,,,,,,,,,,,,,64,64,64,64,64,64,,,,64,64,,,,,,,64,,,64,965,965,965',
'965,965,64,64,,965,965,,,,965,,965,965,965,965,965,965,965,,,,,,965',
'965,965,965,965,965,965,,,965,,,,,,965,965,,965,965,965,965,965,965',
'965,965,,965,965,965,,965,965,,965,965,,,,,,,,,,,,,,,,,,,,,965,,,965',
',,965,,965,,965,,,,965,,,,,,,,965,,,,,965,965,965,965,965,965,,,,965',
'965,,,,,,,965,,,965,942,942,942,942,942,965,965,,942,942,,,,942,,942',
'942,942,942,942,942,942,,,,,,942,942,942,942,942,942,942,,,942,,,,,',
'942,942,,942,942,942,942,942,942,942,942,,942,942,942,,942,942,,942',
'942,,,,,,,,,,,,,,,,,,,,,942,,,942,,,942,,942,,942,,,,942,,,,,,,,942',
',,,,942,942,942,942,942,942,,,,942,942,,,,,,,942,,,942,85,85,85,,85',
'942,942,,85,85,,,,85,,85,85,85,85,85,85,85,,85,,,,85,85,85,85,85,85',
'85,,,85,,,,,,,85,,,85,85,85,85,85,85,85,85,85,85,85,,85,85,,85,85,,',
',,,,,,,,,,,,,,,,,,85,,,85,85,,85,,85,,85,,85,,85,,,,,,,,85,,85,,,85',
'85,85,85,85,85,,,,85,85,,,,,,,85,,,85,,85,,,,85,85,88,88,88,,88,,,,88',
'88,,,,88,,88,88,88,88,88,88,88,,88,,,,88,88,88,88,88,88,88,,,88,,,,',
',,88,,,88,88,88,88,88,88,88,88,88,88,88,,88,88,,88,88,,,,,,,,,,,,,,',
',,,,,,88,,,88,88,,88,,88,,88,,88,,88,,,,,,,,88,,88,,,88,88,88,88,88',
'88,,,,88,88,,,,,,,88,,,88,,88,,,,88,88,939,939,939,939,939,,,,939,939',
',,,939,,939,939,939,939,939,939,939,,,,,,939,939,939,939,939,939,939',
',,939,,,,,,939,939,,939,939,939,939,939,939,939,939,,939,939,939,,939',
'939,,939,939,,,,,,,,,,,,,,,,,,,,,939,,,939,,,939,,939,,939,,,,939,,',
',,,,,939,,,,,939,939,939,939,939,939,,,,939,939,,,,,,,939,,,939,100',
'100,100,100,100,939,939,,100,100,,,,100,,100,100,100,100,100,100,100',
',,,,,100,100,100,100,100,100,100,,,100,,,,,,100,100,100,100,100,100',
'100,100,100,100,100,,100,100,100,,100,100,,100,100,,,,,,,,,,,,,,,,,',
',,,100,,,100,,,100,,100,,100,,,,100,,,,,,,,100,,,,,100,100,100,100,100',
'100,,,,100,100,,,,,,100,100,,,100,104,104,104,,104,100,100,,104,104',
',,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104,104,104,104',
',,104,,,,,,,104,,,104,104,104,104,104,104,104,,104,104,104,,104,104',
',104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,104,,,,,,104,,,,,,,,104',
',,,,104,104,104,104,104,104,,,,104,104,,,,,,,104,,,104,105,105,105,',
'105,104,104,,105,105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105',
'105,105,105,105,105,,,105,,,,,,,105,,,105,105,105,105,105,105,105,,105',
'105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,105,',
',,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,,,,,105',
',,105,106,106,106,,106,105,105,,106,106,,,,106,,106,106,106,106,106',
'106,106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,,106,,,106,106,106',
'106,106,106,106,,106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,,,,,,106',
',,106,,,106,,106,,,,,,106,,,,,,,,106,,,,,106,106,106,106,106,106,,,',
'106,106,,,,,,,106,,,106,107,107,107,,107,106,106,,107,107,,,,107,,107',
'107,107,107,107,107,107,,,,,,107,107,107,107,107,107,107,,,107,,,,,',
',107,,,107,107,107,107,107,107,107,,107,107,107,,107,107,,107,107,,',
',,,,,,,,,,,,,,,,,,107,,,107,,,107,,107,,,,,,107,,,,,,,,107,,,,,107,107',
'107,107,107,107,,,,107,107,,,,,,,107,,,107,108,108,108,108,108,107,107',
',108,108,,,,108,,108,108,108,108,108,108,108,,,,,,108,108,108,108,108',
'108,108,,,108,,,,,,108,108,,108,108,108,108,108,108,108,108,,108,108',
'108,,108,108,,108,108,,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,,108,,108',
',,,108,,,,,,,,108,,,,,108,108,108,108,108,108,,,,108,108,,,,,,,108,',
',108,109,109,109,109,109,108,108,,109,109,,,,109,,109,109,109,109,109',
'109,109,,,,,,109,109,109,109,109,109,109,,,109,,,,,,109,109,109,109',
'109,109,109,109,109,109,109,,109,109,109,,109,109,,109,109,,,,,,,,,',
',,,,,,,,,,,109,,,109,,,109,,109,,109,,,,109,,,,,,,,109,,,,,109,109,109',
'109,109,109,,,,109,109,,,,,,,109,,,109,938,938,938,,938,109,109,,938',
'938,,,,938,,938,938,938,938,938,938,938,,,,,,938,938,938,938,938,938',
'938,,,938,,,,,,,938,,,938,938,938,938,938,938,938,,938,938,938,,938',
'938,,938,938,,,,,,,,,,,,,,,,,,,,,938,,,938,,,938,,938,,938,,,,938,,',
',,,,,938,,,,,938,938,938,938,938,938,,,,938,938,,,,,,,938,,,938,196',
'196,196,196,196,938,938,,196,196,,,,196,,196,196,196,196,196,196,196',
',,,,,196,196,196,196,196,196,196,,,196,,,,,,196,196,,196,196,196,196',
'196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,,,,,,196',
',,196,,,196,,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196,196,196',
',,,196,196,,,,,,,196,,,196,197,197,197,,197,196,196,,197,197,,,,197',
',197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197',
',,,,,,197,,,197,197,197,197,197,197,197,,197,197,197,,197,197,,197,197',
',,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,197,,197,,,,197,,,,,,,,197,,,,',
'197,197,197,197,197,197,,,,197,197,,,,,,,197,,,197,198,198,198,,198',
'197,197,,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198,198',
'198,198,198,198,,,198,,,,,,,198,,,198,198,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,198,,,,,',
'198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,,,,,,198,,,198',
'199,199,199,,199,198,198,,199,199,,,,199,,199,199,199,199,199,199,199',
',,,,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199',
'199,199,199,199,199,199,,199,199,,199,199,,,,,,,,,,,,,,,,,,,,,199,,',
'199,,,199,,199,,199,,,,199,,,,,,,,199,,,,,199,199,199,199,199,199,,',
',199,199,,,,,,,199,,,199,,199,,,,199,199,200,200,200,,200,,,,200,200',
',,,200,,200,200,200,200,200,200,200,,,,,,200,200,200,200,200,200,200',
',,200,,,,,,,200,,,200,200,200,200,200,200,200,200,200,200,200,,200,200',
',200,200,,,,,,,,,,,,,,,,,,,,,200,,,200,,,200,,200,,200,,,,200,,,,,,',
',200,,,,,200,200,200,200,200,200,,,,200,200,,,,,,,200,,,200,,200,,,',
'200,200,204,204,204,,204,,,,204,204,,,,204,,204,204,204,204,204,204',
'204,,,,,,204,204,204,204,204,204,204,,,204,,,,,,,204,,,204,204,204,204',
'204,204,204,,204,204,204,,204,204,,204,204,,,,,,,,,,,,,,,,,,,,,204,',
',204,,,204,,204,,,,,,204,,,,,,,,204,,,,,204,204,204,204,204,204,,,,204',
'204,,,,,,,204,,,204,205,205,205,,205,204,204,,205,205,,,,205,,205,205',
'205,205,205,205,205,,,,,,205,205,205,205,205,205,205,,,205,,,,,,,205',
',,205,205,205,205,205,205,205,,205,205,205,,205,205,,205,205,,,,,,,',
',,,,,,,,,,,,,205,,,205,,,205,,205,,205,,,,205,,,,,,,,205,,,,,205,205',
'205,205,205,205,,,,205,205,,,,,,,205,,,205,206,206,206,,206,205,205',
',206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206,206,206,206,206',
'206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206,,206,206,206,',
'206,206,,206,206,,,,,,,,,,,,,,,,,,,,,206,,,206,,,206,,206,,,,,,206,',
',,,,,,206,,,,,206,206,206,206,206,206,,,,206,206,,,,,,,206,,,206,207',
'207,207,,207,206,206,,207,207,,,,207,,207,207,207,207,207,207,207,,',
',,,207,207,207,207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207',
'207,207,,207,207,207,,207,207,,207,207,,,,,,,,,,,,,,,,,,,,,207,,,207',
',,207,,207,,,,,,207,,,,,,,,207,,,,,207,207,207,207,207,207,,,,207,207',
',,,,,,207,,,207,923,923,923,,923,207,207,,923,923,,,,923,,923,923,923',
'923,923,923,923,,,,,,923,923,923,923,923,923,923,,,923,,,,,,,923,,,923',
'923,923,923,923,923,923,,923,923,923,,923,923,,,,,,,,,,,,,,,,,,,,,,',
',923,,,923,,,923,,923,,,,,,,,,,,,,,,,,,,923,923,923,923,923,923,,,,923',
'923,,,,,,,923,,,923,919,919,919,919,919,923,923,,919,919,,,,919,,919',
'919,919,919,919,919,919,,,,,,919,919,919,919,919,919,919,,,919,,,,,',
'919,919,,919,919,919,919,919,919,919,919,,919,919,919,,919,919,,919',
'919,,,,,,,,,,,,,,,,,,,,,919,,,919,,,919,,919,,919,,,,919,,,,,,,,919',
',,,,919,919,919,919,919,919,,,,919,919,,,,,,,919,,,919,915,915,915,',
'915,919,919,,915,915,,,,915,,915,915,915,915,915,915,915,,,,,,915,915',
'915,915,915,915,915,,,915,,,,,,,915,,,915,915,915,915,915,915,915,915',
'915,915,915,,915,915,,915,915,,,,,,,,,,,,,,,,,,,,,915,,,915,,,915,,915',
',,,915,,915,,,,,,,,915,,,,444,915,915,915,915,915,915,444,444,444,915',
'915,,444,444,,444,,915,,,915,,915,,444,,915,915,,,,,,,,444,444,,444',
'444,444,444,444,,,,,,,,,,,,,,,,,,,,,,444,444,444,444,444,444,444,444',
'444,444,444,444,444,444,444,,,444,444,444,,444,,,,444,,,,,,444,,444',
',444,444,444,444,444,444,444,,444,444,444,,,,,,,,,,,,,444,444,,444,',
'444,,669,444,,444,,,444,669,669,669,,,669,669,669,,669,,,,,,,,,,669',
'669,,,,,,,,,669,669,,669,669,669,669,669,,,,,,,,,,,,,,,,,,,,,,669,669',
'669,669,669,669,669,669,669,669,669,669,669,669,669,,,669,669,669,,669',
'669,,,669,,669,,669,,669,,669,,669,669,669,669,669,669,669,,669,,669',
',,,,,,,,,,,,669,669,669,669,,669,,446,669,,669,,,669,446,446,446,,,',
'446,446,,446,,,,,,,,,,,,,,,,,,,,446,446,,446,446,446,446,446,,,,,,,',
',,,,,,,,,,,,,,446,446,446,446,446,446,446,446,446,446,446,446,446,446',
'446,,,446,446,446,,446,,,,446,,,,,,446,,446,,446,446,446,446,446,446',
'446,,446,,446,,,,,,,,,,,,,446,446,,446,,446,,668,446,,446,,,446,668',
'668,668,,,668,668,668,,668,,,,,,,,,668,668,668,,,,,,,,,668,668,,668',
'668,668,668,668,,,,,,,,,,,,,,,,,,,,,,668,668,668,668,668,668,668,668',
'668,668,668,668,668,668,668,,,668,668,668,,668,668,,,668,,668,,668,',
'668,,668,,668,668,668,668,668,668,668,,668,668,668,,,,,,,,,,,,,668,668',
'668,668,,668,,26,668,,668,,,668,26,26,26,,,26,26,26,,26,,,,,,,,,,26',
'26,,,,,,,,,26,26,,26,26,26,26,26,,,,,,,,,,,,,,,,,,,,,,26,26,26,26,26',
'26,26,26,26,26,26,26,26,26,26,,,26,26,26,,,26,,26,26,,26,,26,,26,,26',
',26,26,26,26,26,26,26,,26,,26,,,,,,,,,,,,,26,26,26,26,25,26,,,26,,26',
'25,25,25,,,25,25,25,,25,,,,,,,,,25,25,25,,,,,,,,,25,25,,25,25,25,25',
'25,,,,,,,,,,,,,,,,,,,,,,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25',
',,25,25,25,,,25,,25,25,,25,,25,,25,,25,,25,25,25,25,25,25,25,,25,25',
'25,,,,,,,,,,,,,25,25,25,25,450,25,,,25,,25,450,450,450,,,450,450,450',
',450,,,,,,,,,450,450,450,,,,,,,,,450,450,,450,450,450,450,450,,,,,,',
',,,,,,,,,,,,,,,450,450,450,450,450,450,450,450,450,450,450,450,450,450',
'450,,,450,450,450,,,450,,450,450,,450,,450,,450,,450,,450,450,450,450',
'450,450,450,,450,450,450,,,,,,,,,,,,,450,450,450,450,440,450,,,450,',
'450,440,440,440,,,440,440,440,,440,,,,,,,,,440,440,440,,,,,,,,,440,440',
',440,440,440,440,440,,,,,,,,,,,,,,,,,,,,,,440,440,440,440,440,440,440',
'440,440,440,440,440,440,440,440,,,440,440,440,,,440,,440,440,,440,,440',
',440,,440,,440,440,440,440,440,440,440,,440,440,440,,,,,,,,,,,,,440',
'440,440,440,51,440,,,440,,440,51,51,51,,,51,51,51,,51,,,,,,,,,,51,51',
'51,,,,,,,,51,51,,51,51,51,51,51,,,,,,,,,,,,,,,,,,,,,,51,51,51,51,51',
'51,51,51,51,51,51,51,51,51,51,,,51,51,51,,,51,,,51,,51,,51,,51,,51,',
'51,51,51,51,51,51,51,,51,,51,,,,,,,,,,,,,51,51,51,51,500,51,,51,51,',
'51,500,500,500,,,500,500,500,,500,,,,,,,,,,500,,,,,,,,,,500,500,,500',
'500,500,500,500,,,,,,,,,,,,502,,,,,,,502,502,502,,,502,502,502,,502',
',,,,500,500,,,,502,,,500,,,,,500,500,502,502,,502,502,502,502,502,,',
',,,,,,,,,500,,,,,,,,,,,,,500,,500,,,500,,,502,502,,501,,,,,502,,501',
'501,501,502,502,501,501,501,,501,,,,,,,,,,501,,,,,502,,,,,501,501,,501',
'501,501,501,501,502,,502,,,502,464,464,,,464,,,,,,,,,464,464,464,464',
'464,464,464,464,464,,,464,464,501,501,,,464,464,464,464,501,,,,,501',
'501,,,,,464,464,,464,464,464,464,464,464,464,464,464,464,464,,501,464',
',,,,,,,,,,,501,,501,,,501,423,423,423,423,423,423,423,423,423,423,423',
'423,423,423,423,423,423,423,423,423,423,423,423,423,,,,423,423,423,423',
'423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423',
'423,423,,,423,,,,,,,,,423,423,423,423,423,423,423,423,423,,,423,423',
',,,,423,423,423,423,,,,,,,,,,,,423,423,,423,423,423,423,423,423,423',
'423,423,423,423,,,423,423,,,,,,,,,,423,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
',7,,,,,,,,,7,7,7,7,7,7,7,7,7,,,7,7,,,,,7,7,7,7,,,,,,,,,,,,7,7,,7,7,7',
'7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,8,,,',
',,,,,8,8,8,8,8,8,8,8,8,,,8,8,,,,,8,8,8,8,,,,,,,,,,,,8,8,,8,8,8,8,8,8',
'8,8,8,8,8,,,8,8,,,,,,,,,,8,427,427,427,427,427,427,427,427,427,427,427',
'427,427,427,427,427,427,427,427,427,427,427,427,427,,,,427,427,427,427',
'427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427',
'427,427,,,427,,,,,,,,,427,427,427,427,427,427,427,427,427,,,427,427',
',,,,427,427,427,427,,,,,,,,,,,,427,427,,427,427,427,427,427,427,427',
'427,427,427,427,,,427,427,,,,,,,,,,427,791,791,791,791,791,791,791,791',
'791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,,,,791',
'791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791',
'791,791,791,791,791,,,791,,,,,,,,,791,791,791,791,791,791,791,791,791',
',,791,791,,,,,791,791,791,791,,,,,,,,,,,,791,791,,791,791,791,791,791',
'791,791,791,791,791,791,,,791,80,80,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,,,,80,80,80,80,80,80,80,80,80,80,80',
'80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,,80,,,,,,,80,80,80,80,80',
'80,80,80,80,,,80,80,,,,,80,80,80,80,,,,,,,,,,,,80,80,,80,80,80,80,80',
'80,80,80,80,80,80,,,80,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,,,,66,66,66,66,66,66,66,66,66,66,66,66,66',
'66,66,66,66,66,66,66,66,66,66,66,66,66,,66,,,,,,,66,66,66,66,66,66,66',
'66,66,,,66,66,,,,,66,66,66,66,,,,,,66,,,,,,66,66,,66,66,66,66,66,66',
'66,66,66,66,66,1001,1001,66,,1001,,,,,,,,,1001,1001,1001,1001,1001,1001',
'1001,1001,1001,,,1001,1001,,,,,1001,1001,1001,1001,,,,,,1001,,,,,,1001',
'1001,,1001,1001,1001,1001,1001,1001,1001,1001,1001,1001,1001,251,251',
'1001,,251,,,,,,,,,251,251,251,251,251,251,251,251,251,,,251,251,,,,',
'251,251,251,251,,,,,,,,,,,,251,251,,251,251,251,251,251,251,251,251',
'251,251,251,1002,1002,251,,1002,,,,,,,,,1002,1002,1002,1002,1002,1002',
'1002,1002,1002,,,1002,1002,,,,,1002,1002,1002,1002,,,,,,,,,,,,1002,1002',
',1002,1002,1002,1002,1002,1002,1002,1002,1002,1002,1002,614,614,1002',
',614,,,,,,,,,614,614,614,614,614,614,614,614,614,,,614,614,,,,,614,614',
'614,614,,,,,,,,,,,,614,614,,614,614,614,614,614,614,614,614,614,614',
'614,550,550,614,,550,,,,,,,,,550,550,550,550,550,550,550,550,550,,,550',
'550,,,,,550,550,550,550,,,,,,,,,,,,550,550,,550,550,550,550,550,550',
'550,550,550,550,550,607,607,550,,607,,,,,,,,,607,607,607,607,607,607',
'607,607,607,,,607,607,,,,,607,607,607,607,,,,,,607,,,,,,607,607,,607',
'607,607,607,607,607,607,607,607,607,607,608,608,607,,608,,,,,,,,,608',
'608,608,608,608,608,608,608,608,,,608,608,,,,,608,608,608,608,,,,,,',
',,,,,608,608,,608,608,608,608,608,608,608,608,608,608,608,549,549,608',
',549,,,,,,,,,549,549,549,549,549,549,549,549,549,,,549,549,,,,,549,549',
'549,549,,,,,,549,,,,,,549,549,,549,549,549,549,549,549,549,549,549,549',
'549,742,742,549,,742,,,,,,,,,742,742,742,742,742,742,742,742,742,,,742',
'742,,,,,742,742,742,742,,,,,,,,,,,,742,742,,742,742,742,742,742,742',
'742,742,742,742,742,463,463,742,,463,,,,,,,,,463,463,463,463,463,463',
'463,463,463,,,463,463,,,,,463,463,463,463,,,,,,463,,,,,,463,463,,463',
'463,463,463,463,463,463,463,463,463,463,202,202,463,,202,,,,,,,,,202',
'202,202,202,202,202,202,202,202,,,202,202,,,,,202,202,202,202,,,,,,',
',,,,,202,202,,202,202,202,202,202,202,202,202,202,202,202,201,201,202',
',201,,,,,,,,,201,201,201,201,201,201,201,201,201,,,201,201,,,,,201,201',
'201,201,,,,,,201,,,,,,201,201,,201,201,201,201,201,201,201,201,201,201',
'201,538,538,201,,538,,,,,,,,,538,538,538,538,538,538,538,538,538,,,538',
'538,,,,,538,538,538,538,,,,,,,,,,,,538,538,,538,538,538,538,538,538',
'538,538,538,538,538,535,535,538,,535,,,,,,,,,535,535,535,535,535,535',
'535,535,535,,,535,535,,,,,535,535,535,535,,,,,,535,,,,,,535,535,,535',
'535,535,535,535,535,535,535,535,535,535,536,536,535,,536,,,,,,,,,536',
'536,536,536,536,536,536,536,536,,,536,536,,,,,536,536,536,536,,,,,,',
',,,,,536,536,,536,536,536,536,536,536,536,536,536,536,536,616,616,536',
',616,,,,,,,,,616,616,616,616,616,616,616,616,616,,,616,616,,,,,616,616',
'616,616,,,,,,616,,,,,,616,616,,616,616,616,616,616,616,616,616,616,616',
'616,249,249,616,,249,,,,,,,,,249,249,249,249,249,249,249,249,249,,,249',
'249,,,,,249,249,249,249,,,,,,,,,,,,249,249,,249,249,249,249,249,249',
'249,249,249,249,249,250,250,249,,250,,,,,,,,,250,250,250,250,250,250',
'250,250,250,,,250,250,,,,,250,250,250,250,,,,,,,,,,,,250,250,,250,250',
'250,250,250,250,250,250,250,250,250,203,203,250,,203,,,,,,,,,203,203',
'203,203,203,203,203,203,203,,,203,203,,,,,203,203,203,203,,,,,,,,,,',
',203,203,,203,203,203,203,203,203,203,203,203,203,203,,,203' ]
        racc_action_check = arr = ::Array.new(25535, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4321,   620,   nil,   -86,   nil,   999,  1045, 23719, 23840,  1043,
   nil,  1015,   695,   679,   476,   640,   398,   nil, 16113, 16244,
  2356,   732,   nil,   542,   -15, 22829, 22702, 16375, 16513, 16651,
   nil, 16789, 16920, 17051,   nil,   632,   563,   699,   527, 17444,
 17575, 17706,   627,   941,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 23210,   nil, 17837, 17968, 18106,   -22,  9202, 18244, 18375,
   nil,   nil, 18506, 18637, 18768,   nil, 24302,   nil,   nil,   nil,
   nil,   nil,   -31,   nil,   nil,   nil,   nil,   nil,   618,   607,
 24192,   nil,   nil,   nil,   587, 19161,   nil,   nil, 19299,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   696,   nil,
 19568,   nil,   nil,   nil, 19699, 19830, 19961, 20092, 20223, 20354,
   nil,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   564,   nil, 20616, 20747, 20878, 21009,
 21147, 25010, 24951, 25423, 21285, 21416, 21547, 21678,   nil,   548,
   112,   608,   -51,   514,   556,   522,   653,   nil,   nil,   784,
   544,  1046,  1177,  1308,  1439,  1570,  1701,  1832,  1963,  2094,
  2225,  2356,  2487,  2618,  2749,  2880,  3011,  3142,  3273,  3404,
  3535,  3666,  3797,  3928,  4059,  4190,   nil,   nil,   nil, 25305,
 25364, 24420,   536,  4452,  4590,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  4728,   nil,  2487,   nil,   479,   468,   nil,  4997,
   490,  5128,   nil,   nil,  5259,  5390,   nil,   nil,   132,  1130,
   432,  5521,   424,   411,   355,  5783,  5914,   229,   747,   396,
   264,   nil,   314,   260,   -14,   nil,   nil,   nil,   248,   179,
   207,  6307,   nil,   344,    89,  1101,   810,   nil,  1092,   nil,
  6962,   nil,  7093,   586,  1024,   nil,  1023,   261,   458,  1037,
  1003,   466,  1024,   nil,   nil,    12, 16933,   nil,   nil,   nil,
   982,   969,   964,   962,   nil,   961,   957,   nil,   nil,   nil,
  1032,   nil,  8403,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   931,   nil,   nil,   nil,  1005,   nil,   nil,   965,   609,   176,
   131,  8927,  9058,   146,   154,   854,     0,  1072,   920,    15,
   946,   nil,   nil,  4452,   907,   nil,  1203,   nil,    68,   nil,
   nil,  9713,   369,   287,   148,   153,   223,   284,   381,    22,
   nil,   418,   nil, 10513,   nil,   416,   nil,   374,   nil,   -18,
   831,   238,   nil,   822,   -52,   nil,   429,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   830, 23598,   nil,   nil,   nil, 23961,   819,   nil,
   801,   nil, 11037,   794,   nil,  2618,   823,   822,   464,   475,
 23083,   nil,   nil,   nil, 22182,   803, 22442,   nil, 11561, 11699,
 22956,   nil,   nil,   nil,  2749,   nil,   754,   nil,   nil,  1832,
   nil,   nil,   nil, 24892, 23471, 11968, 12106,   116, 12375, 12506,
 12637,   120,   nil,  4321,  4590,   -20,   373,   824,   820,   819,
   817,  5384,  5652,  5521,  5128,  1570,  1308,  1439,  1701,  5259,
  4452,  4190,  4059,  4866,   808,   677,  4728,  4997, 14375,    65,
 23337, 23471, 23392,   -13,   nil,   707,   nil,   nil,   700,   699,
   nil,    -8,   -35,   731,   nil,   nil, 15168,   nil, 15306,   nil,
 15444,   nil,   167,   nil,   nil,   nil,   129,   730,   685,   nil,
   nil,   674, 15713,   719, 15575, 25128, 25187, 15030, 25069,   260,
   738,   nil,   nil, 14899,   702,   nil, 14768, 14637, 14506, 24774,
 24597,  2880, 14244,   836,   837,   726,   761,   nil,   nil, 14106,
   nil,   nil, 13968,   nil,   nil,   nil,   nil, 13837, 13706,   773,
   nil, 18650,   nil,   nil, 13575,   412,   nil,   nil,   555, 17064,
   nil,  1722,   nil,   nil,   878,   813,   nil,   781,   nil,   800,
   nil,   748,   433,   nil,   nil, 13444,   864,   nil,   nil, 13313,
   203,   221,   863,   872, 13182,   nil, 13044, 24656, 24715, 12906,
   -18,   nil,  1140,   nil, 24538, 12768, 25246,   nil,   nil, 12244,
   224, 11837,   nil, 15726,   nil,   nil,   nil,    30,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   345,   nil,
   nil,   nil,   780,   nil,   nil,   nil,   nil,   nil,   786, 11430,
   478,   -29, 11299, 11168,   830,   nil,   nil,   nil, 10906,   834,
   nil, 10775,   837,   nil,    -2, 10644,   179,   186, 22572, 22312,
   860,   864,  1963,   nil,  2094,   nil,  8416,   nil, 10382,   nil,
   nil,   nil,   nil,   nil,   nil, 10251,   nil,   867, 10113,  9975,
  9844,  9582,   nil,   832,   nil,   872,  9451,   nil,   nil,  9320,
  1085,   -56,  9189,   851,   nil,   888,    85,   279,   905,   342,
   252,   909,   910,   915,   879,  8796,  3011,   945,   947,   -11,
   999,  8665,   nil,   926,   nil,   442,   nil,   910,  1012,   nil,
   nil,   nil,   897,   909,   286,   917,   nil,   nil,   919,   920,
   nil,   925, 24833,   nil,   nil,   968,   669,   933,  1193,   486,
   nil,  1046,   nil,   nil,   nil,   nil,   nil,  1053,   nil,  1062,
  8534,   981,    29,    -2,    80,   105,   997,  8272,  2005,   nil,
  1003,  1009,  8141,   388,   nil,   343,  8010,  7879, 14912,   368,
  7748,   nil,  1004,  1007,   nil,  1009,  1010,  1012,   nil,  1005,
   nil, 24082,  1053,   679,  7617,   nil,   nil,   nil,  1018,  7486,
  7355,  7224,   nil,  3142,   nil,  3273,   nil,   nil,  3404,   nil,
  3535,   nil,  3666,  6831,  6700,  6569,   -63,    98,   nil,  1046,
  1070,  1054,  1173,   -96,   nil,   -63,    -7,   108,   nil,   nil,
   nil,    19,   301,   nil,   nil,   nil,   241,   nil,  6438,   147,
   219,   nil,   nil,   nil,   nil,   nil,   nil,  1591,   nil,  1460,
   nil,   nil, 13588,   nil,  1329,   nil,   nil,   296,   nil,   nil,
   465,  1429,   281,   407,   nil,  6176,   447,  6045,  5652,   nil,
   nil,    90,    40,   616,   334,   nil,   522,   nil,   nil,   529,
   549,   440,   nil,   nil,   363,   nil,   nil,  6320,   nil,  5796,
   nil,   674,   nil,  4866,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   499,   490,   nil,  3797,   nil,  2225,   915,   391,   260,
   812,   nil,   552,   nil,   nil, 22071,   nil,   nil,   nil, 21940,
   nil,   nil,    80, 21809,   nil,   539,   540,   541,   543,   552,
  1298,   554,  1324,   nil,     0,   nil,   685,   686, 20485, 19437,
   nil,   nil, 19030,   nil,   nil,   607,   nil,   582,   nil,   586,
   589,   592,   594,   nil,   607,   nil,  9726,   nil,  3928,   480,
   nil,   nil,   nil,   nil,   nil, 18899,   211,  1009,   694,   110,
   nil,   nil,  1198,   nil,   nil,   nil,  1062,   625, 17313,   nil,
   nil,   nil,   313, 17182,   745,   nil,   nil,  8809,   nil,  1067,
   nil,   936,   nil,   805,   nil,   nil, 15982,   nil,   943,   754,
 15844, 24361, 24479,    84,   657,   658,   614,   nil,   nil,   nil,
   780,   nil,   667,   670,   671,   672,   830,   nil,   nil,   915,
    72,   215,   207,    76,   nil,   nil,   nil,   543,   nil,   nil,
   nil,   nil,   nil,    -7,   614,   nil ]

racc_action_default = [
    -3,  -592,    -1,  -580,    -4,    -6,  -592,  -592,  -592,  -592,
   -25,  -592,  -592,  -592,  -279,  -592,   -37,   -40,  -592,  -592,
   -45,   -47,   -48,   -49,  -260,  -260,  -260,  -294,  -332,  -333,
   -67,   -10,   -71,   -79,   -81,  -592,  -478,  -592,  -592,  -592,
  -592,  -592,  -582,  -238,  -272,  -273,  -274,  -275,  -276,  -277,
  -278,  -570,  -281,  -285,  -591,  -560,  -302,  -591,  -592,  -592,
  -307,  -310,  -580,  -592,  -592,  -324,  -592,  -334,  -335,  -420,
  -421,  -422,  -423,  -424,  -591,  -427,  -591,  -591,  -591,  -591,
  -591,  -454,  -461,  -462,  -592,  -467,  -468,  -469,  -470,  -471,
  -472,  -473,  -474,  -475,  -476,  -477,  -480,  -481,  -592,    -2,
  -581,  -587,  -588,  -589,  -592,  -592,  -592,  -592,  -592,    -3,
   -13,  -592,  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -115,
  -118,  -119,  -120,  -121,  -122,  -123,  -124,  -125,  -126,  -127,
  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,
  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,
  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,
  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,
  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,
  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,
  -188,  -189,  -190,  -191,   -18,  -116,   -10,  -592,  -592,  -591,
  -591,  -592,  -592,  -592,  -592,  -592,  -592,  -592,   -43,  -592,
  -478,  -592,  -279,  -592,  -592,   -10,  -592,   -44,  -228,  -592,
  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,
  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,  -592,
  -592,  -592,  -592,  -592,  -592,  -592,  -235,  -389,  -391,  -592,
  -592,  -592,   -54,  -591,  -592,  -301,  -395,  -403,  -405,   -62,
  -401,   -63,  -592,   -64,  -239,  -255,  -264,  -264,  -259,  -592,
  -265,  -592,  -591,  -562,  -592,  -592,   -65,   -66,  -580,   -11,
   -67,   -10,  -592,  -592,   -72,   -75,   -10,  -478,  -592,  -592,
  -279,  -294,  -297,  -582,  -592,  -332,  -333,  -336,  -402,  -592,
   -77,  -592,   -83,  -289,  -463,  -464,  -592,  -213,  -214,  -229,
  -592,  -583,   -10,  -283,  -582,  -240,  -582,  -584,  -584,  -592,
  -592,  -584,  -592,  -303,  -304,  -592,  -592,  -353,  -354,  -361,
  -591,  -522,  -557,  -557,  -371,  -591,  -591,  -388,  -487,  -488,
  -490,  -491,  -495,  -496,  -521,  -523,  -524,  -525,  -526,  -527,
  -592,  -544,  -549,  -550,  -552,  -553,  -554,  -592,   -46,  -592,
  -592,  -592,  -592,  -580,  -592,  -581,  -478,  -592,  -592,  -279,
  -592,  -529,  -530,  -104,  -592,  -106,  -592,  -279,  -592,  -321,
  -478,  -592,  -108,  -109,  -147,  -148,  -164,  -169,  -176,  -179,
  -327,  -592,  -558,  -592,  -425,  -592,  -440,  -592,  -442,  -592,
  -592,  -592,  -432,  -592,  -592,  -438,  -592,  -453,  -456,  -457,
  -458,  -459,  -465,  -466,  1036,    -5,  -590,   -19,   -20,   -21,
   -22,   -23,  -592,  -592,   -15,   -16,   -17,  -592,  -592,   -26,
   -35,   -36,  -592,  -592,   -27,  -194,  -592,  -592,  -571,  -572,
  -260,  -398,  -573,  -574,  -571,  -260,  -572,  -400,  -576,  -577,
  -260,  -571,  -572,   -33,  -202,   -34,  -592,   -38,   -39,  -192,
  -265,   -41,   -42,  -592,  -592,  -591,  -591,  -289,  -592,  -592,
  -592,  -592,  -300,  -203,  -204,  -205,  -206,  -207,  -208,  -209,
  -210,  -215,  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,
  -224,  -225,  -226,  -227,  -230,  -231,  -232,  -233,  -592,  -591,
  -260,  -260,  -260,  -591,   -55,  -582,  -250,  -251,  -264,  -264,
  -261,  -591,  -591,  -592,  -296,  -256,  -592,  -257,  -592,  -262,
  -592,  -266,  -592,  -565,  -567,    -9,  -581,  -592,   -68,  -287,
   -84,   -73,  -592,  -592,  -591,  -592,  -592,  -591,  -592,  -289,
  -592,  -463,  -464,  -592,   -80,   -85,  -592,  -592,  -592,  -592,
  -592,  -234,  -592,  -412,  -592,  -582,  -592,  -241,  -242,  -586,
  -585,  -244,  -586,  -292,  -293,  -561,  -350,   -10,   -10,  -592,
  -352,  -592,  -373,  -384,  -592,  -592,  -369,  -370,  -592,  -379,
  -381,  -592,  -386,  -489,  -494,  -592,  -522,  -592,  -531,  -592,
  -533,  -535,  -542,  -551,  -555,   -10,  -337,  -338,  -339,   -10,
  -592,  -592,  -592,  -592,   -10,  -407,  -591,  -592,  -592,  -591,
  -289,  -316,  -104,  -105,  -592,  -591,  -592,  -319,  -482,  -592,
  -592,  -592,  -325,  -520,  -329,  -578,  -579,  -582,  -426,  -441,
  -444,  -445,  -447,  -428,  -443,  -429,  -430,  -431,  -592,  -434,
  -436,  -437,  -592,  -460,    -7,   -14,  -117,   -24,  -271,  -592,
  -290,  -291,  -592,  -592,   -58,  -248,  -249,  -396,  -592,   -60,
  -399,  -592,   -56,  -397,  -592,  -592,  -571,  -572,  -571,  -572,
  -592,  -592,  -192,  -299,  -592,  -364,  -582,  -366,   -10,   -50,
  -392,   -51,  -393,   -52,  -394,   -10,  -246,  -592,  -252,  -254,
   -10,   -10,  -295,  -264,  -263,  -267,  -592,  -563,  -564,  -592,
   -12,   -68,  -592,   -76,   -82,  -592,  -571,  -572,  -591,  -575,
  -288,  -592,  -592,  -591,   -78,  -592,  -201,  -211,  -212,  -592,
  -591,  -591,  -282,  -592,  -286,  -584,  -245,  -592,  -592,  -351,
  -362,  -372,  -591,  -591,  -363,  -557,  -497,  -556,  -591,  -591,
  -545,  -591,  -592,  -289,  -528,  -592,  -592,  -540,  -592,  -591,
  -340,  -591,  -308,  -341,  -342,  -343,  -311,  -592,  -314,  -592,
  -592,  -592,  -571,  -572,  -575,  -288,  -592,  -592,  -104,  -107,
  -575,  -592,   -10,  -592,  -484,  -592,   -10,   -10,  -520,  -592,
  -493,  -498,  -557,  -557,  -503,  -505,  -505,  -505,  -519,  -522,
  -547,  -592,  -592,  -592,   -10,  -433,  -435,  -439,  -269,  -592,
  -592,  -592,   -30,  -197,   -31,  -198,   -59,   -32,  -199,   -61,
  -200,   -57,  -193,  -592,  -592,  -592,  -291,  -290,  -236,  -344,
  -592,  -582,  -592,  -592,  -247,  -264,  -592,  -592,  -258,  -268,
  -566,   -74,  -290,  -291,   -86,  -298,  -591,  -359,   -10,  -413,
  -591,  -414,  -415,  -284,  -243,  -355,  -356,  -592,  -382,  -592,
  -385,  -368,  -592,  -376,  -592,  -378,  -387,  -288,  -532,  -534,
  -538,  -592,  -543,  -592,  -357,  -592,  -592,   -10,   -10,  -313,
  -315,  -592,  -290,   -96,  -592,  -290,  -592,  -483,  -322,  -592,
  -592,  -582,  -486,  -492,  -592,  -501,  -502,  -592,  -512,  -592,
  -515,  -592,  -517,  -592,  -330,  -559,  -446,  -449,  -450,  -451,
  -452,  -592,  -270,   -28,  -195,   -29,  -196,  -592,  -592,  -592,
  -592,  -365,  -592,  -390,   -53,  -253,  -404,  -406,    -8,   -10,
  -419,  -360,  -592,  -592,  -417,  -591,  -591,  -591,  -591,  -536,
  -592,  -541,  -592,  -305,  -592,  -306,  -592,  -592,  -592,   -10,
  -317,  -320,   -10,  -326,  -328,  -592,  -499,  -557,  -504,  -505,
  -505,  -505,  -505,  -548,  -505,  -546,  -520,  -448,  -237,  -582,
  -346,  -348,  -349,  -367,  -418,   -10,  -478,  -592,  -592,  -279,
  -416,  -383,  -592,  -374,  -377,  -380,  -592,  -539,   -10,  -309,
  -312,  -267,  -591,   -10,  -592,  -485,  -500,  -592,  -508,  -592,
  -510,  -592,  -513,  -592,  -516,  -518,   -10,  -345,  -592,  -412,
  -591,  -592,  -592,  -289,  -591,  -537,  -591,  -408,  -409,  -410,
  -592,  -323,  -505,  -505,  -505,  -505,  -592,  -347,  -411,  -592,
  -571,  -572,  -575,  -288,  -375,  -358,  -318,  -592,  -506,  -509,
  -511,  -514,  -331,  -290,  -505,  -507 ]

clist = [
'13,390,5,265,265,265,603,115,115,256,260,554,504,327,720,408,310,544',
'209,209,319,12,284,337,297,297,378,209,209,209,316,13,288,288,100,359',
'360,458,103,363,863,431,517,440,445,450,788,576,577,455,777,300,12,209',
'209,297,297,99,209,209,740,280,209,367,376,730,115,752,756,266,266,266',
'118,118,395,595,599,613,859,587,115,417,418,419,420,119,119,836,110',
'195,217,500,501,502,558,561,862,103,565,2,13,960,5,956,209,209,209,209',
'13,13,421,5,663,629,14,282,364,959,866,639,820,12,953,697,267,267,267',
'325,678,12,12,962,685,566,738,423,372,263,276,277,690,691,694,194,694',
'14,290,290,918,248,397,399,321,573,406,499,511,512,580,582,1007,760',
'680,682,684,436,437,697,840,922,394,401,638,404,896,316,316,369,377',
'793,794,407,881,415,946,726,736,949,909,1017,1,252,259,261,498,505,13',
'209,209,209,209,788,449,686,209,209,209,209,422,931,392,320,323,324',
'14,13,209,12,370,962,953,617,14,14,391,624,312,555,314,265,265,361,867',
'362,868,767,12,983,265,433,629,772,621,942,757,381,776,433,703,623,791',
'588,,209,209,,,,15,714,,,209,,859,912,,540,429,434,,,522,,,453,457,297',
'977,256,,13,569,260,517,288,13,,556,15,557,545,337,297,697,508,266,1025',
',,,288,12,531,266,440,445,12,,526,14,280,13,103,694,694,280,769,745',
',,371,,,1005,945,,,,14,740,,525,12,297,,,,600,601,,940,584,622,,,730',
',,1008,509,267,,,,,796,322,15,267,,209,209,507,510,527,15,15,740,,533',
',513,297,,663,,708,,788,713,376,,996,,,,,,,,708,,209,,14,,,103,290,14',
',,732,,,,,,,,739,,618,806,290,,602,831,809,,283,811,115,,656,14,115',
',,660,670,671,,,656,,,,,,316,316,,,,,,,708,851,,,,15,787,377,,708,,1018',
',,456,449,209,209,,828,,,876,,15,740,879,880,,,687,,,,,,656,656,656',
'118,,588,,118,747,,377,458,885,886,430,705,119,844,712,645,119,,460',
'646,,316,,,316,,,,,,,697,,545,,297,,13,,700,723,,,288,545,209,297,449',
'209,,15,,694,,288,15,,,12,,,449,,209,,,848,850,,,,,853,855,,856,841',
'297,13,13,,15,519,761,521,734,766,523,524,,,,771,316,,,316,428,939,12',
'12,,316,,,,13,773,,,13,828,792,,,13,283,209,654,449,209,787,,659,693',
'449,209,12,662,,209,12,209,,,1009,12,,,,,,,821,,,753,753,,965,,14,984',
'337,,,,290,588,,588,978,,209,209,,774,725,290,209,,,,986,,209,,,679',
'681,683,,283,,,,,283,,13,,,14,14,,926,13,,,377,,13,13,545,656,297,1016',
'660,,656,12,,,288,,,834,12,297,,14,,12,12,14,,288,,,14,950,,951,,802',
'804,,894,,,807,,,,,648,457,,,,,,,449,,874,,,,971,973,974,975,,,,,,,',
',,929,588,433,,,,209,,,,,13,,,,13,13,,,,,,,15,825,,,787,,,115,14,12',
'13,,,12,12,14,209,209,871,,14,14,,,877,,878,,,,882,12,290,36,695,1012',
'322,,698,,,15,15,1024,,290,,588,,588,,,,,13,,,,934,708,,,,,36,287,287',
',,15,,,,15,,12,,695,15,,322,209,,13,13,,,903,905,,,,,588,,,366,380,',
'380,,,14,735,12,12,14,14,733,,,,,,,,,,741,,,,,900,14,753,780,,,,,297',
',36,,13,,,456,967,,36,36,,,,,,,997,,783,15,,,13,12,,13,15,785,,,,15',
'15,,798,14,,,,,727,728,,12,,,12,,13,1019,,,,,,,,,,316,,13,,,14,14,13',
',749,12,,,751,695,322,,,759,,13,,829,12,209,830,449,,12,,,,,,,,,36,',
',,12,,,208,,,839,,,,,,,15,,36,14,15,15,,969,,,,,,,,,,,,,,,15,14,,313',
'14,,,,358,358,460,,358,780,,,822,,,,,,,823,,,,14,826,827,883,,,737,',
',737,,783,,14,,,,15,14,36,785,,902,287,36,,,358,358,358,358,14,,,,,',
',,287,,,,,,,15,15,315,,36,328,,,784,,,,,,,,,,,,,,396,,398,398,402,405',
'398,,,,,,380,,,,,,,,,925,,,780,,927,780,928,780,15,780,,,970,,,901,',
',,,,,,,,,955,947,15,380,783,15,783,,783,,,,,461,462,952,,954,,,,,322',
'471,,,,,15,218,,,,921,,,,264,264,264,,15,,,,981,15,,780,307,308,309',
',,,,,,,15,,,936,937,264,264,,,,,,,,783,,,,315,315,780,,780,785,780,',
'780,,,,,,,,784,,,,,1004,,,,,,783,,783,,783,,783,,,1013,964,1014,,1015',
',780,,,888,890,892,,,,,,,506,,,982,,,,,,,,,,783,,,,36,,396,,,1034,287',
',,,,,999,,,,,287,,,358,358,,,,1006,,,,,1010,,,,,,,,,,,36,36,,,,,,380',
',,737,627,,784,,784,,784,264,435,264,264,,,,454,459,,36,,,,36,,,,,36',
',,218,,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488',
'489,490,491,492,493,494,495,496,497,,,,,,,,264,264,,,,,,,784,264,,,',
',,,264,,264,,,264,264,988,990,992,994,,995,,,,,,,,,36,,784,,784,,784',
'36,784,,,,36,36,,,,,655,,551,,,,287,,,,655,,,,,,,,,287,,,,,784,315,315',
',,,,1028,1029,1030,1031,,,,,,,719,,,,,,,,,,,,1035,,,,,,675,655,655,655',
'675,,,,,,,,675,675,,,,36,,,,36,36,,,,,,,,,,,,,315,,,315,36,,,,,,,,,',
'358,,775,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,36,,,,,,,,,,,,,,,264,264',
',454,672,435,,,,315,,,315,,36,36,,,315,,,,,,,,,,,,,,,674,,,,,,,,,,,',
',,,,,,264,,264,,264,,,,,,,,,,,36,,,264,966,,264,,,,,,,,,716,717,718',
',,36,,,36,,,,,264,,,264,,358,,,,,,,,,,,,655,36,,,,655,,,,,,,837,842',
'36,,,,,36,,,,,,,,,,,264,,36,264,,,,,,264,,837,,837,,,,,,,,,,,,,,,,,294',
'294,,,,,,294,294,294,,,,264,,,803,805,,,,,808,294,,810,358,,672,812',
',294,294,,,,,,,,,,,,,,,,,,,,264,264,,,,,,,264,,,264,,,,,920,,,,924,',
',,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,',
',,,,,,,,264,,,,,,,,,,,,,,,,,,,264,904,906,,,,,,,,,,,,803,805,808,,,',
',,,,294,,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294',
'294,294,294,294,294,294,294,294,294,294,837,,,,,,,,,,,,,,,,,,315,,,',
',294,837,294,,,294,294,,,,,,,,,,294,,,,264,,,,,,,,,,,,294,,906,904,958',
',,,,294,264,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,294,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,294,294,294,,,,,,,,,',
',,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,294,,294,,294,,,,,,,,,,,,294',
',,,,,,,,,,294,,,294,294,294,,,,,,,,,,,294,,,294,,,,,,,,,,,,294,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',294,,,,,,,,,,,,294,,,,294,,,,,,,,,,,,,,,,,,,,,,,294,294,,,,,,,294,',
',294,,,294,,,,,,,,,,,,,294,,,,,,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,294,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,',
'294,294,294,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,294,,,,,,,,,,,,,,294,294,294,,,,,,294,,,,,,,,294',
',,,,,,,,,,,,,,294' ]
        racc_goto_table = arr = ::Array.new(2748, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,48,7,30,30,30,82,49,49,62,62,8,35,112,10,48,53,44,21,21,22,20,42',
'115,54,54,47,21,21,21,30,21,21,21,6,16,16,17,85,16,80,25,66,33,33,33',
'151,118,118,25,86,43,20,21,21,54,54,4,21,21,155,39,21,21,21,114,49,81',
'81,58,58,58,51,51,135,79,79,46,157,156,49,16,16,16,16,52,52,11,14,14',
'19,33,33,33,59,59,158,85,59,2,21,108,7,105,21,21,21,21,21,21,7,7,65',
'139,23,40,4,107,11,139,106,20,159,162,60,60,60,110,36,20,20,109,36,111',
'113,28,18,38,38,38,36,36,61,15,61,23,23,23,12,123,136,136,60,120,136',
'124,126,127,120,120,128,129,65,65,65,22,22,162,130,131,134,137,138,140',
'141,30,30,23,23,142,143,144,145,5,148,61,149,153,56,108,1,34,34,34,55',
'63,21,21,21,21,21,151,49,64,21,21,21,21,2,158,74,75,76,78,23,21,21,20',
'83,109,159,84,23,23,87,88,89,90,91,30,30,92,93,94,95,96,20,97,30,58',
'139,98,99,100,82,101,102,58,44,103,104,154,,21,21,,,,24,44,,,21,,157',
'106,,53,19,19,,,135,,,19,19,54,158,62,,21,112,62,66,21,21,,53,24,53',
'42,115,54,162,58,58,80,,,,21,20,43,58,33,33,20,,6,23,39,21,85,61,61',
'39,46,156,,,24,,,158,106,,,,23,155,,4,20,54,,,,16,16,,81,21,47,,,114',
',,11,60,60,,,,,139,26,24,60,,21,21,38,38,40,24,24,155,,40,,38,54,,65',
',33,,151,33,21,,86,,,,,,,,33,,21,,23,,,85,23,23,,,122,,,,,,,,122,,85',
'35,23,,4,44,35,,9,35,49,,62,23,49,,,62,22,22,,,62,,,,,,30,30,,,,,,,33',
'118,,,,24,122,23,,33,,10,,,24,49,21,21,,66,,,8,,24,155,8,8,,,53,,,,',
',62,62,62,51,,154,,51,154,,23,17,118,118,26,22,52,59,22,14,52,,26,14',
',30,,,30,,,,,,,162,,42,,54,,21,,7,53,,,21,42,21,54,49,21,,24,,61,,21',
'24,,,20,,,49,,21,,,120,120,,,,,120,120,,120,25,54,21,21,,24,26,22,26',
'21,22,26,26,,,,22,30,,,30,9,79,20,20,,30,,,,21,16,,,21,66,53,,,21,9',
'21,34,49,21,122,,34,60,49,21,20,34,,21,20,21,,,82,20,,,,,,,112,,,85',
'85,,79,,23,8,115,,,,23,154,,154,79,,21,21,,85,60,23,21,,,,118,,21,,',
'34,34,34,,9,,,,,9,,21,,,23,23,,122,21,,,23,,21,21,42,62,54,8,62,,62',
'20,,,21,,,42,20,54,,23,,20,20,23,,21,,,23,122,,122,,19,19,,48,,,19,',
',,,26,19,,,,,,,49,,16,,,,120,120,120,120,,,,,,,,,,154,154,58,,,,21,',
',,,21,,,,21,21,,,,,,,24,60,,,122,,,49,23,20,21,,,20,20,23,21,21,58,',
'23,23,,,85,,85,,,,85,20,23,45,26,122,26,,26,,,24,24,120,,23,,154,,154',
',,,,21,,,,16,33,,,,,45,45,45,,,24,,,,24,,20,,26,24,,26,21,,21,21,,,19',
'19,,,,,154,,,45,45,,45,,,23,117,20,20,23,23,121,,,,,,,,,,121,,,,,23',
'23,85,147,,,,,54,,45,,21,,,24,21,,45,45,,,,,,,53,,117,24,,,21,20,,21',
'24,121,,,,24,24,,26,23,,,,,9,9,,20,,,20,,21,22,,,,,,,,,,30,,21,,,23',
'23,21,,9,20,,,9,26,26,,,9,,21,,26,20,21,26,49,,20,,,,,,,,,45,,,,20,',
',27,,,26,,,,,,,24,,45,23,24,24,,23,,,,,,,,,,,,,,,24,23,,27,23,,,,27',
'27,26,,27,147,,,9,,,,,,,9,,,,23,9,9,26,,,119,,,119,,117,,23,,,,24,23',
'45,121,,26,45,45,,,27,27,27,27,23,,,,,,,,45,,,,,,,24,24,57,,45,57,,',
'119,,,,,,,,,,,,,,57,,57,57,57,57,57,,,,,,45,,,,,,,,,121,,,147,,121,147',
'121,147,24,147,,,24,,,9,,,,,,,,,,,26,117,24,45,117,24,117,,117,,,,,27',
'27,121,,121,,,,,26,27,,,,,24,29,,,,9,,,,29,29,29,,24,,,,26,24,,147,29',
'29,29,,,,,,,,24,,,9,9,29,29,,,,,,,,117,,,,57,57,147,,147,121,147,,147',
',,,,,,,119,,,,,121,,,,,,117,,117,,117,,117,,,121,9,121,,121,,147,,,152',
'152,152,,,,,,,57,,,9,,,,,,,,,,117,,,,45,,57,,,121,45,,,,,,9,,,,,45,',
',27,27,,,,9,,,,,9,,,,,,,,,,,45,45,,,,,,45,,,119,27,,119,,119,,119,29',
'29,29,29,,,,29,29,,45,,,,45,,,,,45,,,29,,29,29,29,29,29,29,29,29,29',
'29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,,,,,,,,29,29,,,,,,,119',
'29,,,,,,,29,,29,,,29,29,152,152,152,152,,152,,,,,,,,,45,,119,,119,,119',
'45,119,,,,45,45,,,,,57,,29,,,,45,,,,57,,,,,,,,,45,,,,,119,57,57,,,,',
'152,152,152,152,,,,,,,27,,,,,,,,,,,,152,,,,,,57,57,57,57,57,,,,,,,,57',
'57,,,,45,,,,45,45,,,,,,,,,,,,,57,,,57,45,,,,,,,,,,27,,27,,,,,,,,,,,',
',,29,,,,,,,,,,,,,,,,,,45,,,,,,,,,,,,,,,29,29,,29,29,29,,,,57,,,57,,45',
'45,,,57,,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,29,,29,,29,,,,,,,,,,,45,,',
'29,45,,29,,,,,,,,,29,29,29,,,45,,,45,,,,,29,,,29,,27,,,,,,,,,,,,57,45',
',,,57,,,,,,,57,57,45,,,,,45,,,,,,,,,,,29,,45,29,,,,,,29,,57,,57,,,,',
',,,,,,,,,,,,37,37,,,,,,37,37,37,,,,29,,,29,29,,,,,29,37,,29,27,,29,29',
',37,37,,,,,,,,,,,,,,,,,,,,29,29,,,,,,,29,,,29,,,,,57,,,,57,,,,,,,,,',
',,,29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,29',
',,,,,,,,,,,,,,,,,,29,29,29,,,,,,,,,,,,29,29,29,,,,,,,,37,,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,57,,',
',,,,,,,,,,,,,,,57,,,,,37,57,37,,,37,37,,,,,,,,,,37,,,,29,,,,,,,,,,,',
'37,,29,29,29,,,,,37,29,,,,,,,,,,,,,,,,,,,,,,,29,,,,,,,,37,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,29,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,37,37,,,,,,',
',,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,,,,,,37,,',
',,,,,,,,37,,,37,37,37,,,,,,,,,,,37,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,',
',,,,,,37,,,,37,,,,,,,,,,,,,,,,,,,,,,,37,37,,,,,,,37,,,37,,,37,,,,,,',
',,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,',
',,,,,,,,,37,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,37,37,37,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,',
',,,,,,,,,,,,37,37,37,,,,,,37,,,,,,,,37,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2748, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   190,    99,   nil,    54,    83,    31,     2,  -301,   390,
  -539,  -633,  -688,   nil,    81,   135,   -23,  -168,    73,    71,
    21,     0,   -34,   114,   258,  -156,   302,  1002,    25,  1205,
   -24,   nil,   nil,  -158,   167,  -240,  -371,  1809,   110,    30,
    84,   nil,   -10,    18,  -284,   817,  -297,   -38,   -65,     0,
   nil,    65,    78,   -26,    -8,   -52,  -630,  1073,    42,  -223,
    97,  -374,   -15,   -58,  -302,  -338,  -225,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   144,   156,   156,   nil,   156,  -284,
  -709,  -533,  -358,   155,  -157,    35,  -573,   158,  -166,   174,
   -86,   175,   171,  -520,   172,  -522,  -376,  -703,  -376,  -137,
  -635,   180,  -376,  -141,  -374,  -791,  -556,  -793,  -809,  -779,
    70,  -192,   -44,  -445,  -506,   -34,   nil,   312,  -285,   510,
  -177,   321,  -168,   128,   -92,   nil,  -101,  -101,  -822,  -444,
  -553,  -671,   nil,   nil,    98,     0,    74,    93,  -229,  -282,
    94,  -619,  -452,  -452,   101,  -596,   nil,   287,  -700,  -389,
   nil,  -577,   532,  -700,   -99,  -519,  -271,  -668,  -652,  -767,
   nil,   nil,  -395 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   365,   279,   nil,   553,
   nil,   864,   nil,   278,   nil,   nil,   nil,    10,    11,    17,
   214,   306,   nil,   212,   213,   nil,   270,    16,   nil,    20,
    21,    22,    23,   711,   nil,   nil,   nil,    24,   nil,    30,
   nil,    32,    35,    34,   nil,   210,   375,   nil,   117,   443,
   116,    70,    71,   819,    43,   nil,   nil,   572,   317,   nil,
   318,   268,   441,   nil,   nil,   657,   515,   254,    44,    45,
    46,    47,    48,    49,    50,   nil,   255,    56,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   344,
   nil,   nil,   nil,   330,   329,   731,   332,   333,   nil,   334,
   nil,   335,   336,   nil,   nil,   447,   nil,   nil,   nil,   nil,
   nil,   nil,    69,    72,    73,   nil,   nil,   nil,   nil,   634,
   nil,   nil,   nil,   nil,   nil,   779,   340,   342,   781,   343,
   782,   948,   nil,   786,   349,   351,   nil,   590,   591,   790,
   354,   357,   273 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 141, :_reduce_none,
  2, 142, :_reduce_2,
  0, 143, :_reduce_3,
  1, 143, :_reduce_4,
  3, 143, :_reduce_5,
  1, 145, :_reduce_none,
  4, 145, :_reduce_7,
  4, 148, :_reduce_8,
  2, 149, :_reduce_9,
  0, 153, :_reduce_10,
  1, 153, :_reduce_11,
  3, 153, :_reduce_12,
  0, 168, :_reduce_13,
  4, 147, :_reduce_14,
  3, 147, :_reduce_15,
  3, 147, :_reduce_none,
  3, 147, :_reduce_17,
  2, 147, :_reduce_18,
  3, 147, :_reduce_19,
  3, 147, :_reduce_20,
  3, 147, :_reduce_21,
  3, 147, :_reduce_22,
  3, 147, :_reduce_23,
  4, 147, :_reduce_none,
  1, 147, :_reduce_none,
  3, 147, :_reduce_26,
  3, 147, :_reduce_27,
  6, 147, :_reduce_none,
  6, 147, :_reduce_none,
  5, 147, :_reduce_30,
  5, 147, :_reduce_none,
  5, 147, :_reduce_none,
  3, 147, :_reduce_none,
  3, 147, :_reduce_34,
  3, 147, :_reduce_35,
  3, 147, :_reduce_36,
  1, 147, :_reduce_none,
  3, 157, :_reduce_38,
  3, 157, :_reduce_39,
  1, 167, :_reduce_none,
  3, 167, :_reduce_41,
  3, 167, :_reduce_42,
  2, 167, :_reduce_43,
  2, 167, :_reduce_44,
  1, 167, :_reduce_none,
  1, 156, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 171, :_reduce_none,
  4, 175, :_reduce_53,
  2, 170, :_reduce_54,
  3, 170, :_reduce_55,
  4, 170, :_reduce_56,
  5, 170, :_reduce_57,
  4, 170, :_reduce_58,
  5, 170, :_reduce_59,
  4, 170, :_reduce_60,
  5, 170, :_reduce_61,
  2, 170, :_reduce_62,
  2, 170, :_reduce_63,
  2, 170, :_reduce_64,
  2, 170, :_reduce_65,
  2, 170, :_reduce_66,
  1, 158, :_reduce_67,
  3, 158, :_reduce_68,
  1, 180, :_reduce_69,
  3, 180, :_reduce_70,
  1, 179, :_reduce_71,
  2, 179, :_reduce_72,
  3, 179, :_reduce_73,
  5, 179, :_reduce_74,
  2, 179, :_reduce_75,
  4, 179, :_reduce_76,
  2, 179, :_reduce_77,
  4, 179, :_reduce_78,
  1, 179, :_reduce_79,
  3, 179, :_reduce_80,
  1, 182, :_reduce_81,
  3, 182, :_reduce_82,
  2, 181, :_reduce_83,
  3, 181, :_reduce_84,
  1, 184, :_reduce_85,
  3, 184, :_reduce_86,
  1, 183, :_reduce_87,
  4, 183, :_reduce_88,
  3, 183, :_reduce_89,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  3, 183, :_reduce_none,
  2, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 164, :_reduce_95,
  4, 164, :_reduce_96,
  4, 164, :_reduce_97,
  3, 164, :_reduce_98,
  3, 164, :_reduce_99,
  3, 164, :_reduce_100,
  3, 164, :_reduce_101,
  2, 164, :_reduce_102,
  1, 164, :_reduce_none,
  1, 186, :_reduce_none,
  2, 187, :_reduce_105,
  1, 187, :_reduce_106,
  3, 187, :_reduce_107,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_none,
  1, 188, :_reduce_111,
  1, 188, :_reduce_112,
  1, 154, :_reduce_113,
  1, 154, :_reduce_none,
  1, 154, :_reduce_none,
  1, 155, :_reduce_116,
  3, 155, :_reduce_117,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  3, 169, :_reduce_192,
  5, 169, :_reduce_193,
  3, 169, :_reduce_194,
  6, 169, :_reduce_195,
  6, 169, :_reduce_196,
  5, 169, :_reduce_197,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  5, 169, :_reduce_none,
  4, 169, :_reduce_none,
  3, 169, :_reduce_none,
  3, 169, :_reduce_203,
  3, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  3, 169, :_reduce_210,
  4, 169, :_reduce_211,
  4, 169, :_reduce_212,
  2, 169, :_reduce_213,
  2, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  3, 169, :_reduce_218,
  3, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  3, 169, :_reduce_225,
  3, 169, :_reduce_226,
  3, 169, :_reduce_227,
  2, 169, :_reduce_228,
  2, 169, :_reduce_229,
  3, 169, :_reduce_230,
  3, 169, :_reduce_231,
  3, 169, :_reduce_232,
  3, 169, :_reduce_233,
  3, 169, :_reduce_234,
  0, 195, :_reduce_235,
  0, 196, :_reduce_236,
  7, 169, :_reduce_237,
  1, 169, :_reduce_none,
  1, 166, :_reduce_none,
  1, 162, :_reduce_240,
  2, 162, :_reduce_241,
  2, 162, :_reduce_242,
  4, 162, :_reduce_243,
  2, 162, :_reduce_244,
  3, 162, :_reduce_245,
  3, 202, :_reduce_246,
  2, 204, :_reduce_none,
  1, 205, :_reduce_248,
  1, 205, :_reduce_none,
  1, 203, :_reduce_250,
  1, 203, :_reduce_none,
  2, 203, :_reduce_252,
  4, 203, :_reduce_253,
  2, 203, :_reduce_254,
  1, 178, :_reduce_255,
  2, 178, :_reduce_256,
  2, 178, :_reduce_257,
  4, 178, :_reduce_258,
  1, 178, :_reduce_259,
  0, 207, :_reduce_260,
  2, 174, :_reduce_261,
  2, 201, :_reduce_262,
  2, 206, :_reduce_263,
  0, 206, :_reduce_264,
  1, 198, :_reduce_265,
  2, 198, :_reduce_266,
  3, 198, :_reduce_267,
  4, 198, :_reduce_268,
  3, 165, :_reduce_269,
  4, 165, :_reduce_270,
  2, 165, :_reduce_271,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  1, 194, :_reduce_none,
  0, 229, :_reduce_281,
  4, 194, :_reduce_282,
  0, 230, :_reduce_283,
  5, 194, :_reduce_284,
  0, 231, :_reduce_285,
  4, 194, :_reduce_286,
  3, 194, :_reduce_287,
  3, 194, :_reduce_288,
  2, 194, :_reduce_289,
  4, 194, :_reduce_290,
  4, 194, :_reduce_291,
  3, 194, :_reduce_292,
  3, 194, :_reduce_293,
  1, 194, :_reduce_294,
  4, 194, :_reduce_295,
  3, 194, :_reduce_296,
  1, 194, :_reduce_297,
  5, 194, :_reduce_298,
  4, 194, :_reduce_299,
  3, 194, :_reduce_300,
  2, 194, :_reduce_301,
  1, 194, :_reduce_none,
  2, 194, :_reduce_303,
  2, 194, :_reduce_304,
  6, 194, :_reduce_305,
  6, 194, :_reduce_306,
  0, 232, :_reduce_307,
  0, 233, :_reduce_308,
  7, 194, :_reduce_309,
  0, 234, :_reduce_310,
  0, 235, :_reduce_311,
  7, 194, :_reduce_312,
  5, 194, :_reduce_313,
  4, 194, :_reduce_314,
  5, 194, :_reduce_315,
  0, 236, :_reduce_316,
  0, 237, :_reduce_317,
  9, 194, :_reduce_318,
  0, 238, :_reduce_319,
  6, 194, :_reduce_320,
  0, 239, :_reduce_321,
  0, 240, :_reduce_322,
  8, 194, :_reduce_323,
  0, 241, :_reduce_324,
  0, 242, :_reduce_325,
  6, 194, :_reduce_326,
  0, 243, :_reduce_327,
  6, 194, :_reduce_328,
  0, 244, :_reduce_329,
  0, 245, :_reduce_330,
  9, 194, :_reduce_331,
  1, 194, :_reduce_332,
  1, 194, :_reduce_333,
  1, 194, :_reduce_334,
  1, 194, :_reduce_none,
  1, 161, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  2, 219, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 221, :_reduce_none,
  1, 246, :_reduce_344,
  4, 246, :_reduce_345,
  1, 247, :_reduce_346,
  3, 247, :_reduce_347,
  1, 248, :_reduce_348,
  1, 248, :_reduce_none,
  2, 218, :_reduce_350,
  3, 250, :_reduce_351,
  2, 250, :_reduce_352,
  1, 250, :_reduce_353,
  1, 250, :_reduce_none,
  3, 251, :_reduce_355,
  3, 251, :_reduce_356,
  1, 220, :_reduce_357,
  5, 220, :_reduce_358,
  1, 151, :_reduce_none,
  2, 151, :_reduce_360,
  1, 253, :_reduce_361,
  3, 253, :_reduce_362,
  3, 254, :_reduce_363,
  1, 176, :_reduce_none,
  3, 176, :_reduce_365,
  1, 176, :_reduce_366,
  4, 176, :_reduce_367,
  4, 255, :_reduce_368,
  2, 255, :_reduce_369,
  2, 255, :_reduce_370,
  1, 255, :_reduce_371,
  2, 260, :_reduce_372,
  1, 260, :_reduce_373,
  6, 252, :_reduce_374,
  8, 252, :_reduce_375,
  4, 252, :_reduce_376,
  6, 252, :_reduce_377,
  4, 252, :_reduce_378,
  2, 252, :_reduce_379,
  6, 252, :_reduce_380,
  2, 252, :_reduce_381,
  4, 252, :_reduce_382,
  6, 252, :_reduce_383,
  2, 252, :_reduce_384,
  4, 252, :_reduce_385,
  2, 252, :_reduce_386,
  4, 252, :_reduce_387,
  1, 252, :_reduce_388,
  0, 264, :_reduce_389,
  5, 263, :_reduce_390,
  2, 172, :_reduce_391,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  4, 172, :_reduce_none,
  2, 217, :_reduce_395,
  4, 217, :_reduce_396,
  4, 217, :_reduce_397,
  3, 217, :_reduce_398,
  4, 217, :_reduce_399,
  3, 217, :_reduce_400,
  2, 217, :_reduce_401,
  1, 217, :_reduce_402,
  0, 266, :_reduce_403,
  5, 216, :_reduce_404,
  0, 267, :_reduce_405,
  5, 216, :_reduce_406,
  0, 269, :_reduce_407,
  6, 222, :_reduce_408,
  1, 268, :_reduce_409,
  1, 268, :_reduce_none,
  6, 150, :_reduce_411,
  0, 150, :_reduce_412,
  1, 270, :_reduce_413,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  2, 271, :_reduce_416,
  1, 271, :_reduce_417,
  2, 152, :_reduce_418,
  1, 152, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 209, :_reduce_423,
  1, 273, :_reduce_none,
  2, 273, :_reduce_425,
  3, 274, :_reduce_426,
  1, 274, :_reduce_427,
  3, 210, :_reduce_428,
  3, 211, :_reduce_429,
  3, 212, :_reduce_430,
  3, 212, :_reduce_431,
  1, 277, :_reduce_432,
  3, 277, :_reduce_433,
  1, 278, :_reduce_434,
  2, 278, :_reduce_435,
  3, 213, :_reduce_436,
  3, 213, :_reduce_437,
  1, 280, :_reduce_438,
  3, 280, :_reduce_439,
  1, 275, :_reduce_440,
  2, 275, :_reduce_441,
  1, 276, :_reduce_442,
  2, 276, :_reduce_443,
  1, 279, :_reduce_444,
  0, 282, :_reduce_445,
  3, 279, :_reduce_446,
  0, 283, :_reduce_447,
  4, 279, :_reduce_448,
  1, 281, :_reduce_449,
  1, 281, :_reduce_450,
  1, 281, :_reduce_451,
  1, 281, :_reduce_none,
  2, 191, :_reduce_453,
  1, 191, :_reduce_454,
  1, 191, :_reduce_455,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  1, 284, :_reduce_none,
  3, 192, :_reduce_460,
  1, 272, :_reduce_461,
  1, 272, :_reduce_462,
  2, 272, :_reduce_463,
  2, 272, :_reduce_464,
  2, 272, :_reduce_465,
  2, 272, :_reduce_466,
  1, 185, :_reduce_467,
  1, 185, :_reduce_468,
  1, 185, :_reduce_469,
  1, 185, :_reduce_470,
  1, 185, :_reduce_471,
  1, 185, :_reduce_472,
  1, 185, :_reduce_473,
  1, 185, :_reduce_474,
  1, 185, :_reduce_475,
  1, 185, :_reduce_476,
  1, 185, :_reduce_477,
  1, 214, :_reduce_478,
  1, 160, :_reduce_479,
  1, 163, :_reduce_480,
  1, 163, :_reduce_none,
  1, 224, :_reduce_482,
  3, 224, :_reduce_483,
  2, 224, :_reduce_484,
  4, 226, :_reduce_485,
  2, 226, :_reduce_486,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  2, 257, :_reduce_489,
  1, 257, :_reduce_490,
  1, 287, :_reduce_491,
  2, 288, :_reduce_492,
  1, 288, :_reduce_493,
  2, 289, :_reduce_494,
  1, 289, :_reduce_495,
  1, 256, :_reduce_496,
  3, 256, :_reduce_497,
  1, 290, :_reduce_498,
  3, 290, :_reduce_499,
  4, 291, :_reduce_500,
  2, 291, :_reduce_501,
  2, 291, :_reduce_502,
  1, 291, :_reduce_503,
  2, 292, :_reduce_504,
  0, 292, :_reduce_505,
  6, 285, :_reduce_506,
  8, 285, :_reduce_507,
  4, 285, :_reduce_508,
  6, 285, :_reduce_509,
  4, 285, :_reduce_510,
  6, 285, :_reduce_511,
  2, 285, :_reduce_512,
  4, 285, :_reduce_513,
  6, 285, :_reduce_514,
  2, 285, :_reduce_515,
  4, 285, :_reduce_516,
  2, 285, :_reduce_517,
  4, 285, :_reduce_518,
  1, 285, :_reduce_519,
  0, 285, :_reduce_520,
  1, 294, :_reduce_none,
  1, 294, :_reduce_522,
  1, 249, :_reduce_523,
  1, 249, :_reduce_524,
  1, 249, :_reduce_525,
  1, 249, :_reduce_526,
  1, 295, :_reduce_527,
  3, 295, :_reduce_528,
  1, 223, :_reduce_none,
  1, 223, :_reduce_none,
  1, 297, :_reduce_531,
  3, 297, :_reduce_532,
  1, 298, :_reduce_533,
  3, 298, :_reduce_534,
  1, 296, :_reduce_none,
  4, 296, :_reduce_536,
  6, 296, :_reduce_537,
  3, 296, :_reduce_538,
  5, 296, :_reduce_539,
  2, 296, :_reduce_540,
  4, 296, :_reduce_541,
  1, 296, :_reduce_542,
  3, 296, :_reduce_543,
  1, 261, :_reduce_544,
  3, 261, :_reduce_545,
  3, 299, :_reduce_546,
  1, 293, :_reduce_547,
  3, 293, :_reduce_548,
  1, 300, :_reduce_none,
  1, 300, :_reduce_none,
  2, 262, :_reduce_551,
  1, 262, :_reduce_552,
  1, 301, :_reduce_none,
  1, 301, :_reduce_none,
  2, 259, :_reduce_555,
  2, 258, :_reduce_556,
  0, 258, :_reduce_557,
  1, 227, :_reduce_558,
  4, 227, :_reduce_559,
  0, 215, :_reduce_560,
  2, 215, :_reduce_561,
  1, 200, :_reduce_562,
  3, 200, :_reduce_563,
  3, 302, :_reduce_564,
  2, 302, :_reduce_565,
  4, 302, :_reduce_566,
  2, 302, :_reduce_567,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 177, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 228, :_reduce_none,
  1, 228, :_reduce_none,
  0, 144, :_reduce_none,
  1, 144, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  0, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 199, :_reduce_none,
  1, 225, :_reduce_none,
  1, 225, :_reduce_none,
  1, 146, :_reduce_none,
  2, 146, :_reduce_none,
  0, 197, :_reduce_591 ]

racc_reduce_n = 592

racc_shift_n = 1036

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :tIDENTIFIER => 50,
  :tFID => 51,
  :tGVAR => 52,
  :tIVAR => 53,
  :tCONSTANT => 54,
  :tLABEL => 55,
  :tCVAR => 56,
  :tNTH_REF => 57,
  :tBACK_REF => 58,
  :tSTRING_CONTENT => 59,
  :tINTEGER => 60,
  :tFLOAT => 61,
  :tREGEXP_END => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tPOW => 65,
  :tCMP => 66,
  :tEQ => 67,
  :tEQQ => 68,
  :tNEQ => 69,
  :tGEQ => 70,
  :tLEQ => 71,
  :tANDOP => 72,
  :tOROP => 73,
  :tMATCH => 74,
  :tNMATCH => 75,
  :tJSDOT => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tRBRACK => 92,
  :tLBRACE => 93,
  :tLBRACE_ARG => 94,
  :tSTAR => 95,
  :tSTAR2 => 96,
  :tAMPER => 97,
  :tAMPER2 => 98,
  :tTILDE => 99,
  :tPERCENT => 100,
  :tDIVIDE => 101,
  :tPLUS => 102,
  :tMINUS => 103,
  :tLT => 104,
  :tGT => 105,
  :tPIPE => 106,
  :tBANG => 107,
  :tCARET => 108,
  :tLCURLY => 109,
  :tRCURLY => 110,
  :tBACK_REF2 => 111,
  :tSYMBEG => 112,
  :tSTRING_BEG => 113,
  :tXSTRING_BEG => 114,
  :tREGEXP_BEG => 115,
  :tWORDS_BEG => 116,
  :tAWORDS_BEG => 117,
  :tSTRING_DBEG => 118,
  :tSTRING_DVAR => 119,
  :tSTRING_END => 120,
  :tSTRING => 121,
  :tSYMBOL => 122,
  :tNL => 123,
  :tEH => 124,
  :tCOLON => 125,
  :tCOMMA => 126,
  :tSPACE => 127,
  :tSEMI => 128,
  :tLAMBDA => 129,
  :tLAMBEG => 130,
  :tLBRACK2 => 131,
  :tLBRACK => 132,
  :tJSLBRACK => 133,
  :tDSTAR => 134,
  :tLABEL_END => 135,
  :tEQL => 136,
  :tLOWEST => 137,
  "-@NUM" => 138,
  "+@NUM" => 139 }

racc_nt_base = 140

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tJSDOT",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tJSLBRACK",
  "tDSTAR",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "\"+@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "dsym",
  "opt_nl",
  "primary",
  "@2",
  "@3",
  "none",
  "args",
  "trailer",
  "assocs",
  "block_arg",
  "paren_args",
  "opt_call_args",
  "rparen",
  "opt_paren_args",
  "opt_block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "@21",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@22",
  "operation3",
  "@23",
  "@24",
  "cases",
  "@25",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@26",
  "@27",
  "sym",
  "f_args",
  "kwrest_mark",
  "f_label",
  "f_kw",
  "f_block_kw",
  "f_kwarg",
  "args_tail",
  "opt_args_tail",
  "f_optarg",
  "f_norm_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

# reduce 25 omitted

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

# reduce 29 omitted

def _reduce_30(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

def _reduce_34(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_36(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

# reduce 40 omitted

def _reduce_41(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_42(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_43(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_44(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_iter(val[1], val[2])
                    
    result
end

def _reduce_54(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_55(val, _values, result)
                      result = new_call(nil, val[0], val[1]) << val[2]
                    
    result
end

def _reduce_56(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_57(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3]) << val[4]
                    
    result
end

def _reduce_58(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_59(val, _values, result)
                      result = new_call(val[0], val[2], val[3]) << val[4]
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_61(val, _values, result)
                      result = new_call(val[0], val[2], val[3]) << val[4]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_63(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_65(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_66(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_68(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_69(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_70(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_71(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_72(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_73(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

def _reduce_74(val, _values, result)
                     result = (val[0] << s(:splat, val[2])).concat(val[4].children)
                   
    result
end

def _reduce_75(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

def _reduce_76(val, _values, result)
                      result = (val[0] << s(:splat)).concat(val[3].children)
                    
    result
end

def _reduce_77(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_78(val, _values, result)
                      result = s(:array, s(:splat, val[1])).concat(val[3].children)
                    
    result
end

def _reduce_79(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

def _reduce_80(val, _values, result)
                      result = s(:array, s(:splat)).concat(val[2].children)
                    
    result
end

def _reduce_81(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_82(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_83(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_84(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_85(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_86(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_87(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_88(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

def _reduce_95(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_96(val, _values, result)
                      result = new_js_attrasgn(val[0], val[2])
                    
    result
end

def _reduce_97(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_100(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_101(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_102(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 103 omitted

# reduce 104 omitted

def _reduce_105(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_106(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_107(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

def _reduce_111(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_112(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_113(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 114 omitted

# reduce 115 omitted

def _reduce_116(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_117(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

def _reduce_192(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_193(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_196(val, _values, result)
                      raise ".JS[...] #{val[4]} is not supported"
                    
    result
end

def _reduce_197(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 198 omitted

# reduce 199 omitted

# reduce 200 omitted

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_call new_binary_call(new_int(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_call new_binary_call(new_float(val[1]), val[2], val[3]), [:"-@", []], []
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      if [:int, :float].include? val[1].type
                        result = val[1]
                      end
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_226(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_227(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_228(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_229(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_230(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_231(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_232(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_233(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_234(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_235(val, _values, result)
 lexer.cond_push 1 
    result
end

def _reduce_236(val, _values, result)
 lexer.cond_pop 
    result
end

def _reduce_237(val, _values, result)
                      result = new_if(val[1], val[0], val[3], val[6])
                    
    result
end

# reduce 238 omitted

# reduce 239 omitted

def _reduce_240(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_243(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_244(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_245(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_246(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 247 omitted

def _reduce_248(val, _values, result)
                      result = []
                    
    result
end

# reduce 249 omitted

def _reduce_250(val, _values, result)
                      result = []
                    
    result
end

# reduce 251 omitted

def _reduce_252(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_257(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_258(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                      result << val[3] if val[3]
                    
    result
end

def _reduce_259(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

def _reduce_260(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_261(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

def _reduce_262(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_263(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_264(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_265(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_266(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_267(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_268(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_269(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_270(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

def _reduce_281(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_283(val, _values, result)
                      lexer.lex_state = :expr_endarg
                    
    result
end

def _reduce_284(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_285(val, _values, result)
                      lexer.lex_state = :expr_endarg
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_287(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_288(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_289(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_js_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_292(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_293(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_295(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_296(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_301(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 302 omitted

def _reduce_303(val, _values, result)
                      result = new_method_call_with_block(val[0], val[1])
                    
    result
end

def _reduce_304(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_306(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_307(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_308(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_309(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_310(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_311(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_312(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_313(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_314(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_315(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_316(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_317(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_319(val, _values, result)
                      # ...
                    
    result
end

def _reduce_320(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_321(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_322(val, _values, result)
                      # ...
                    
    result
end

def _reduce_323(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_324(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_325(val, _values, result)
                      # ...
                    
    result
end

def _reduce_326(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_327(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_328(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_329(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_330(val, _values, result)
                      push_scope
                      lexer.lex_state = :expr_endfn
                    
    result
end

def _reduce_331(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_332(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_333(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_334(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 335 omitted

# reduce 336 omitted

# reduce 337 omitted

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

# reduce 341 omitted

# reduce 342 omitted

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = []
                    
    result
end

def _reduce_345(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_346(val, _values, result)
                      result = [ val[0] ]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = new_shadowarg(val[0])
                    
    result
end

# reduce 349 omitted

def _reduce_350(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(*val[1])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(*val[0])
                    
    result
end

# reduce 354 omitted

def _reduce_355(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_356(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_357(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 359 omitted

def _reduce_360(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_361(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_362(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_363(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 364 omitted

def _reduce_365(val, _values, result)
                      result = new_block_args(nil, [val[1]])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_367(val, _values, result)
                      val[1] << val[2]
                      result = new_block_args(*val[1])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = [val[0], val[2], val[3]]
                    
    result
end

def _reduce_369(val, _values, result)
                      result = [val[0], nil, val[1]]
                    
    result
end

def _reduce_370(val, _values, result)
                      result = [nil, val[0], val[1]]
                    
    result
end

def _reduce_371(val, _values, result)
                      result = [nil, nil, val[0]]
                    
    result
end

def _reduce_372(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_373(val, _values, result)
                      nil
                    
    result
end

def _reduce_374(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = [val[0] + optarg + restarg, val[5]]
                    
    result
end

def _reduce_375(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = [val[0] + optarg + restarg + val[6], val[7]]
                    
    result
end

def _reduce_376(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = [val[0] + optarg, val[3]]
                    
    result
end

def _reduce_377(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = [val[0] + optarg + val[4], val[5]]
                    
    result
end

def _reduce_378(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = [val[0] + restarg, val[3]]
                    
    result
end

def _reduce_379(val, _values, result)
                      val[0] << nil
                      result = [val[0], nil]
                    
    result
end

def _reduce_380(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = [val[0] + restarg + val[4], val[5]]
                    
    result
end

def _reduce_381(val, _values, result)
                      result = [val[0], val[1]]
                    
    result
end

def _reduce_382(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = [optarg + restarg, val[3]]
                    
    result
end

def _reduce_383(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = [optarg + restarg + val[4], val[5]]
                    
    result
end

def _reduce_384(val, _values, result)
                      optarg= new_optarg(val[0])
                      result = [optarg, val[1]]
                    
    result
end

def _reduce_385(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = [optarg + val[2], val[3]]
                    
    result
end

def _reduce_386(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = [restarg, val[1]]
                    
    result
end

def _reduce_387(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = [restarg + val[2], val[3]]
                    
    result
end

def _reduce_388(val, _values, result)
                      result = [nil, val[0]]
                    
    result
end

def _reduce_389(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_390(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_391(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 392 omitted

# reduce 393 omitted

# reduce 394 omitted

def _reduce_395(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_js_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_398(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_399(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_400(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_401(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_402(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_403(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_404(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_405(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_406(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_407(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_408(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push(*val[5]) if val[5]
                    
    result
end

def _reduce_409(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 410 omitted

def _reduce_411(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.concat val[5] if val[5]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_413(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 414 omitted

# reduce 415 omitted

def _reduce_416(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_417(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_418(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 419 omitted

# reduce 420 omitted

# reduce 421 omitted

# reduce 422 omitted

def _reduce_423(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 424 omitted

def _reduce_425(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_426(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_427(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_430(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_431(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_432(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_433(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_434(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_435(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_437(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_438(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_439(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_440(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_441(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_442(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_443(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_445(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_446(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_447(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_448(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_449(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_450(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_451(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 452 omitted

def _reduce_453(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = val[0]
                    
    result
end

# reduce 456 omitted

# reduce 457 omitted

# reduce 458 omitted

# reduce 459 omitted

def _reduce_460(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

def _reduce_463(val, _values, result)
                    result = negate_num(new_int(val[1]))
                  
    result
end

def _reduce_464(val, _values, result)
                    result = negate_num(new_float(val[1]))
                  
    result
end

def _reduce_465(val, _values, result)
                    result = new_int(val[1])
                  
    result
end

def _reduce_466(val, _values, result)
                    result = new_float(val[1])
                  
    result
end

def _reduce_467(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_468(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_469(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_470(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_471(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_472(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_473(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_475(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_477(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_478(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_479(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_480(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 481 omitted

def _reduce_482(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_483(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_485(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_486(val, _values, result)
                      result = val[0]
                      lexer.lex_state = :expr_beg
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = new_kwrestarg(val[1])
                    
    result
end

def _reduce_490(val, _values, result)
                      result = new_kwrestarg()
                    
    result
end

def _reduce_491(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

def _reduce_492(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_493(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_494(val, _values, result)
                      result = new_kwoptarg(val[0], val[1])
                    
    result
end

def _reduce_495(val, _values, result)
                      result = new_kwarg(val[0])
                    
    result
end

def _reduce_496(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0]
                      result << val[2]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = new_args_tail(val[0], val[2], val[3])
                    
    result
end

def _reduce_501(val, _values, result)
                      result = new_args_tail(val[0], nil, val[1])
                    
    result
end

def _reduce_502(val, _values, result)
                      result = new_args_tail(nil, val[0], val[1])
                    
    result
end

def _reduce_503(val, _values, result)
                      result = new_args_tail(nil, nil, val[0])
                    
    result
end

def _reduce_504(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_505(val, _values, result)
                      result = new_args_tail(nil, nil, nil)
                    
    result
end

def _reduce_506(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg, val[5])
                    
    result
end

def _reduce_507(val, _values, result)
                      optarg = new_optarg(val[2])
                      restarg = new_restarg(val[4])
                      result = new_args(val[0] + optarg + restarg + val[6], val[7])
                    
    result
end

def _reduce_508(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg, val[3])
                    
    result
end

def _reduce_509(val, _values, result)
                      optarg = new_optarg(val[2])
                      result = new_args(val[0] + optarg + val[4], val[5])
                    
    result
end

def _reduce_510(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg, val[3])
                    
    result
end

def _reduce_511(val, _values, result)
                      restarg = new_restarg(val[2])
                      result = new_args(val[0] + restarg + val[4], val[5])
                    
    result
end

def _reduce_512(val, _values, result)
                      result = new_args(val[0], val[1])
                    
    result
end

def _reduce_513(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg, val[3])
                    
    result
end

def _reduce_514(val, _values, result)
                      optarg = new_optarg(val[0])
                      restarg = new_restarg(val[2])
                      result = new_args(optarg + restarg + val[4], val[5])
                    
    result
end

def _reduce_515(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_516(val, _values, result)
                      optarg = new_optarg(val[0])
                      result = new_args(optarg + val[2], val[3])
                    
    result
end

def _reduce_517(val, _values, result)
                      optarg = new_restarg(val[0])
                      result = new_args(optarg, val[1])
                    
    result
end

def _reduce_518(val, _values, result)
                      restarg = new_restarg(val[0])
                      result = new_args(restarg + val[2], val[3])
                    
    result
end

def _reduce_519(val, _values, result)
                      result = new_args(nil, val[0])
                    
    result
end

def _reduce_520(val, _values, result)
                      result = new_args(nil, nil)
                    
    result
end

# reduce 521 omitted

def _reduce_522(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_523(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_524(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_525(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_526(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_527(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_528(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 529 omitted

# reduce 530 omitted

def _reduce_531(val, _values, result)
                      result = s(:arg, val[0])
                    
    result
end

def _reduce_532(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_533(val, _values, result)
                      result = s(:mlhs, val[0])
                    
    result
end

def _reduce_534(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 535 omitted

def _reduce_536(val, _values, result)
                      result = val[0].push(s(:restarg, val[3]))
                    
    result
end

def _reduce_537(val, _values, result)
                      result = val[0].push(s(:restarg, val[3])).concat(val[5][1..-1])
                    
    result
end

def _reduce_538(val, _values, result)
                      result = val[0].push(s(:restarg))
                    
    result
end

def _reduce_539(val, _values, result)
                      result = val[0].push(s(:restarg)).concat(val[4][1..-1])
                    
    result
end

def _reduce_540(val, _values, result)
                      result = s(:mlhs, s(:restarg, val[1]))
                    
    result
end

def _reduce_541(val, _values, result)
                      val[3].insert(1, s(:restarg, val[1]))
                      result = val[3]
                    
    result
end

def _reduce_542(val, _values, result)
                      result = s(:mlhs, s(:restarg))
                    
    result
end

def _reduce_543(val, _values, result)
                      val[2].insert(1, s(:restarg))
                      result = val[2]
                    
    result
end

def _reduce_544(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_545(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_546(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_547(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_548(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 549 omitted

# reduce 550 omitted

def _reduce_551(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_552(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 553 omitted

# reduce 554 omitted

def _reduce_555(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_556(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_557(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_558(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_559(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_560(val, _values, result)
                      result = []
                    
    result
end

def _reduce_561(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_562(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_563(val, _values, result)
                      result = val[0].concat(val[2])
                    
    result
end

def _reduce_564(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_565(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

def _reduce_566(val, _values, result)
                      result = [s(:sym, source(val[1]).to_sym), val[3]]
                    
    result
end

def _reduce_567(val, _values, result)
                      result = [new_kwsplat(val[1])]
                    
    result
end

# reduce 568 omitted

# reduce 569 omitted

# reduce 570 omitted

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

# reduce 585 omitted

# reduce 586 omitted

# reduce 587 omitted

# reduce 588 omitted

# reduce 589 omitted

# reduce 590 omitted

def _reduce_591(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
