# NOTE: run bin/format-filters after changing this file
opal_unsupported_filter "taint" do
  fails "Array#pack with format 'A' returns a tainted string when a pack argument is tainted"
  fails "Array#pack with format 'A' returns a tainted string when an empty format is tainted"
  fails "Array#pack with format 'A' returns a tainted string when the format is tainted"
  fails "Array#pack with format 'A' returns a trusted string when the array is untrusted"
  fails "Array#pack with format 'A' returns a untrusted string when a pack argument is untrusted"
  fails "Array#pack with format 'A' returns a untrusted string when the empty format is untrusted"
  fails "Array#pack with format 'A' returns a untrusted string when the format is untrusted"
  fails "Array#pack with format 'A' taints the output string if the format string is tainted"
  fails "Array#pack with format 'C' taints the output string if the format string is tainted"
  fails "Array#pack with format 'L' taints the output string if the format string is tainted"
  fails "Array#pack with format 'U' taints the output string if the format string is tainted"
  fails "Array#pack with format 'a' returns a tainted string when a pack argument is tainted"
  fails "Array#pack with format 'a' returns a tainted string when an empty format is tainted"
  fails "Array#pack with format 'a' returns a tainted string when the format is tainted"
  fails "Array#pack with format 'a' returns a trusted string when the array is untrusted"
  fails "Array#pack with format 'a' returns a untrusted string when a pack argument is untrusted"
  fails "Array#pack with format 'a' returns a untrusted string when the empty format is untrusted"
  fails "Array#pack with format 'a' returns a untrusted string when the format is untrusted"
  fails "Array#pack with format 'a' taints the output string if the format string is tainted"
  fails "Array#pack with format 'c' taints the output string if the format string is tainted"
  fails "Array#pack with format 'l' taints the output string if the format string is tainted"
  fails "Array#pack with format 'u' does not return a tainted string when the array is tainted" # RuntimeError: Unsupported pack directive "u" (no chunk reader defined)
  fails "Array#pack with format 'u' returns a tainted string when a pack argument is tainted" # RuntimeError: Unsupported pack directive "u" (no chunk reader defined)
  fails "Array#pack with format 'u' returns a tainted string when an empty format is tainted" # Expected false to be true
  fails "Array#pack with format 'u' returns a tainted string when the format is tainted" # RuntimeError: Unsupported pack directive "u" (no chunk reader defined)
  fails "Array#pack with format 'u' returns a trusted string when the array is untrusted" # NoMethodError: undefined method `untrust' for ["abcd", 32]
  fails "Array#pack with format 'u' returns a untrusted string when a pack argument is untrusted" # NoMethodError: undefined method `untrust' for "abcd"
  fails "Array#pack with format 'u' returns a untrusted string when the empty format is untrusted" # NoMethodError: undefined method `untrust' for ""
  fails "Array#pack with format 'u' returns a untrusted string when the format is untrusted" # NoMethodError: undefined method `untrust' for "u3C"
  fails "Array#pack with format 'u' taints the output string if the format string is tainted"
  fails "Hash#reject with extra state does not taint the resulting hash"
  fails "Kernel#inspect returns a tainted string if self is tainted"
  fails "Module#append_features copies own tainted status to the given module"
  fails "Module#append_features copies own untrusted status to the given module"
  fails "Module#extend_object does not copy own tainted status to the given object"
  fails "Module#extend_object does not copy own untrusted status to the given object"
  fails "Module#prepend_features copies own tainted status to the given module"
  fails "Module#prepend_features copies own untrusted status to the given module"
  fails "Ruby character strings taints the result of interpolation when an interpolated value is tainted"
  fails "Ruby character strings untrusts the result of interpolation when an interpolated value is untrusted"
  fails "String#% always taints the result when the format string is tainted"
  fails "String#% doesn't taint the result for %E when argument is tainted"
  fails "String#% doesn't taint the result for %G when argument is tainted"
  fails "String#% doesn't taint the result for %e when argument is tainted"
  fails "String#% doesn't taint the result for %f when argument is tainted"
  fails "String#% doesn't taint the result for %g when argument is tainted"
  fails "String#% taints result for %p when argument.inspect is tainted"
  fails "String#% taints result for %s when argument is tainted"
  fails "String#* always taints the result when self is tainted"
  fails "String#+ taints the result when self or other is tainted"
  fails "String#<< taints self if other is tainted"
  fails "String#<< untrusts self if other is untrusted"
  fails "String#[] with Range always taints resulting strings when self is tainted"
  fails "String#[] with Regexp always taints resulting strings when self or regexp is tainted"
  fails "String#[] with Regexp returns an untrusted string if the regexp is untrusted"
  fails "String#[] with Regexp, index always taints resulting strings when self or regexp is tainted"
  fails "String#[] with String taints resulting strings when other is tainted"
  fails "String#[] with index, length always taints resulting strings when self is tainted"
  fails "String#[]= with Fixnum index taints self if other_str is tainted"
  fails "String#[]= with Fixnum index, count taints self if other_str is tainted"
  fails "String#[]= with Integer index taints self if other_str is tainted" # NotImplementedError: String#[]= not supported. Mutable String methods are not supported in Opal.
  fails "String#[]= with Integer index, count taints self if other_str is tainted" # NotImplementedError: String#[]= not supported. Mutable String methods are not supported in Opal.
  fails "String#byteslice with Range always taints resulting strings when self is tainted"
  fails "String#byteslice with index, length always taints resulting strings when self is tainted"
  fails "String#capitalize taints resulting string when self is tainted"
  fails "String#center with length, padding taints result when self or padstr is tainted"
  fails "String#center with length, padding when padding is tainted and self is untainted returns a tainted string if and only if length is longer than self"
  fails "String#chomp when passed '' taints the result if self is tainted"
  fails "String#chomp when passed '\\n' taints the result if self is tainted"
  fails "String#chomp when passed a String does not taint the result when the argument is tainted"
  fails "String#chomp when passed a String taints the result if self is tainted"
  fails "String#chomp when passed nil returns a copy of the String"
  fails "String#chomp when passed nil taints the result if self is tainted"
  fails "String#chomp when passed no argument taints the result if self is tainted"
  fails "String#chomp! when passed '' taints the result if self is tainted"
  fails "String#chomp! when passed '\\n' taints the result if self is tainted"
  fails "String#chomp! when passed a String does not taint the result when the argument is tainted"
  fails "String#chomp! when passed a String taints the result if self is tainted"
  fails "String#chomp! when passed no argument taints the result if self is tainted"
  fails "String#chop taints result when self is tainted"
  fails "String#chop untrusts result when self is untrusted"
  fails "String#concat taints self if other is tainted"
  fails "String#concat untrusts self if other is untrusted"
  fails "String#delete taints result when self is tainted"
  fails "String#delete_prefix taints resulting strings when other is tainted" # NoMethodError: undefined method `delete_prefix' for "hello":String
  fails "String#delete_suffix taints resulting strings when other is tainted" # NoMethodError: undefined method `delete_suffix' for "hello":String
  fails "String#downcase taints result when self is tainted"
  fails "String#dump taints the result if self is tainted"
  fails "String#dump untrusts the result if self is untrusted"
  fails "String#each_line taints substrings that are passed to the block if self is tainted"
  fails "String#gsub with pattern and Hash taints the result if a hash value is tainted"
  fails "String#gsub with pattern and Hash taints the result if the original string is tainted"
  fails "String#gsub with pattern and Hash untrusts the result if a hash value is untrusted"
  fails "String#gsub with pattern and Hash untrusts the result if the original string is untrusted"
  fails "String#gsub with pattern and block untrusts the result if the original string or replacement is untrusted"
  fails "String#gsub with pattern and replacement taints the result if the original string or replacement is tainted"
  fails "String#gsub with pattern and replacement untrusts the result if the original string or replacement is untrusted"
  fails "String#gsub! with pattern and Hash keeps tainted state"
  fails "String#gsub! with pattern and Hash keeps untrusted state"
  fails "String#gsub! with pattern and Hash taints self if a hash value is tainted"
  fails "String#gsub! with pattern and Hash untrusts self if a hash value is untrusted"
  fails "String#gsub! with pattern and block taints self if block's result is tainted"
  fails "String#gsub! with pattern and block untrusts self if block's result is untrusted"
  fails "String#gsub! with pattern and replacement taints self if replacement is tainted"
  fails "String#gsub! with pattern and replacement untrusts self if replacement is untrusted"
  fails "String#initialize with an argument does not trust self if other is trusted"
  fails "String#initialize with an argument does not untaint self if other is untainted"
  fails "String#initialize with an argument taints self if other is tainted"
  fails "String#initialize with an argument untrusts self if other is untrusted"
  fails "String#insert with index, other taints self if string to insert is tainted"
  fails "String#inspect taints the result if self is tainted"
  fails "String#inspect untrusts the result if self is untrusted"
  fails "String#lines taints substrings that are passed to the block if self is tainted"
  fails "String#ljust with length, padding taints result when self or padstr is tainted"
  fails "String#ljust with length, padding when padding is tainted and self is untainted returns a tainted string if and only if length is longer than self"
  fails "String#lstrip taints the result when self is tainted"
  fails "String#next taints the result if self is tainted"
  fails "String#prepend taints self if other is tainted"
  fails "String#replace does not trust self if other is trusted"
  fails "String#replace does not untaint self if other is untainted"
  fails "String#replace taints self if other is tainted"
  fails "String#replace untrusts self if other is untrusted"
  fails "String#reverse taints the result if self is tainted"
  fails "String#rjust with length, padding taints result when self or padstr is tainted"
  fails "String#rjust with length, padding when padding is tainted and self is untainted returns a tainted string if and only if length is longer than self"
  fails "String#rstrip taints the result when self is tainted"
  fails "String#scan taints the results if the Regexp argument is tainted"
  fails "String#scan taints the results if the String argument is tainted"
  fails "String#scan taints the results when passed a Regexp argument if self is tainted"
  fails "String#scan taints the results when passed a String argument if self is tainted"
  fails "String#scan with pattern and block taints the results if the Regexp argument is tainted"
  fails "String#scan with pattern and block taints the results if the String argument is tainted"
  fails "String#scan with pattern and block taints the results when passed a Regexp argument if self is tainted"
  fails "String#scan with pattern and block taints the results when passed a String argument if self is tainted"
  fails "String#slice with Range always taints resulting strings when self is tainted"
  fails "String#slice with Regexp always taints resulting strings when self or regexp is tainted"
  fails "String#slice with Regexp returns an untrusted string if the regexp is untrusted"
  fails "String#slice with Regexp, index always taints resulting strings when self or regexp is tainted"
  fails "String#slice with String taints resulting strings when other is tainted"
  fails "String#slice with index, length always taints resulting strings when self is tainted"
  fails "String#slice! Range always taints resulting strings when self is tainted"
  fails "String#slice! with Regexp always taints resulting strings when self or regexp is tainted"
  fails "String#slice! with Regexp doesn't taint self when regexp is tainted"
  fails "String#slice! with Regexp, index always taints resulting strings when self or regexp is tainted"
  fails "String#slice! with Regexp, index doesn't taint self when regexp is tainted"
  fails "String#slice! with String taints resulting strings when other is tainted"
  fails "String#slice! with index, length always taints resulting strings when self is tainted"
  fails "String#split with Regexp doesn't taints the resulting strings if the Regexp is tainted"
  fails "String#split with Regexp taints an empty string if self is tainted"
  fails "String#split with Regexp taints the resulting strings if self is tainted"
  fails "String#split with String taints the resulting strings if self is tainted"
  fails "String#squeeze taints the result when self is tainted"
  fails "String#strip taints the result when self is tainted"
  fails "String#sub with pattern and Hash taints the result if a hash value is tainted"
  fails "String#sub with pattern and Hash taints the result if the original string is tainted"
  fails "String#sub with pattern and Hash untrusts the result if a hash value is untrusted"
  fails "String#sub with pattern and Hash untrusts the result if the original string is untrusted"
  fails "String#sub with pattern and block taints the result if the original string or replacement is tainted"
  fails "String#sub with pattern, replacement taints the result if the original string or replacement is tainted"
  fails "String#sub! with pattern and Hash keeps tainted state"
  fails "String#sub! with pattern and Hash keeps untrusted state"
  fails "String#sub! with pattern and Hash taints self if a hash value is tainted"
  fails "String#sub! with pattern and Hash untrusts self if a hash value is untrusted"
  fails "String#sub! with pattern and block taints self if block's result is tainted"
  fails "String#sub! with pattern, replacement taints self if replacement is tainted"
  fails "String#succ taints the result if self is tainted"
  fails "String#swapcase taints resulting string when self is tainted"
  fails "String#to_s taints the result when self is tainted"
  fails "String#to_str taints the result when self is tainted"
  fails "String#tr taints the result when self is tainted"
  fails "String#tr_s taints the result when self is tainted"
  fails "String#unpack with format 'A' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "A2"
  fails "String#unpack with format 'A' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'A' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'A' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'A' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "A2"
  fails "String#unpack with format 'A' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'A' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'A' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'A' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'B' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "B2"
  fails "String#unpack with format 'B' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'B' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'B' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'B' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "B2"
  fails "String#unpack with format 'B' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'B' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'B' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'B' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'H' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "H2"
  fails "String#unpack with format 'H' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'H' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'H' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'H' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "H2"
  fails "String#unpack with format 'H' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'H' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'H' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'H' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'M' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "M2"
  fails "String#unpack with format 'M' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'M' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'M' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'M' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "M2"
  fails "String#unpack with format 'M' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'M' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'M' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'M' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'U' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "U2"
  fails "String#unpack with format 'U' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'U' does not untrust returned arrays if given an trusted packed string" # Exception: Cannot read property '$__id__' of undefined
  fails "String#unpack with format 'U' does not untrust returned arrays if given an untrusted format string" # Exception: Cannot read property '$__id__' of undefined
  fails "String#unpack with format 'U' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "U2"
  fails "String#unpack with format 'U' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for nil
  fails "String#unpack with format 'U' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for nil
  fails "String#unpack with format 'U' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'U' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'Z' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "Z2"
  fails "String#unpack with format 'Z' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'Z' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'Z' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'Z' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "Z2"
  fails "String#unpack with format 'Z' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'Z' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'Z' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'Z' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'a' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "a2"
  fails "String#unpack with format 'a' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'a' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'a' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'a' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "a2"
  fails "String#unpack with format 'a' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'a' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'a' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'a' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'b' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "b2"
  fails "String#unpack with format 'b' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'b' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'b' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'b' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "b2"
  fails "String#unpack with format 'b' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'b' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'b' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'b' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'h' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "h2"
  fails "String#unpack with format 'h' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'h' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'h' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'h' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "h2"
  fails "String#unpack with format 'h' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'h' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'h' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'h' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'm' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "m2"
  fails "String#unpack with format 'm' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'm' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'm' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'm' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "m2"
  fails "String#unpack with format 'm' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'm' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'm' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'm' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'u' does not untrust returned arrays if given a untrusted format string" # NoMethodError: undefined method `untrust' for "u2"
  fails "String#unpack with format 'u' does not untrust returned arrays if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#unpack with format 'u' does not untrust returned arrays if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'u' does not untrust returned arrays if given an untrusted format string" # NoMethodError: undefined method `untrusted?' for [""]
  fails "String#unpack with format 'u' does not untrust returned strings if given a untrusted format string" # NoMethodError: undefined method `untrust' for "u2"
  fails "String#unpack with format 'u' does not untrust returned strings if given an trusted packed string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'u' does not untrust returned strings if given an untainted format string" # NoMethodError: undefined method `untrusted?' for ""
  fails "String#unpack with format 'u' taints returned strings if given a tainted packed string" # Expected false to be true
  fails "String#unpack with format 'u' untrusts returned strings if given a untrusted packed string" # NoMethodError: undefined method `untrust' for ""
  fails "String#upcase taints result when self is tainted"
  fails "StringScanner#getbyte taints the returned String if the input was tainted"
  fails "StringScanner#getch taints the returned String if the input was tainted"
  fails "StringScanner#matched taints the returned String if the input was tainted"
  fails "StringScanner#peek taints the returned String if the input was tainted"
  fails "StringScanner#peep taints the returned String if the input was tainted"
  fails "StringScanner#post_match taints the returned String if the input was tainted"
  fails "StringScanner#pre_match taints the returned String if the input was tainted"
  fails "StringScanner#rest taints the returned String if the input was tainted"
end
